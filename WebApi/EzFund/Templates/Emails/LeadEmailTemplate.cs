// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GA.BDC.WebApi.EzFund.Templates.Emails
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System.Globalization;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class LeadEmailTemplate : LeadEmailTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r\n<html>\r\n<head>\r\n " +
                    "   <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\">\r\n   " +
                    " <meta content=\"MSHTML 6.00.2800.1498\" name=\"GENERATOR\">\r\n    <title>");
            
            #line 12 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Subject));
            
            #line default
            #line hidden
            this.Write("</title>\r\n</head>\r\n<body bgcolor=\"#FAFAFA\" style=\"-webkit-text-size-adjust: 100%;" +
                    " -ms-text-size-adjust: 100%; height: 100% !important; width: 100% !important; ba" +
                    "ckground-color: #FAFAFA; margin: 0; padding: 0;\">\r\n   <center>\r\n      \r\n       <" +
                    "table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"bodyTable\" s" +
                    "tyle=\"-ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; background-col" +
                    "or: #FAFAFA; border-collapse: collapse !important; height: 100% !important; marg" +
                    "in: 0; mso-table-lspace: 0pt; mso-table-rspace: 0pt; padding: 0; width: 100% !im" +
                    "portant\" width=\"100%\">\r\n           <tbody>\r\n               <tr>\r\n               " +
                    "    <td align=\"center\" id=\"bodyCell\" style=\"-webkit-text-size-adjust: 100%; -ms-" +
                    "text-size-adjust: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; height: 10" +
                    "0% !important; width: 100% !important; margin: 0; padding: 20px;\" valign=\"top\">\r" +
                    "\n                       <!-- BEGIN TEMPLATE // -->\r\n                       <tabl" +
                    "e border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"templateContainer\" style=\"-webk" +
                    "it-text-size-adjust: 100%; -ms-text-size-adjust: 100%; mso-table-lspace: 0pt; ms" +
                    "o-table-rspace: 0pt; border-collapse: collapse !important; width: 600px; border:" +
                    " 1px solid #dddddd;\">\r\n                           <tbody>\r\n                     " +
                    "          <tr>\r\n                                   <td align=\"center\" style=\"-we" +
                    "bkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; mso-table-lspace: 0pt; " +
                    "mso-table-rspace: 0pt;\" valign=\"top\">\r\n                                       <!" +
                    "-- BEGIN BODY // -->\r\n                                       <table border=\"0\" c" +
                    "ellpadding=\"0\" cellspacing=\"0\" id=\"templateBody\" style=\"-ms-text-size-adjust: 10" +
                    "0%; -webkit-text-size-adjust: 100%; background-color: #FFFFFF; border-bottom-col" +
                    "or: #CCCCCC; border-bottom-style: solid; border-bottom-width: 1px; border-collap" +
                    "se: collapse !important; border-top-color: #FFFFFF; border-top-style: solid; bor" +
                    "der-top-width: 1px; mso-table-lspace: 0pt; mso-table-rspace: 0pt\" width=\"100%\">\r" +
                    "\n                                           <tbody>\r\n                           " +
                    "                    <tr>\r\n                                                   <td" +
                    " pardot-region=\"body_content\" align=\"left\" class=\"bodyContent\" style=\"color: rgb" +
                    "(128, 128, 128); font-family: Helvetica; font-size: 14px; line-height: 21px; tex" +
                    "t-align: left; padding: 20px;\" valign=\"top\" pardot-data=\"\">\r\n                   " +
                    "                                    <p dir=\"ltr\" style=\"line-height: 1.15; margi" +
                    "n-top: 0pt; margin-bottom: 0pt;\">\r\n                                             " +
                    "              <table style=\"width: 70%\">\r\n                                      " +
                    "                         \r\n                                                     " +
                    "          \r\n                                                               \r\n   " +
                    "                                                            <tr>\r\n              " +
                    "                                                     <td style=\"font-family: Hel" +
                    "vetica; font-size: 14px;\"><strong>Lead Id</strong></td>\r\n                       " +
                    "                                            <td style=\"font-family: Helvetica; f" +
                    "ont-size: 14px;\"><strong>");
            
            #line 38 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.SeqNbr));
            
            #line default
            #line hidden
            this.Write(@"</strong></td>
                                                               </tr>

															   
                                                               
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Name</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 45 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.CtctNme));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                                                                                         
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Email Address</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 50 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.EmlTxt));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Group Name</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 54 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.OrgNme));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Address</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 58 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.Addr1Txt));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">City</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 62 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.CityNme));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">State/Province</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 66 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.StCde));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                              
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Zip / Postal Code</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 71 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.ZipCde));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Day Phone</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 75 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.Ph1Nbr));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>                                                            
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Group Members</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 79 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.OrgMembQtyTxt));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>

															   <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Starting</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 84 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.SlsStrtTxt));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
															   <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Amount To Raise</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 88 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.TargPrftAmtTxt));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Referral Url</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 92 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.ReferralUrl));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                               <tr>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">Notes</td>
                                                                   <td style=""font-family: Helvetica; font-size: 14px;"">");
            
            #line 96 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\EzFund\Templates\Emails\LeadEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.CmntTxt));
            
            #line default
            #line hidden
            this.Write(@"</td>
                                                               </tr>
                                                           </table>                                                                                                               
                                                       </p>
                                                   </td>
                                               </tr>
                                           </tbody>
                                       </table>
                                       <!-- // END BODY -->
                                   </td>
                               </tr>
                           </tbody>
                       </table>
                       <!-- // END TEMPLATE -->
                   </td>
               </tr>
           </tbody>
       </table>
   </center>
</body>
</html>");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class LeadEmailTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
