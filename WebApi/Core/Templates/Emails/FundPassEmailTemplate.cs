// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GA.BDC.WebApi.Fundraising.Core.Templates.Emails
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System.Globalization;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\FundPassEmailTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class FundPassEmailTemplate : FundPassEmailTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.0 Transitional//EN"">
<title>Fund-Pass Promotion</title>
<link href=""https://fonts.googleapis.com/css?family=Montserrat:400,700"" rel=""stylesheet"">
<html>
<head>
    <meta http-equiv=""content-type"" content=""text/html; charset=ISO-8859-1"">
    <meta content=""MSHTML 6.00.2800.1498"" name=""GENERATOR"">
    <title>");
            
            #line 14 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\FundPassEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Subject));
            
            #line default
            #line hidden
            this.Write("</title>\r\n</head>\r\n<body bgcolor=\"#FAFAFA\" style=\"-webkit-text-size-adjust: 100%;" +
                    " -ms-text-size-adjust: 100%; height: 100% !important; width: 100% !important;bac" +
                    "kground-color:#FFF; margin: 0; padding: 0;\">\r\n   <center>\r\n      <div style=\"fon" +
                    "t-family: Arial; font-size: 13px;\"></div>\r\n       <table align=\"center\" border=\"" +
                    "0\" cellpadding=\"0\" cellspacing=\"0\" id=\"bodyTable\" style=\"-ms-text-size-adjust: 1" +
                    "00%; -webkit-text-size-adjust: 100%; background-color:#FFF; border-collapse: col" +
                    "lapse !important; height: 100% !important; margin: 0; mso-table-lspace: 0pt; mso" +
                    "-table-rspace: 0pt; padding: 0; width: 100% !important\" width=\"100%\">\r\n         " +
                    "  <tbody>\r\n               <tr>\r\n                   <td align=\"center\" id=\"bodyCe" +
                    "ll\" style=\"-webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; mso-table" +
                    "-lspace: 0pt; mso-table-rspace: 0pt; height: 100% !important; width: 100% !impor" +
                    "tant; margin: 0; padding: 20px;\" valign=\"top\">\r\n                       <!-- BEGI" +
                    "N TEMPLATE // -->\r\n                       <table border=\"0\" cellpadding=\"0\" cell" +
                    "spacing=\"0\" id=\"templateContainer\" style=\"-webkit-text-size-adjust: 100%; -ms-te" +
                    "xt-size-adjust: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-colla" +
                    "pse: collapse !important; width: 600px; border: 1px solid #dddddd;\">\r\n          " +
                    "                 <tbody>\r\n                               <tr>\r\n                 " +
                    "                  <td align=\"center\" style=\"-webkit-text-size-adjust: 100%; -ms-" +
                    "text-size-adjust: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\" valign=\"t" +
                    "op\">\r\n                                       <!-- BEGIN BODY // -->\r\n           " +
                    "                            <table id=\"Table_01\" width=\"650\" height=\"1282\" borde" +
                    "r=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-spacing:0; height:1282px; wi" +
                    "dth:650px; mso-table-lspace:0pt; mso-table-rspace:0pt;font-family: \'Montserrat\'," +
                    " sans-serif;background-color:#FFF\">\r\n\t<tr>\r\n\t\t<td colspan=\"7\" style=\"width:532px" +
                    "; height:63px; border-collapse:collapse;\">\r\n\t\t\t<a href=\"https://www.fundraising." +
                    "com/?utm_source=newsletter&utm_medium=email&utm_campaign=fundpasslink\" target=\"_" +
                    "blank\">\r\n            <img src=\"http://my.fundraising.com/bdcnewsletter/bdc/FundP" +
                    "ass_communication_01.jpg\" width=\"532\" height=\"63\" alt=\"fund-pass\" style=\"display" +
                    ": block;\" border=\"0\"></a></td>\r\n\t\t<td style=\"width:118px; height:63px; border-co" +
                    "llapse:collapse; vertical-align:bottom;background-color:#FFF\">\r\n\t\t\t<a href=\"http" +
                    "s://www.fundraising.com/?utm_source=newsletter&utm_medium=email&utm_campaign=fun" +
                    "dpasslink\" style=\"font-size:13px; color:#818286; text-decoration:none\" target=\"_" +
                    "blank\">Go to Website</a></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td colspan=\"8\" style=\"width:650" +
                    "px; height:260px; border-collapse:collapse;\">\r\n\t\t\t<img src=\"http://my.fundraisin" +
                    "g.com/bdcnewsletter/bdc/FundPass_communication_03.jpg\" width=\"650\" height=\"260\" " +
                    "alt=\"fund-pass\" style=\"display: block;\" border=\"0\"></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td c" +
                    "olspan=\"8\" style=\"width:650px; height:249px; border-collapse:collapse;background" +
                    "-color:#FFF\">\r\n\t\t\t<table id=\"Table_03\" width=\"650\" height=\"249\" border=\"0\" cellp" +
                    "adding=\"0\" cellspacing=\"0\" style=\"border-spacing:0; height:249px; width:650px; m" +
                    "so-table-lspace:0pt; mso-table-rspace:0pt;font-family: \'Montserrat\', sans-serif;" +
                    "background-color:#FFF\"><tr><td style=\"padding-left:20px; padding-right:20px;back" +
                    "ground-color:#FFF\">\r\n         <span style=\"font-size:18px; font-weight:bold; col" +
                    "or:#3c83af\">Hello ");
            
            #line 44 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\FundPassEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Firstname));
            
            #line default
            #line hidden
            this.Write(@"</span><br /><br />
         <span style=""font-size:18px; font-weight:bold; color:#515151"">Enjoy 30 days of discounts at local and nation-wide stores, restaurants, movie theatres and more</span><br /><br />
            <span style=""font-size:17px;"">1. Download the free app<br />
2. Create an account and activate your access code <span style=""color:#3c83af"">");
            
            #line 47 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\FundPassEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FundCode));
            
            #line default
            #line hidden
            this.Write("</span><br />\r\n3. Enjoy!</span></td></tr>\r\n            </table>\r\n            </td" +
                    ">\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td colspan=\"8\" style=\"width:650px; height:369px; border-col" +
                    "lapse:collapse;\">\r\n\t\t\t<img src=\"http://my.fundraising.com/bdcnewsletter/bdc/Fund" +
                    "Pass_communication_05.jpg\" width=\"650\" height=\"369\" alt=\"fund-pass\" style=\"displ" +
                    "ay: block;\" border=\"0\"></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td colspan=\"8\" style=\"width:650p" +
                    "x; height:156px; border-collapse:collapse;\">\r\n\t\t\t<img src=\"http://my.fundraising" +
                    ".com/bdcnewsletter/bdc/FundPass_communication_06.jpg\" width=\"650\" height=\"156\" a" +
                    "lt=\"fund-pass\" style=\"display: block;\" border=\"0\"></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td co" +
                    "lspan=\"8\" style=\"width:650px; height:128px; border-collapse:collapse;background-" +
                    "color:#FFF\">\r\n\t\t\t<table id=\"Table_02\" width=\"650\" height=\"128\" border=\"0\" cellpa" +
                    "dding=\"0\" cellspacing=\"0\" style=\"border-spacing:0; height:128px; width:650px; ms" +
                    "o-table-lspace:0pt; mso-table-rspace:0pt;font-family: \'Montserrat\', sans-serif;b" +
                    "ackground-color:#FFF\"><tr><td style=\"background-color:#FFF\">\r\n            <a hre" +
                    "f=\'https://play.google.com/store/apps/details?id=com.datacastinc.fund_pass&utm_c" +
                    "ampaign=utm_campaign=fundpassgooglelink&pcampaignid=MKT-Other-global-all-co-prtn" +
                    "r-py-PartBadge-Mar2515-1\'><img alt=\'Get it on Google Play\' src=\"http://my.fundra" +
                    "ising.com/bdcnewsletter/bdc/en_badge_web_generic-upd.png\"  style=\"display: block" +
                    ";\" border=\"0\"/></a>\r\n            </td>\r\n            <td style=\"background-color:" +
                    "#FFF\">\r\n            <a href=\"https://geo.itunes.apple.com/us/app/fund-pass/id907" +
                    "484646?mt=8&utm_campaign=utm_campaign=fundpassapplelink\">\r\n            <img src=" +
                    "\"http://my.fundraising.com/bdcnewsletter/bdc/applestore.jpg\" width=\"300\" height=" +
                    "\"80\" alt=\'Get it on Apple Store\' style=\"display: block;\" border=\"0\"></a>\r\n      " +
                    "      </td></tr>\r\n            </table>\r\n            </td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td " +
                    "style=\"width:184px; height:56px; border-collapse:collapse;\">\r\n\t\t\t<img src=\"http:" +
                    "//my.fundraising.com/bdcnewsletter/bdc/FundPass_communication_08.jpg\" width=\"184" +
                    "\" height=\"56\" alt=\"fund-pass\" style=\"display: block;\" border=\"0\"></td>\r\n\t\t<td st" +
                    "yle=\"width:54px; height:56px; border-collapse:collapse;\">\r\n\t\t\t<a href=\"https://w" +
                    "ww.facebook.com/Fundraisingdotcom\" target=\"_blank\">\r\n            <img src=\"http:" +
                    "//my.fundraising.com/bdcnewsletter/bdc/FundPass_communication_09.jpg\" width=\"54\"" +
                    " height=\"56\" alt=\"fund-pass\" style=\"display: block;\" border=\"0\"></a></td>\r\n\t\t<td" +
                    " style=\"width:60px; height:56px; border-collapse:collapse;\">\r\n\t\t\t<a href=\"https:" +
                    "//twitter.com/fundraising_com\" target=\"_blank\">\r\n            <img src=\"http://my" +
                    ".fundraising.com/bdcnewsletter/bdc/FundPass_communication_10.jpg\" width=\"60\" hei" +
                    "ght=\"56\" alt=\"fund-pass\" style=\"display: block;\" border=\"0\"></a></td>\r\n\t\t<td sty" +
                    "le=\"width:57px; height:56px; border-collapse:collapse;\">\r\n\t\t\t<a href=\"https://in" +
                    "stagram.com/fundraisingdotcom/\" target=\"_blank\">\r\n            <img src=\"http://m" +
                    "y.fundraising.com/bdcnewsletter/bdc/FundPass_communication_11.jpg\" width=\"57\" he" +
                    "ight=\"56\" alt=\"fund-pass\" style=\"display: block;\" border=\"0\"></a></td>\r\n\t\t<td st" +
                    "yle=\"width:54px; height:56px; border-collapse:collapse;\">\r\n\t\t\t<a href=\"https://w" +
                    "ww.pinterest.com/frdotcom/boards/\" target=\"_blank\">\r\n            <img src=\"http:" +
                    "//my.fundraising.com/bdcnewsletter/bdc/FundPass_communication_12.jpg\" width=\"54\"" +
                    " height=\"56\" alt=\"fund-pass\" style=\"display: block;\" border=\"0\"></a></td>\r\n\t\t<td" +
                    " style=\"width:57px; height:56px; border-collapse:collapse;\">\r\n\t\t\t<a href=\"mailto" +
                    ":marketing@fundraising.com?Subject=FundPass Info requested\" target=\"_blank\">\r\n  " +
                    "          <img src=\"http://my.fundraising.com/bdcnewsletter/bdc/FundPass_communi" +
                    "cation_13.jpg\" width=\"57\" height=\"56\" alt=\"fund-pass\" style=\"display: block;\" bo" +
                    "rder=\"0\"></a></td>\r\n\t\t<td colspan=\"2\" style=\"width:184px; height:56px; border-co" +
                    "llapse:collapse;\">\r\n\t\t\t<img src=\"http://my.fundraising.com/bdcnewsletter/bdc/Fun" +
                    "dPass_communication_14.jpg\" width=\"184\" height=\"56\" alt=\"fund-pass\" style=\"displ" +
                    "ay: block;\" border=\"0\"></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td style=\"width:184px; height:1p" +
                    "x; border-collapse:collapse;background-color:#FFF\">\r\n\t\t\t<img src=\"http://my.fund" +
                    "raising.com/bdcnewsletter/bdc/spacer.gif\" width=\"184\" height=\"1\" alt=\"fund-pass\"" +
                    " style=\"display: block;\" border=\"0\"></td>\r\n\t\t<td style=\"width:54px; height:1px; " +
                    "border-collapse:collapse;background-color:#FFF\">\r\n\t\t\t<img src=\"http://my.fundrai" +
                    "sing.com/bdcnewsletter/bdc/spacer.gif\" width=\"54\" height=\"1\" alt=\"fund-pass\" sty" +
                    "le=\"display: block;\" border=\"0\"></td>\r\n\t\t<td style=\"width:60px; height:1px; bord" +
                    "er-collapse:collapse;background-color:#FFF\">\r\n\t\t\t<img src=\"http://my.fundraising" +
                    ".com/bdcnewsletter/bdc/spacer.gif\" width=\"60\" height=\"1\" alt=\"fund-pass\" style=\"" +
                    "display: block;\" border=\"0\"></td>\r\n\t\t<td style=\"width:57px; height:1px; border-c" +
                    "ollapse:collapse;background-color:#FFF\">\r\n\t\t\t<img src=\"http://my.fundraising.com" +
                    "/bdcnewsletter/bdc/spacer.gif\" width=\"57\" height=\"1\" alt=\"fund-pass\" style=\"disp" +
                    "lay: block;\" border=\"0\"></td>\r\n\t\t<td style=\"width:54px; height:1px; border-colla" +
                    "pse:collapse;background-color:#FFF\">\r\n\t\t\t<img src=\"http://my.fundraising.com/bdc" +
                    "newsletter/bdc/spacer.gif\" width=\"54\" height=\"1\" alt=\"fund-pass\" style=\"display:" +
                    " block;\" border=\"0\"></td>\r\n\t\t<td style=\"width:57px; height:1px; border-collapse:" +
                    "collapse;background-color:#FFF\">\r\n\t\t\t<img src=\"http://my.fundraising.com/bdcnews" +
                    "letter/bdc/spacer.gif\" width=\"57\" height=\"1\" alt=\"fund-pass\" style=\"display: blo" +
                    "ck;\" border=\"0\"></td>\r\n\t\t<td style=\"width:66px; height:1px; border-collapse:coll" +
                    "apse;background-color:#FFF\">\r\n\t\t\t<img src=\"http://my.fundraising.com/bdcnewslett" +
                    "er/bdc/spacer.gif\" width=\"66\" height=\"1\" alt=\"fund-pass\" style=\"display: block;\"" +
                    " border=\"0\"></td>\r\n\t\t<td style=\"width:118px; height:1px; border-collapse:collaps" +
                    "e;background-color:#FFF\">\r\n\t\t\t<img src=\"http://my.fundraising.com/bdcnewsletter/" +
                    "bdc/spacer.gif\" width=\"118\" height=\"1\" alt=\"fund-pass\" style=\"display: block;\" b" +
                    "order=\"0\"></td>\r\n\t</tr>\r\n</table>\r\n                                       <!-- /" +
                    "/ END BODY -->\r\n                                   </td>\r\n                      " +
                    "         </tr>\r\n                           </tbody>\r\n                       </ta" +
                    "ble>\r\n                       <!-- // END TEMPLATE -->\r\n                   </td>\r" +
                    "\n               </tr>\r\n           </tbody>\r\n       </table>\r\n   </center>\r\n</bod" +
                    "y>\r\n</html>");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class FundPassEmailTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
