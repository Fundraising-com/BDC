// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GA.BDC.WebApi.Fundraising.Core.Templates.Emails
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class KitRequestedEmailTemplate : KitRequestedEmailTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r\n<html>\r\n<head>\r\n " +
                    "   <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\">\r\n   " +
                    " <meta content=\"MSHTML 6.00.2800.1498\" name=\"GENERATOR\">\r\n    <title>");
            
            #line 11 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Subject));
            
            #line default
            #line hidden
            this.Write("</title>\r\n   \r\n</head>\r\n<body bgcolor=\"#FAFAFA\" style=\"-webkit-text-size-adjust: " +
                    "100%; -ms-text-size-adjust: 100%; height: 100% !important; width: 100% !importan" +
                    "t; background-color: #FAFAFA; margin: 0; padding: 0;\">\r\n    <table align=\"center" +
                    "\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"bodyTable\" style=\"-ms-text-size" +
                    "-adjust: 100%; -webkit-text-size-adjust: 100%; background-color: #FAFAFA; border" +
                    "-collapse: collapse !important; height: 100% !important; margin: 0; mso-table-ls" +
                    "pace: 0pt; mso-table-rspace: 0pt; padding: 0; width: 650px !important;font-famil" +
                    "y: \'Helvetica\', sans-serif;\" width=\"650px\">\r\n        <tbody>\r\n            <tr>\r\n" +
                    "                <td align=\"center\" id=\"bodyCell\" style=\"-webkit-text-size-adjust" +
                    ": 100%; -ms-text-size-adjust: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt" +
                    "; height: 100% !important; width: 100% !important; margin: 0; padding: 20px;\" va" +
                    "lign=\"top\">\r\n                    <!-- BEGIN TEMPLATE // -->\r\n                   " +
                    " <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"templateContainer\" style=" +
                    "\"-webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; mso-table-lspace: 0" +
                    "pt; mso-table-rspace: 0pt; border-collapse: collapse !important; width: 650px; b" +
                    "order: 1px solid #dddddd;\">\r\n                        <tbody>\r\n                  " +
                    "          <tr>\r\n                                <td align=\"center\" style=\"-webki" +
                    "t-text-size-adjust: 100%; -ms-text-size-adjust: 100%; mso-table-lspace: 0pt; mso" +
                    "-table-rspace: 0pt;\" valign=\"top\">\r\n                                    <!-- BEG" +
                    "IN PREHEADER // -->\r\n                                    \r\n                     " +
                    "               <!-- // END PREHEADER -->\r\n                                </td>\r" +
                    "\n                            </tr>\r\n\r\n                            <tr>\r\n        " +
                    "                        <td align=\"center\" style=\"-webkit-text-size-adjust: 100%" +
                    "; -ms-text-size-adjust: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\" val" +
                    "ign=\"top\">\r\n                                    <!-- BEGIN HEADER // -->\r\n      " +
                    "                              <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" " +
                    "id=\"templateHeader\" style=\"-ms-text-size-adjust: 100%; -webkit-text-size-adjust:" +
                    " 100%; background-color: #FFFFFF; border-bottom-color: #CCCCCC; border-bottom-st" +
                    "yle: solid; border-bottom-width: 1px; border-collapse: collapse !important; mso-" +
                    "table-lspace: 0pt; mso-table-rspace: 0pt\" width=\"650px\">\r\n                      " +
                    "                  <tbody>\r\n                                        <tr>\r\n       " +
                    "                                         <td width=\"64%\" align=\"left\" valign=\"to" +
                    "p\" class=\"headerContent\" style=\"color: rgb(80, 80, 80); line-height: 20px; paddi" +
                    "ng: 0px;\" pardot-region=\"header_image\" pardot-data=\"\"><img alt=\"Fundraising.com\"" +
                    " src=\"https://www.fundraising.com/Content/external/kitrequestimages/Email_confir" +
                    "mation_guide_fr-upd_01.jpg\" style=\"border-width: 0px; border-style:none;\"></td>\r" +
                    "\n                                                <td width=\"36%\" align=\"center\" " +
                    "class=\"headerContent\" style=\"color: rgb(80, 80, 80); line-height: 20px;vertical-" +
                    "align:middle; padding: 0px;\" pardot-region=\"header_image\" pardot-data=\"\"><a href" +
                    "=\"");
            
            #line 37 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SiteURL));
            
            #line default
            #line hidden
            this.Write(@""" style=""color:#818286; font-size:13px; font-weight:bold;font-family: Helvetica;"">Go To Website
                                              </a></td>
                                            </tr>
                                            <tr >
                                                <td align=""left"" class=""headerContent"" style=""color: rgb(80, 80, 80); text-align: center; vertical-align: middle; padding: 0px; height:100px; background-color:#e6e6e8;font-family: Helvetica;"" valign=""top"" pardot-region=""header_image"" pardot-data="""" colspan=""2""><br><br><span style=""font-size:20px"">THANK YOU ");
            
            #line 41 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lead.FirstName));
            
            #line default
            #line hidden
            this.Write(@" FOR REQUESTING YOUR</span><br><br><br><span style=""color:#ed9482; font-size:32px"">FUNDRAISING GUIDE</span><br><br><br><br>

                                                
                                                <img alt=""Fundraising.com"" src=""");
            
            #line 44 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(BannerImage));
            
            #line default
            #line hidden
            this.Write("\" style=\"border-width: 0px; border-style: solid;\"></td>\r\n                        " +
                    "                    </tr>\r\n                                        </tbody>\r\n   " +
                    "                                 </table>\r\n                                    <" +
                    "!-- // END HEADER -->\r\n                                </td>\r\n                  " +
                    "          </tr>\r\n\r\n                            <tr>\r\n                           " +
                    "     <td align=\"center\" style=\"-webkit-text-size-adjust: 100%; -ms-text-size-adj" +
                    "ust: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\" valign=\"top\">\r\n       " +
                    "                             <!-- BEGIN BODY // -->\r\n                           " +
                    "         <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"templateBody\" sty" +
                    "le=\"-ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; background-color" +
                    ": #FFFFFF; border-bottom-color: #CCCCCC; border-bottom-style: solid; border-bott" +
                    "om-width: 1px; border-collapse: collapse !important; border-top-color: #FFFFFF; " +
                    "border-top-style: solid; border-top-width: 1px; mso-table-lspace: 0pt; mso-table" +
                    "-rspace: 0pt\" width=\"650px\">\r\n                                        <tbody>\r\n " +
                    "                                           <tr>\r\n                               " +
                    "                 <td pardot-region=\"body_content\" align=\"left\" class=\"bodyConten" +
                    "t\" style=\"color: rgb(128, 128, 128); font-family: Helvetica; font-size: 18px; li" +
                    "ne-height: 21px; text-align:center; padding: 25px; background-color:#fff; color:" +
                    "#717171;\" valign=\"top\" pardot-data=\"\">\r\n                                        " +
                    "            <p dir=\"ltr\" style=\"line-height:1.15;margin-top:0pt;margin-bottom:0p" +
                    "t;\">\r\n <span style=\"font-weight:bold; font-size:20px\">");
            
            #line 60 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Text1));
            
            #line default
            #line hidden
            this.Write("</span>\r\n  <br><br>\r\n  \r\n  <a href=\'");
            
            #line 63 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PDFUrl));
            
            #line default
            #line hidden
            this.Write("\'>\r\n <img alt=\"Fundraising.com\" src=\"https://www.fundraising.com/Content/external" +
                    "/kitrequestimages/Email_confirmation_guide_fr-upd_07.jpg\" style=\"border-width: 0" +
                    "px; border-style:none;\"></a>\r\n  <br><br>\r\n  ");
            
            #line 66 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Text2));
            
            #line default
            #line hidden
            this.Write("\r\n  <br><br>\r\n   ");
            
            #line 68 "C:\SourceCode\Southwestern-Fundraising\1.DEV\GA\BDC\WebApi\Core\Templates\Emails\KitRequestedEmailTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Phone));
            
            #line default
            #line hidden
            this.Write("\r\n \r\n    \r\n                                                    </p>\r\n            " +
                    "                                    </td>\r\n                                     " +
                    "       </tr>\r\n                                            <tr>\r\n                " +
                    "    <td pardot-region=\"footer\" align=\"left\" class=\"bodyContent\" style=\"color: rg" +
                    "b(128, 128, 128);line-height: 21px; text-align:center; padding: 25px; background" +
                    "-color:#FFF;\" valign=\"top\" pardot-data=\"\">\r\n                   <a href=\"https://" +
                    "instagram.com/fundraisingdotcom/\" target=\"_blank\">\r\n                   <img alt=" +
                    "\"Fundraising.com instagram\" src=\"https://www.fundraising.com/Content/external/ki" +
                    "trequestimages/EmailkitrequestINT.jpg\" style=\"border-width: 0px; border-style:no" +
                    "ne;\"></a>\r\n                   <a href=\"https://twitter.com/fundraising_com\" targ" +
                    "et=\"_blank\">\r\n                   <img alt=\"Fundraising.com twitter\" src=\"https:/" +
                    "/www.fundraising.com/Content/external/kitrequestimages/EmailkitrequestTW.jpg\" st" +
                    "yle=\"border-width: 0px; border-style:none;\"></a>\r\n                   <a href=\"ht" +
                    "tps://www.pinterest.com/frdotcom/boards/\" target=\"_blank\">\r\n                   <" +
                    "img alt=\"Fundraising.com pinterest\" src=\"https://www.fundraising.com/Content/ext" +
                    "ernal/kitrequestimages/EmailkitrequestPIN.jpg\" style=\"border-width: 0px; border-" +
                    "style:none;\"></a>\r\n                   <a href=\"https://www.facebook.com/Fundrais" +
                    "ingdotcom\" target=\"_blank\">\r\n                   <img alt=\"Fundraising.com facebo" +
                    "ok\" src=\"https://www.fundraising.com/Content/external/kitrequestimages/Emailkitr" +
                    "equestFB.jpg\" style=\"border-width: 0px; border-style:none;\"></a>\r\n              " +
                    "     <a href=\"mailto:marketing@fundraising.com\" target=\"_blank\">\r\n              " +
                    "     <img alt=\"Fundraising.com email\" src=\"https://www.fundraising.com/Content/e" +
                    "xternal/kitrequestimages/EmailkitrequestEmail.jpg\" style=\"border-width: 0px; bor" +
                    "der-style:none;\"></a>\r\n                    </td>\r\n                              " +
                    "          </tbody>\r\n                                    </table>\r\n              " +
                    "                      <!-- // END BODY -->\r\n                                </td" +
                    ">\r\n                            </tr>\r\n                        </tbody>\r\n        " +
                    "            </table>\r\n                    \r\n                    <!-- // END TEMP" +
                    "LATE -->\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </tabl" +
                    "e>\r\n\r\n</body>\r\n</html>");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class KitRequestedEmailTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
