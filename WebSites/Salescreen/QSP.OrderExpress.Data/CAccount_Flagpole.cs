///////////////////////////////////////////////////////////////////////////
// Description: Data Access class for the table 'CAccount_Flagpole'
// Generated by LLBLGen v1.2.1402.29234 Final on: Wednesday, November 12, 2003, 2:35:07 PM
// Because the Base Class already implements IDispose, this class doesn't.
///////////////////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;
using System.Runtime.InteropServices;

namespace QSPForm.Data
{
	/// <summary>
	/// Purpose: Data Access class for the table 'CAccount_Flagpole'.
	/// </summary>
	public class CAccount_Flagpole : DBInteractionBase
	{

		#region Parameter
		//Stored procedure parameter names
		public const string PARAM_PKID = "@iInstance";
		public const string TABLE_NAME = "CAccount_Flagpole";
		
		//
		// Stored procedure names for each operation
		private const string SQL_PROC_SELECT_ONE = "pr_CAccount_Flagpole_SelectOne";
		private const string SQL_PROC_SELECT_ALL = "pr_CAccount_Flagpole_SelectAll";		
		
		#endregion

		/// <summary>
		/// Purpose: Class constructor.
		/// </summary>
		public CAccount_Flagpole()
		{
			// Nothing for now.
		}

		public override DataTable SelectOne(int Account_Flagpole_ID)
		{
			DataTable Table = new DataTable(TABLE_NAME);
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = SQL_PROC_SELECT_ONE;
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			
			cmdToExecute.Parameters.Add(new SqlParameter(PARAM_PKID, SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, Account_Flagpole_ID));
			cmdToExecute.Parameters.Add(new SqlParameter(PARAM_ERROR, SqlDbType.Int, 4, ParameterDirection.Output, false, 10, 0, "", DataRowVersion.Proposed, 0));

			Select(cmdToExecute,Table);
			//AssignInnerProperty(Table);

			return Table;
				
		}

		/// <summary>
		/// Purpose: SelectAll method. This method will Select all rows from the table.
		/// </summary>
		/// <returns>DataTable object if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// Properties set after a succesful call of this method: 
		/// <UL>
		///		 <LI>iErrorCode</LI>
		/// </UL>
		/// </remarks>
		public override DataTable SelectAll()
		{
			DataTable Table = new DataTable(TABLE_NAME);

			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = SQL_PROC_SELECT_ALL;
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			
							
			Select(cmdToExecute,Table);
			//AssignInnerProperty(Table);
			return  Table;
					
		}

	}
}
