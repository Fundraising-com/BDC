#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3607
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderExpress.DataGeneration
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="QSPFulfillment")]
	public partial class QSPFulfillmentDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertform(form instance);
    partial void Updateform(form instance);
    partial void Deleteform(form instance);
    partial void Insertform_group(form_group instance);
    partial void Updateform_group(form_group instance);
    partial void Deleteform_group(form_group instance);
    partial void Insertform_order_type(form_order_type instance);
    partial void Updateform_order_type(form_order_type instance);
    partial void Deleteform_order_type(form_order_type instance);
    partial void Insertform_delivery_method(form_delivery_method instance);
    partial void Updateform_delivery_method(form_delivery_method instance);
    partial void Deleteform_delivery_method(form_delivery_method instance);
    partial void Insertform_section(form_section instance);
    partial void Updateform_section(form_section instance);
    partial void Deleteform_section(form_section instance);
    partial void Insertcatalog_group(catalog_group instance);
    partial void Updatecatalog_group(catalog_group instance);
    partial void Deletecatalog_group(catalog_group instance);
    partial void Insertcatalog(catalog instance);
    partial void Updatecatalog(catalog instance);
    partial void Deletecatalog(catalog instance);
    partial void Insertcatalog_item_category(catalog_item_category instance);
    partial void Updatecatalog_item_category(catalog_item_category instance);
    partial void Deletecatalog_item_category(catalog_item_category instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertcatalog_item(catalog_item instance);
    partial void Updatecatalog_item(catalog_item instance);
    partial void Deletecatalog_item(catalog_item instance);
    partial void Insertcatalog_item_detail(catalog_item_detail instance);
    partial void Updatecatalog_item_detail(catalog_item_detail instance);
    partial void Deletecatalog_item_detail(catalog_item_detail instance);
    partial void Insertcatalog_item_category_catalog_item(catalog_item_category_catalog_item instance);
    partial void Updatecatalog_item_category_catalog_item(catalog_item_category_catalog_item instance);
    partial void Deletecatalog_item_category_catalog_item(catalog_item_category_catalog_item instance);
    partial void Insertbusiness_rule(business_rule instance);
    partial void Updatebusiness_rule(business_rule instance);
    partial void Deletebusiness_rule(business_rule instance);
    partial void Insertbusiness_exception(business_exception instance);
    partial void Updatebusiness_exception(business_exception instance);
    partial void Deletebusiness_exception(business_exception instance);
    partial void Insertvendor(vendor instance);
    partial void Updatevendor(vendor instance);
    partial void Deletevendor(vendor instance);
    partial void Insertform_catalog_group(form_catalog_group instance);
    partial void Updateform_catalog_group(form_catalog_group instance);
    partial void Deleteform_catalog_group(form_catalog_group instance);
    partial void Insertform_profit_rate(form_profit_rate instance);
    partial void Updateform_profit_rate(form_profit_rate instance);
    partial void Deleteform_profit_rate(form_profit_rate instance);
    partial void Insertform_permission(form_permission instance);
    partial void Updateform_permission(form_permission instance);
    partial void Deleteform_permission(form_permission instance);
    partial void Insertform_delivery_date_type(form_delivery_date_type instance);
    partial void Updateform_delivery_date_type(form_delivery_date_type instance);
    partial void Deleteform_delivery_date_type(form_delivery_date_type instance);
    partial void Insertform_requires_form(form_requires_form instance);
    partial void Updateform_requires_form(form_requires_form instance);
    partial void Deleteform_requires_form(form_requires_form instance);
    #endregion
		
		public QSPFulfillmentDataContext() : 
				base(global::OrderExpress.DataGeneration.Properties.Settings.Default.QSPFulfillmentConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QSPFulfillmentDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QSPFulfillmentDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QSPFulfillmentDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QSPFulfillmentDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<form> forms
		{
			get
			{
				return this.GetTable<form>();
			}
		}
		
		public System.Data.Linq.Table<form_group> form_groups
		{
			get
			{
				return this.GetTable<form_group>();
			}
		}
		
		public System.Data.Linq.Table<form_order_type> form_order_types
		{
			get
			{
				return this.GetTable<form_order_type>();
			}
		}
		
		public System.Data.Linq.Table<form_delivery_method> form_delivery_methods
		{
			get
			{
				return this.GetTable<form_delivery_method>();
			}
		}
		
		public System.Data.Linq.Table<form_section> form_sections
		{
			get
			{
				return this.GetTable<form_section>();
			}
		}
		
		public System.Data.Linq.Table<catalog_group> catalog_groups
		{
			get
			{
				return this.GetTable<catalog_group>();
			}
		}
		
		public System.Data.Linq.Table<catalog> catalogs
		{
			get
			{
				return this.GetTable<catalog>();
			}
		}
		
		public System.Data.Linq.Table<catalog_item_category> catalog_item_categories
		{
			get
			{
				return this.GetTable<catalog_item_category>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<catalog_item> catalog_items
		{
			get
			{
				return this.GetTable<catalog_item>();
			}
		}
		
		public System.Data.Linq.Table<catalog_item_detail> catalog_item_details
		{
			get
			{
				return this.GetTable<catalog_item_detail>();
			}
		}
		
		public System.Data.Linq.Table<catalog_item_category_catalog_item> catalog_item_category_catalog_items
		{
			get
			{
				return this.GetTable<catalog_item_category_catalog_item>();
			}
		}
		
		public System.Data.Linq.Table<business_rule> business_rules
		{
			get
			{
				return this.GetTable<business_rule>();
			}
		}
		
		public System.Data.Linq.Table<business_exception> business_exceptions
		{
			get
			{
				return this.GetTable<business_exception>();
			}
		}
		
		public System.Data.Linq.Table<vendor> vendors
		{
			get
			{
				return this.GetTable<vendor>();
			}
		}
		
		public System.Data.Linq.Table<form_catalog_group> form_catalog_groups
		{
			get
			{
				return this.GetTable<form_catalog_group>();
			}
		}
		
		public System.Data.Linq.Table<form_profit_rate> form_profit_rates
		{
			get
			{
				return this.GetTable<form_profit_rate>();
			}
		}
		
		public System.Data.Linq.Table<form_permission> form_permissions
		{
			get
			{
				return this.GetTable<form_permission>();
			}
		}
		
		public System.Data.Linq.Table<form_delivery_date_type> form_delivery_date_types
		{
			get
			{
				return this.GetTable<form_delivery_date_type>();
			}
		}
		
		public System.Data.Linq.Table<form_requires_form> form_requires_forms
		{
			get
			{
				return this.GetTable<form_requires_form>();
			}
		}
	}
	
	[Table(Name="dbo.form")]
	public partial class form : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_id;
		
		private int _form_group_id;
		
		private int _version;
		
		private System.Nullable<int> _program_type_id;
		
		private System.Nullable<int> _program_id;
		
		private System.Nullable<int> _entity_type_id;
		
		private string _form_code;
		
		private string _form_name;
		
		private string _description;
		
		private string _program_basics_text;
		
		private string _order_terms_text;
		
		private System.Nullable<System.DateTime> _closing_time;
		
		private bool _enabled;
		
		private bool _deleted;
		
		private string _image_url;
		
		private System.Nullable<bool> _is_product_price_updatable;
		
		private System.Nullable<int> _parent_form_id;
		
		private System.Nullable<int> _tax_postal_address_type_id;
		
		private bool _is_base_form;
		
		private bool _is_quantity_adjustment_allowed;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.DateTime _update_date;
		
		private int _update_user_id;
		
		private System.Nullable<int> _warehouse_type_id;
		
		private bool _is_bulk;
		
		private string _report_name;
		
		private bool _is_warehouse_selectable;
		
		private System.Nullable<int> _default_warehouse_id;
		
		private System.Nullable<int> _season_id;
		
		private EntitySet<form_order_type> _form_order_types;
		
		private EntitySet<form_delivery_method> _form_delivery_methods;
		
		private EntitySet<business_rule> _business_rules;
		
		private EntitySet<business_exception> _business_exceptions;
		
		private EntitySet<form_permission> _form_permissions;
		
		private EntitySet<form_delivery_date_type> _form_delivery_date_types;
		
		private EntitySet<form_requires_form> _form_requires_forms;
		
		private EntitySet<form_requires_form> _form_requires_forms1;
		
		private EntityRef<form_group> _form_group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Onform_group_idChanging(int value);
    partial void Onform_group_idChanged();
    partial void OnversionChanging(int value);
    partial void OnversionChanged();
    partial void Onprogram_type_idChanging(System.Nullable<int> value);
    partial void Onprogram_type_idChanged();
    partial void Onprogram_idChanging(System.Nullable<int> value);
    partial void Onprogram_idChanged();
    partial void Onentity_type_idChanging(System.Nullable<int> value);
    partial void Onentity_type_idChanged();
    partial void Onform_codeChanging(string value);
    partial void Onform_codeChanged();
    partial void Onform_nameChanging(string value);
    partial void Onform_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onprogram_basics_textChanging(string value);
    partial void Onprogram_basics_textChanged();
    partial void Onorder_terms_textChanging(string value);
    partial void Onorder_terms_textChanged();
    partial void Onclosing_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onclosing_timeChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    partial void Onis_product_price_updatableChanging(System.Nullable<bool> value);
    partial void Onis_product_price_updatableChanged();
    partial void Onparent_form_idChanging(System.Nullable<int> value);
    partial void Onparent_form_idChanged();
    partial void Ontax_postal_address_type_idChanging(System.Nullable<int> value);
    partial void Ontax_postal_address_type_idChanged();
    partial void Onis_base_formChanging(bool value);
    partial void Onis_base_formChanged();
    partial void Onis_quantity_adjustment_allowedChanging(bool value);
    partial void Onis_quantity_adjustment_allowedChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.DateTime value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(int value);
    partial void Onupdate_user_idChanged();
    partial void Onwarehouse_type_idChanging(System.Nullable<int> value);
    partial void Onwarehouse_type_idChanged();
    partial void Onis_bulkChanging(bool value);
    partial void Onis_bulkChanged();
    partial void Onreport_nameChanging(string value);
    partial void Onreport_nameChanged();
    partial void Onis_warehouse_selectableChanging(bool value);
    partial void Onis_warehouse_selectableChanged();
    partial void Ondefault_warehouse_idChanging(System.Nullable<int> value);
    partial void Ondefault_warehouse_idChanged();
    partial void Onseason_idChanging(System.Nullable<int> value);
    partial void Onseason_idChanged();
    #endregion
		
		public form()
		{
			this._form_order_types = new EntitySet<form_order_type>(new Action<form_order_type>(this.attach_form_order_types), new Action<form_order_type>(this.detach_form_order_types));
			this._form_delivery_methods = new EntitySet<form_delivery_method>(new Action<form_delivery_method>(this.attach_form_delivery_methods), new Action<form_delivery_method>(this.detach_form_delivery_methods));
			this._business_rules = new EntitySet<business_rule>(new Action<business_rule>(this.attach_business_rules), new Action<business_rule>(this.detach_business_rules));
			this._business_exceptions = new EntitySet<business_exception>(new Action<business_exception>(this.attach_business_exceptions), new Action<business_exception>(this.detach_business_exceptions));
			this._form_permissions = new EntitySet<form_permission>(new Action<form_permission>(this.attach_form_permissions), new Action<form_permission>(this.detach_form_permissions));
			this._form_delivery_date_types = new EntitySet<form_delivery_date_type>(new Action<form_delivery_date_type>(this.attach_form_delivery_date_types), new Action<form_delivery_date_type>(this.detach_form_delivery_date_types));
			this._form_requires_forms = new EntitySet<form_requires_form>(new Action<form_requires_form>(this.attach_form_requires_forms), new Action<form_requires_form>(this.detach_form_requires_forms));
			this._form_requires_forms1 = new EntitySet<form_requires_form>(new Action<form_requires_form>(this.attach_form_requires_forms1), new Action<form_requires_form>(this.detach_form_requires_forms1));
			this._form_group = default(EntityRef<form_group>);
			OnCreated();
		}
		
		[Column(Storage="_form_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_group_id", DbType="Int NOT NULL")]
		public int form_group_id
		{
			get
			{
				return this._form_group_id;
			}
			set
			{
				if ((this._form_group_id != value))
				{
					if (this._form_group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_group_idChanging(value);
					this.SendPropertyChanging();
					this._form_group_id = value;
					this.SendPropertyChanged("form_group_id");
					this.Onform_group_idChanged();
				}
			}
		}
		
		[Column(Storage="_version", DbType="Int NOT NULL")]
		public int version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[Column(Storage="_program_type_id", DbType="Int")]
		public System.Nullable<int> program_type_id
		{
			get
			{
				return this._program_type_id;
			}
			set
			{
				if ((this._program_type_id != value))
				{
					this.Onprogram_type_idChanging(value);
					this.SendPropertyChanging();
					this._program_type_id = value;
					this.SendPropertyChanged("program_type_id");
					this.Onprogram_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_program_id", DbType="Int")]
		public System.Nullable<int> program_id
		{
			get
			{
				return this._program_id;
			}
			set
			{
				if ((this._program_id != value))
				{
					this.Onprogram_idChanging(value);
					this.SendPropertyChanging();
					this._program_id = value;
					this.SendPropertyChanged("program_id");
					this.Onprogram_idChanged();
				}
			}
		}
		
		[Column(Storage="_entity_type_id", DbType="Int")]
		public System.Nullable<int> entity_type_id
		{
			get
			{
				return this._entity_type_id;
			}
			set
			{
				if ((this._entity_type_id != value))
				{
					this.Onentity_type_idChanging(value);
					this.SendPropertyChanging();
					this._entity_type_id = value;
					this.SendPropertyChanged("entity_type_id");
					this.Onentity_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_code", DbType="VarChar(50)")]
		public string form_code
		{
			get
			{
				return this._form_code;
			}
			set
			{
				if ((this._form_code != value))
				{
					this.Onform_codeChanging(value);
					this.SendPropertyChanging();
					this._form_code = value;
					this.SendPropertyChanged("form_code");
					this.Onform_codeChanged();
				}
			}
		}
		
		[Column(Storage="_form_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string form_name
		{
			get
			{
				return this._form_name;
			}
			set
			{
				if ((this._form_name != value))
				{
					this.Onform_nameChanging(value);
					this.SendPropertyChanging();
					this._form_name = value;
					this.SendPropertyChanged("form_name");
					this.Onform_nameChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_program_basics_text", DbType="VarChar(2000)")]
		public string program_basics_text
		{
			get
			{
				return this._program_basics_text;
			}
			set
			{
				if ((this._program_basics_text != value))
				{
					this.Onprogram_basics_textChanging(value);
					this.SendPropertyChanging();
					this._program_basics_text = value;
					this.SendPropertyChanged("program_basics_text");
					this.Onprogram_basics_textChanged();
				}
			}
		}
		
		[Column(Storage="_order_terms_text", DbType="VarChar(2000)")]
		public string order_terms_text
		{
			get
			{
				return this._order_terms_text;
			}
			set
			{
				if ((this._order_terms_text != value))
				{
					this.Onorder_terms_textChanging(value);
					this.SendPropertyChanging();
					this._order_terms_text = value;
					this.SendPropertyChanged("order_terms_text");
					this.Onorder_terms_textChanged();
				}
			}
		}
		
		[Column(Storage="_closing_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> closing_time
		{
			get
			{
				return this._closing_time;
			}
			set
			{
				if ((this._closing_time != value))
				{
					this.Onclosing_timeChanging(value);
					this.SendPropertyChanging();
					this._closing_time = value;
					this.SendPropertyChanged("closing_time");
					this.Onclosing_timeChanged();
				}
			}
		}
		
		[Column(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_image_url", DbType="VarChar(100)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[Column(Storage="_is_product_price_updatable", DbType="Bit")]
		public System.Nullable<bool> is_product_price_updatable
		{
			get
			{
				return this._is_product_price_updatable;
			}
			set
			{
				if ((this._is_product_price_updatable != value))
				{
					this.Onis_product_price_updatableChanging(value);
					this.SendPropertyChanging();
					this._is_product_price_updatable = value;
					this.SendPropertyChanged("is_product_price_updatable");
					this.Onis_product_price_updatableChanged();
				}
			}
		}
		
		[Column(Storage="_parent_form_id", DbType="Int")]
		public System.Nullable<int> parent_form_id
		{
			get
			{
				return this._parent_form_id;
			}
			set
			{
				if ((this._parent_form_id != value))
				{
					this.Onparent_form_idChanging(value);
					this.SendPropertyChanging();
					this._parent_form_id = value;
					this.SendPropertyChanged("parent_form_id");
					this.Onparent_form_idChanged();
				}
			}
		}
		
		[Column(Storage="_tax_postal_address_type_id", DbType="Int")]
		public System.Nullable<int> tax_postal_address_type_id
		{
			get
			{
				return this._tax_postal_address_type_id;
			}
			set
			{
				if ((this._tax_postal_address_type_id != value))
				{
					this.Ontax_postal_address_type_idChanging(value);
					this.SendPropertyChanging();
					this._tax_postal_address_type_id = value;
					this.SendPropertyChanged("tax_postal_address_type_id");
					this.Ontax_postal_address_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_is_base_form", DbType="Bit NOT NULL")]
		public bool is_base_form
		{
			get
			{
				return this._is_base_form;
			}
			set
			{
				if ((this._is_base_form != value))
				{
					this.Onis_base_formChanging(value);
					this.SendPropertyChanging();
					this._is_base_form = value;
					this.SendPropertyChanged("is_base_form");
					this.Onis_base_formChanged();
				}
			}
		}
		
		[Column(Storage="_is_quantity_adjustment_allowed", DbType="Bit NOT NULL")]
		public bool is_quantity_adjustment_allowed
		{
			get
			{
				return this._is_quantity_adjustment_allowed;
			}
			set
			{
				if ((this._is_quantity_adjustment_allowed != value))
				{
					this.Onis_quantity_adjustment_allowedChanging(value);
					this.SendPropertyChanging();
					this._is_quantity_adjustment_allowed = value;
					this.SendPropertyChanged("is_quantity_adjustment_allowed");
					this.Onis_quantity_adjustment_allowedChanged();
				}
			}
		}
		
		[Column(Storage="_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[Column(Storage="_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime NOT NULL")]
		public System.DateTime update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int NOT NULL")]
		public int update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_warehouse_type_id", DbType="Int")]
		public System.Nullable<int> warehouse_type_id
		{
			get
			{
				return this._warehouse_type_id;
			}
			set
			{
				if ((this._warehouse_type_id != value))
				{
					this.Onwarehouse_type_idChanging(value);
					this.SendPropertyChanging();
					this._warehouse_type_id = value;
					this.SendPropertyChanged("warehouse_type_id");
					this.Onwarehouse_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_is_bulk", DbType="Bit NOT NULL")]
		public bool is_bulk
		{
			get
			{
				return this._is_bulk;
			}
			set
			{
				if ((this._is_bulk != value))
				{
					this.Onis_bulkChanging(value);
					this.SendPropertyChanging();
					this._is_bulk = value;
					this.SendPropertyChanged("is_bulk");
					this.Onis_bulkChanged();
				}
			}
		}
		
		[Column(Storage="_report_name", DbType="VarChar(50)", CanBeNull=false)]
		public string report_name
		{
			get
			{
				return this._report_name;
			}
			set
			{
				if ((this._report_name != value))
				{
					this.Onreport_nameChanging(value);
					this.SendPropertyChanging();
					this._report_name = value;
					this.SendPropertyChanged("report_name");
					this.Onreport_nameChanged();
				}
			}
		}
		
		[Column(Storage="_is_warehouse_selectable", DbType="Bit NOT NULL")]
		public bool is_warehouse_selectable
		{
			get
			{
				return this._is_warehouse_selectable;
			}
			set
			{
				if ((this._is_warehouse_selectable != value))
				{
					this.Onis_warehouse_selectableChanging(value);
					this.SendPropertyChanging();
					this._is_warehouse_selectable = value;
					this.SendPropertyChanged("is_warehouse_selectable");
					this.Onis_warehouse_selectableChanged();
				}
			}
		}
		
		[Column(Storage="_default_warehouse_id", DbType="Int")]
		public System.Nullable<int> default_warehouse_id
		{
			get
			{
				return this._default_warehouse_id;
			}
			set
			{
				if ((this._default_warehouse_id != value))
				{
					this.Ondefault_warehouse_idChanging(value);
					this.SendPropertyChanging();
					this._default_warehouse_id = value;
					this.SendPropertyChanged("default_warehouse_id");
					this.Ondefault_warehouse_idChanged();
				}
			}
		}
		
		[Column(Storage="_season_id", DbType="Int")]
		public System.Nullable<int> season_id
		{
			get
			{
				return this._season_id;
			}
			set
			{
				if ((this._season_id != value))
				{
					this.Onseason_idChanging(value);
					this.SendPropertyChanging();
					this._season_id = value;
					this.SendPropertyChanged("season_id");
					this.Onseason_idChanged();
				}
			}
		}
		
		[Association(Name="form_form_order_type", Storage="_form_order_types", ThisKey="form_id", OtherKey="form_id")]
		public EntitySet<form_order_type> form_order_types
		{
			get
			{
				return this._form_order_types;
			}
			set
			{
				this._form_order_types.Assign(value);
			}
		}
		
		[Association(Name="form_form_delivery_method", Storage="_form_delivery_methods", ThisKey="form_id", OtherKey="form_id")]
		public EntitySet<form_delivery_method> form_delivery_methods
		{
			get
			{
				return this._form_delivery_methods;
			}
			set
			{
				this._form_delivery_methods.Assign(value);
			}
		}
		
		[Association(Name="form_business_rule", Storage="_business_rules", ThisKey="form_id", OtherKey="form_id")]
		public EntitySet<business_rule> business_rules
		{
			get
			{
				return this._business_rules;
			}
			set
			{
				this._business_rules.Assign(value);
			}
		}
		
		[Association(Name="form_business_exception", Storage="_business_exceptions", ThisKey="form_id", OtherKey="form_id")]
		public EntitySet<business_exception> business_exceptions
		{
			get
			{
				return this._business_exceptions;
			}
			set
			{
				this._business_exceptions.Assign(value);
			}
		}
		
		[Association(Name="form_form_permission", Storage="_form_permissions", ThisKey="form_id", OtherKey="form_id")]
		public EntitySet<form_permission> form_permissions
		{
			get
			{
				return this._form_permissions;
			}
			set
			{
				this._form_permissions.Assign(value);
			}
		}
		
		[Association(Name="form_form_delivery_date_type", Storage="_form_delivery_date_types", ThisKey="form_id", OtherKey="form_id")]
		public EntitySet<form_delivery_date_type> form_delivery_date_types
		{
			get
			{
				return this._form_delivery_date_types;
			}
			set
			{
				this._form_delivery_date_types.Assign(value);
			}
		}
		
		[Association(Name="form_form_requires_form", Storage="_form_requires_forms", ThisKey="form_id", OtherKey="form_id")]
		public EntitySet<form_requires_form> form_requires_forms
		{
			get
			{
				return this._form_requires_forms;
			}
			set
			{
				this._form_requires_forms.Assign(value);
			}
		}
		
		[Association(Name="form_form_requires_form1", Storage="_form_requires_forms1", ThisKey="form_id", OtherKey="required_form_id")]
		public EntitySet<form_requires_form> form_requires_forms1
		{
			get
			{
				return this._form_requires_forms1;
			}
			set
			{
				this._form_requires_forms1.Assign(value);
			}
		}
		
		[Association(Name="form_group_form", Storage="_form_group", ThisKey="form_group_id", OtherKey="form_group_id", IsForeignKey=true)]
		public form_group form_group
		{
			get
			{
				return this._form_group.Entity;
			}
			set
			{
				form_group previousValue = this._form_group.Entity;
				if (((previousValue != value) 
							|| (this._form_group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form_group.Entity = null;
						previousValue.forms.Remove(this);
					}
					this._form_group.Entity = value;
					if ((value != null))
					{
						value.forms.Add(this);
						this._form_group_id = value.form_group_id;
					}
					else
					{
						this._form_group_id = default(int);
					}
					this.SendPropertyChanged("form_group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_form_order_types(form_order_type entity)
		{
			this.SendPropertyChanging();
			entity.form = this;
		}
		
		private void detach_form_order_types(form_order_type entity)
		{
			this.SendPropertyChanging();
			entity.form = null;
		}
		
		private void attach_form_delivery_methods(form_delivery_method entity)
		{
			this.SendPropertyChanging();
			entity.form = this;
		}
		
		private void detach_form_delivery_methods(form_delivery_method entity)
		{
			this.SendPropertyChanging();
			entity.form = null;
		}
		
		private void attach_business_rules(business_rule entity)
		{
			this.SendPropertyChanging();
			entity.form = this;
		}
		
		private void detach_business_rules(business_rule entity)
		{
			this.SendPropertyChanging();
			entity.form = null;
		}
		
		private void attach_business_exceptions(business_exception entity)
		{
			this.SendPropertyChanging();
			entity.form = this;
		}
		
		private void detach_business_exceptions(business_exception entity)
		{
			this.SendPropertyChanging();
			entity.form = null;
		}
		
		private void attach_form_permissions(form_permission entity)
		{
			this.SendPropertyChanging();
			entity.form = this;
		}
		
		private void detach_form_permissions(form_permission entity)
		{
			this.SendPropertyChanging();
			entity.form = null;
		}
		
		private void attach_form_delivery_date_types(form_delivery_date_type entity)
		{
			this.SendPropertyChanging();
			entity.form = this;
		}
		
		private void detach_form_delivery_date_types(form_delivery_date_type entity)
		{
			this.SendPropertyChanging();
			entity.form = null;
		}
		
		private void attach_form_requires_forms(form_requires_form entity)
		{
			this.SendPropertyChanging();
			entity.form = this;
		}
		
		private void detach_form_requires_forms(form_requires_form entity)
		{
			this.SendPropertyChanging();
			entity.form = null;
		}
		
		private void attach_form_requires_forms1(form_requires_form entity)
		{
			this.SendPropertyChanging();
			entity.form1 = this;
		}
		
		private void detach_form_requires_forms1(form_requires_form entity)
		{
			this.SendPropertyChanging();
			entity.form1 = null;
		}
	}
	
	[Table(Name="dbo.form_group")]
	public partial class form_group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_group_id;
		
		private string _form_group_name;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.DateTime _update_date;
		
		private int _update_user_id;
		
		private EntitySet<form> _forms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_group_idChanging(int value);
    partial void Onform_group_idChanged();
    partial void Onform_group_nameChanging(string value);
    partial void Onform_group_nameChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.DateTime value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(int value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public form_group()
		{
			this._forms = new EntitySet<form>(new Action<form>(this.attach_forms), new Action<form>(this.detach_forms));
			OnCreated();
		}
		
		[Column(Storage="_form_group_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_group_id
		{
			get
			{
				return this._form_group_id;
			}
			set
			{
				if ((this._form_group_id != value))
				{
					this.Onform_group_idChanging(value);
					this.SendPropertyChanging();
					this._form_group_id = value;
					this.SendPropertyChanged("form_group_id");
					this.Onform_group_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_group_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string form_group_name
		{
			get
			{
				return this._form_group_name;
			}
			set
			{
				if ((this._form_group_name != value))
				{
					this.Onform_group_nameChanging(value);
					this.SendPropertyChanging();
					this._form_group_name = value;
					this.SendPropertyChanged("form_group_name");
					this.Onform_group_nameChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime NOT NULL")]
		public System.DateTime update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int NOT NULL")]
		public int update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Association(Name="form_group_form", Storage="_forms", ThisKey="form_group_id", OtherKey="form_group_id")]
		public EntitySet<form> forms
		{
			get
			{
				return this._forms;
			}
			set
			{
				this._forms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_forms(form entity)
		{
			this.SendPropertyChanging();
			entity.form_group = this;
		}
		
		private void detach_forms(form entity)
		{
			this.SendPropertyChanging();
			entity.form_group = null;
		}
	}
	
	[Table(Name="dbo.form_order_type")]
	public partial class form_order_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_order_type_id;
		
		private int _form_id;
		
		private int _order_type_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.DateTime _update_date;
		
		private int _update_user_id;
		
		private EntityRef<form> _form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_order_type_idChanging(int value);
    partial void Onform_order_type_idChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Onorder_type_idChanging(int value);
    partial void Onorder_type_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.DateTime value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(int value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public form_order_type()
		{
			this._form = default(EntityRef<form>);
			OnCreated();
		}
		
		[Column(Storage="_form_order_type_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_order_type_id
		{
			get
			{
				return this._form_order_type_id;
			}
			set
			{
				if ((this._form_order_type_id != value))
				{
					this.Onform_order_type_idChanging(value);
					this.SendPropertyChanging();
					this._form_order_type_id = value;
					this.SendPropertyChanged("form_order_type_id");
					this.Onform_order_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					if (this._form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_order_type_id", DbType="Int NOT NULL")]
		public int order_type_id
		{
			get
			{
				return this._order_type_id;
			}
			set
			{
				if ((this._order_type_id != value))
				{
					this.Onorder_type_idChanging(value);
					this.SendPropertyChanging();
					this._order_type_id = value;
					this.SendPropertyChanged("order_type_id");
					this.Onorder_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime NOT NULL")]
		public System.DateTime update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int NOT NULL")]
		public int update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Association(Name="form_form_order_type", Storage="_form", ThisKey="form_id", OtherKey="form_id", IsForeignKey=true)]
		public form form
		{
			get
			{
				return this._form.Entity;
			}
			set
			{
				form previousValue = this._form.Entity;
				if (((previousValue != value) 
							|| (this._form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form.Entity = null;
						previousValue.form_order_types.Remove(this);
					}
					this._form.Entity = value;
					if ((value != null))
					{
						value.form_order_types.Add(this);
						this._form_id = value.form_id;
					}
					else
					{
						this._form_id = default(int);
					}
					this.SendPropertyChanged("form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_delivery_method")]
	public partial class form_delivery_method : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_delivery_method_id;
		
		private int _form_id;
		
		private int _delivery_method_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.DateTime _update_date;
		
		private int _update_user_id;
		
		private EntityRef<form> _form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_delivery_method_idChanging(int value);
    partial void Onform_delivery_method_idChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Ondelivery_method_idChanging(int value);
    partial void Ondelivery_method_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.DateTime value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(int value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public form_delivery_method()
		{
			this._form = default(EntityRef<form>);
			OnCreated();
		}
		
		[Column(Storage="_form_delivery_method_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_delivery_method_id
		{
			get
			{
				return this._form_delivery_method_id;
			}
			set
			{
				if ((this._form_delivery_method_id != value))
				{
					this.Onform_delivery_method_idChanging(value);
					this.SendPropertyChanging();
					this._form_delivery_method_id = value;
					this.SendPropertyChanged("form_delivery_method_id");
					this.Onform_delivery_method_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					if (this._form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_delivery_method_id", DbType="Int NOT NULL")]
		public int delivery_method_id
		{
			get
			{
				return this._delivery_method_id;
			}
			set
			{
				if ((this._delivery_method_id != value))
				{
					this.Ondelivery_method_idChanging(value);
					this.SendPropertyChanging();
					this._delivery_method_id = value;
					this.SendPropertyChanged("delivery_method_id");
					this.Ondelivery_method_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime NOT NULL")]
		public System.DateTime update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int NOT NULL")]
		public int update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Association(Name="form_form_delivery_method", Storage="_form", ThisKey="form_id", OtherKey="form_id", IsForeignKey=true)]
		public form form
		{
			get
			{
				return this._form.Entity;
			}
			set
			{
				form previousValue = this._form.Entity;
				if (((previousValue != value) 
							|| (this._form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form.Entity = null;
						previousValue.form_delivery_methods.Remove(this);
					}
					this._form.Entity = value;
					if ((value != null))
					{
						value.form_delivery_methods.Add(this);
						this._form_id = value.form_id;
					}
					else
					{
						this._form_id = default(int);
					}
					this.SendPropertyChanged("form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_section")]
	public partial class form_section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_section_id;
		
		private int _form_id;
		
		private int _form_section_type_id;
		
		private System.Nullable<int> _form_section_number;
		
		private string _form_section_title;
		
		private string _description;
		
		private int _catalog_item_category_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_section_idChanging(int value);
    partial void Onform_section_idChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Onform_section_type_idChanging(int value);
    partial void Onform_section_type_idChanged();
    partial void Onform_section_numberChanging(System.Nullable<int> value);
    partial void Onform_section_numberChanged();
    partial void Onform_section_titleChanging(string value);
    partial void Onform_section_titleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Oncatalog_item_category_idChanging(int value);
    partial void Oncatalog_item_category_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public form_section()
		{
			OnCreated();
		}
		
		[Column(Storage="_form_section_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_section_id
		{
			get
			{
				return this._form_section_id;
			}
			set
			{
				if ((this._form_section_id != value))
				{
					this.Onform_section_idChanging(value);
					this.SendPropertyChanging();
					this._form_section_id = value;
					this.SendPropertyChanged("form_section_id");
					this.Onform_section_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_section_type_id", DbType="Int NOT NULL")]
		public int form_section_type_id
		{
			get
			{
				return this._form_section_type_id;
			}
			set
			{
				if ((this._form_section_type_id != value))
				{
					this.Onform_section_type_idChanging(value);
					this.SendPropertyChanging();
					this._form_section_type_id = value;
					this.SendPropertyChanged("form_section_type_id");
					this.Onform_section_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_section_number", DbType="Int")]
		public System.Nullable<int> form_section_number
		{
			get
			{
				return this._form_section_number;
			}
			set
			{
				if ((this._form_section_number != value))
				{
					this.Onform_section_numberChanging(value);
					this.SendPropertyChanging();
					this._form_section_number = value;
					this.SendPropertyChanged("form_section_number");
					this.Onform_section_numberChanged();
				}
			}
		}
		
		[Column(Storage="_form_section_title", DbType="VarChar(100)")]
		public string form_section_title
		{
			get
			{
				return this._form_section_title;
			}
			set
			{
				if ((this._form_section_title != value))
				{
					this.Onform_section_titleChanging(value);
					this.SendPropertyChanging();
					this._form_section_title = value;
					this.SendPropertyChanged("form_section_title");
					this.Onform_section_titleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(250)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_category_id", DbType="Int NOT NULL")]
		public int catalog_item_category_id
		{
			get
			{
				return this._catalog_item_category_id;
			}
			set
			{
				if ((this._catalog_item_category_id != value))
				{
					this.Oncatalog_item_category_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_category_id = value;
					this.SendPropertyChanged("catalog_item_category_id");
					this.Oncatalog_item_category_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.catalog_group")]
	public partial class catalog_group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catalog_group_id;
		
		private string _catalog_group_code;
		
		private string _catalog_group_name;
		
		private string _description;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private EntitySet<catalog> _catalogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncatalog_group_idChanging(int value);
    partial void Oncatalog_group_idChanged();
    partial void Oncatalog_group_codeChanging(string value);
    partial void Oncatalog_group_codeChanged();
    partial void Oncatalog_group_nameChanging(string value);
    partial void Oncatalog_group_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public catalog_group()
		{
			this._catalogs = new EntitySet<catalog>(new Action<catalog>(this.attach_catalogs), new Action<catalog>(this.detach_catalogs));
			OnCreated();
		}
		
		[Column(Storage="_catalog_group_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catalog_group_id
		{
			get
			{
				return this._catalog_group_id;
			}
			set
			{
				if ((this._catalog_group_id != value))
				{
					this.Oncatalog_group_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_group_id = value;
					this.SendPropertyChanged("catalog_group_id");
					this.Oncatalog_group_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_group_code", DbType="VarChar(50)")]
		public string catalog_group_code
		{
			get
			{
				return this._catalog_group_code;
			}
			set
			{
				if ((this._catalog_group_code != value))
				{
					this.Oncatalog_group_codeChanging(value);
					this.SendPropertyChanging();
					this._catalog_group_code = value;
					this.SendPropertyChanged("catalog_group_code");
					this.Oncatalog_group_codeChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_group_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string catalog_group_name
		{
			get
			{
				return this._catalog_group_name;
			}
			set
			{
				if ((this._catalog_group_name != value))
				{
					this.Oncatalog_group_nameChanging(value);
					this.SendPropertyChanging();
					this._catalog_group_name = value;
					this.SendPropertyChanged("catalog_group_name");
					this.Oncatalog_group_nameChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(2000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Association(Name="catalog_group_catalog", Storage="_catalogs", ThisKey="catalog_group_id", OtherKey="catalog_group_id")]
		public EntitySet<catalog> catalogs
		{
			get
			{
				return this._catalogs;
			}
			set
			{
				this._catalogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_catalogs(catalog entity)
		{
			this.SendPropertyChanging();
			entity.catalog_group = this;
		}
		
		private void detach_catalogs(catalog entity)
		{
			this.SendPropertyChanging();
			entity.catalog_group = null;
		}
	}
	
	[Table(Name="dbo.catalog")]
	public partial class catalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catalog_id;
		
		private int _catalog_group_id;
		
		private string _catalog_code;
		
		private string _catalog_name;
		
		private string _description;
		
		private string _culture;
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private System.Nullable<bool> _is_priced;
		
		private EntitySet<catalog_item_category> _catalog_item_categories;
		
		private EntityRef<catalog_group> _catalog_group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncatalog_idChanging(int value);
    partial void Oncatalog_idChanged();
    partial void Oncatalog_group_idChanging(int value);
    partial void Oncatalog_group_idChanged();
    partial void Oncatalog_codeChanging(string value);
    partial void Oncatalog_codeChanged();
    partial void Oncatalog_nameChanging(string value);
    partial void Oncatalog_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncultureChanging(string value);
    partial void OncultureChanged();
    partial void Onstart_dateChanging(System.DateTime value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.DateTime value);
    partial void Onend_dateChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void Onis_pricedChanging(System.Nullable<bool> value);
    partial void Onis_pricedChanged();
    #endregion
		
		public catalog()
		{
			this._catalog_item_categories = new EntitySet<catalog_item_category>(new Action<catalog_item_category>(this.attach_catalog_item_categories), new Action<catalog_item_category>(this.detach_catalog_item_categories));
			this._catalog_group = default(EntityRef<catalog_group>);
			OnCreated();
		}
		
		[Column(Storage="_catalog_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catalog_id
		{
			get
			{
				return this._catalog_id;
			}
			set
			{
				if ((this._catalog_id != value))
				{
					this.Oncatalog_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_id = value;
					this.SendPropertyChanged("catalog_id");
					this.Oncatalog_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_group_id", DbType="Int NOT NULL")]
		public int catalog_group_id
		{
			get
			{
				return this._catalog_group_id;
			}
			set
			{
				if ((this._catalog_group_id != value))
				{
					if (this._catalog_group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncatalog_group_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_group_id = value;
					this.SendPropertyChanged("catalog_group_id");
					this.Oncatalog_group_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_code", DbType="VarChar(50)")]
		public string catalog_code
		{
			get
			{
				return this._catalog_code;
			}
			set
			{
				if ((this._catalog_code != value))
				{
					this.Oncatalog_codeChanging(value);
					this.SendPropertyChanging();
					this._catalog_code = value;
					this.SendPropertyChanged("catalog_code");
					this.Oncatalog_codeChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string catalog_name
		{
			get
			{
				return this._catalog_name;
			}
			set
			{
				if ((this._catalog_name != value))
				{
					this.Oncatalog_nameChanging(value);
					this.SendPropertyChanging();
					this._catalog_name = value;
					this.SendPropertyChanged("catalog_name");
					this.Oncatalog_nameChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_culture", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string culture
		{
			get
			{
				return this._culture;
			}
			set
			{
				if ((this._culture != value))
				{
					this.OncultureChanging(value);
					this.SendPropertyChanging();
					this._culture = value;
					this.SendPropertyChanged("culture");
					this.OncultureChanged();
				}
			}
		}
		
		[Column(Storage="_start_date", DbType="DateTime NOT NULL")]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[Column(Storage="_end_date", DbType="DateTime NOT NULL")]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_is_priced", DbType="Bit NOT NULL")]
		public System.Nullable<bool> is_priced
		{
			get
			{
				return this._is_priced;
			}
			set
			{
				if ((this._is_priced != value))
				{
					this.Onis_pricedChanging(value);
					this.SendPropertyChanging();
					this._is_priced = value;
					this.SendPropertyChanged("is_priced");
					this.Onis_pricedChanged();
				}
			}
		}
		
		[Association(Name="catalog_catalog_item_category", Storage="_catalog_item_categories", ThisKey="catalog_id", OtherKey="catalog_id")]
		public EntitySet<catalog_item_category> catalog_item_categories
		{
			get
			{
				return this._catalog_item_categories;
			}
			set
			{
				this._catalog_item_categories.Assign(value);
			}
		}
		
		[Association(Name="catalog_group_catalog", Storage="_catalog_group", ThisKey="catalog_group_id", OtherKey="catalog_group_id", IsForeignKey=true)]
		public catalog_group catalog_group
		{
			get
			{
				return this._catalog_group.Entity;
			}
			set
			{
				catalog_group previousValue = this._catalog_group.Entity;
				if (((previousValue != value) 
							|| (this._catalog_group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._catalog_group.Entity = null;
						previousValue.catalogs.Remove(this);
					}
					this._catalog_group.Entity = value;
					if ((value != null))
					{
						value.catalogs.Add(this);
						this._catalog_group_id = value.catalog_group_id;
					}
					else
					{
						this._catalog_group_id = default(int);
					}
					this.SendPropertyChanged("catalog_group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_catalog_item_categories(catalog_item_category entity)
		{
			this.SendPropertyChanging();
			entity.catalog = this;
		}
		
		private void detach_catalog_item_categories(catalog_item_category entity)
		{
			this.SendPropertyChanging();
			entity.catalog = null;
		}
	}
	
	[Table(Name="dbo.catalog_item_category")]
	public partial class catalog_item_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catalog_item_category_id;
		
		private int _catalog_id;
		
		private System.Nullable<int> _parent_catalog_item_category_id;
		
		private string _catalog_item_category_name;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private EntitySet<catalog_item_category> _catalog_item_categories;
		
		private EntitySet<catalog_item_category_catalog_item> _catalog_item_category_catalog_items;
		
		private EntityRef<catalog> _catalog;
		
		private EntityRef<catalog_item_category> _catalog_item_category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncatalog_item_category_idChanging(int value);
    partial void Oncatalog_item_category_idChanged();
    partial void Oncatalog_idChanging(int value);
    partial void Oncatalog_idChanged();
    partial void Onparent_catalog_item_category_idChanging(System.Nullable<int> value);
    partial void Onparent_catalog_item_category_idChanged();
    partial void Oncatalog_item_category_nameChanging(string value);
    partial void Oncatalog_item_category_nameChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public catalog_item_category()
		{
			this._catalog_item_categories = new EntitySet<catalog_item_category>(new Action<catalog_item_category>(this.attach_catalog_item_categories), new Action<catalog_item_category>(this.detach_catalog_item_categories));
			this._catalog_item_category_catalog_items = new EntitySet<catalog_item_category_catalog_item>(new Action<catalog_item_category_catalog_item>(this.attach_catalog_item_category_catalog_items), new Action<catalog_item_category_catalog_item>(this.detach_catalog_item_category_catalog_items));
			this._catalog = default(EntityRef<catalog>);
			this._catalog_item_category1 = default(EntityRef<catalog_item_category>);
			OnCreated();
		}
		
		[Column(Storage="_catalog_item_category_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catalog_item_category_id
		{
			get
			{
				return this._catalog_item_category_id;
			}
			set
			{
				if ((this._catalog_item_category_id != value))
				{
					this.Oncatalog_item_category_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_category_id = value;
					this.SendPropertyChanged("catalog_item_category_id");
					this.Oncatalog_item_category_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_id", DbType="Int NOT NULL")]
		public int catalog_id
		{
			get
			{
				return this._catalog_id;
			}
			set
			{
				if ((this._catalog_id != value))
				{
					if (this._catalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncatalog_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_id = value;
					this.SendPropertyChanged("catalog_id");
					this.Oncatalog_idChanged();
				}
			}
		}
		
		[Column(Storage="_parent_catalog_item_category_id", DbType="Int")]
		public System.Nullable<int> parent_catalog_item_category_id
		{
			get
			{
				return this._parent_catalog_item_category_id;
			}
			set
			{
				if ((this._parent_catalog_item_category_id != value))
				{
					if (this._catalog_item_category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_catalog_item_category_idChanging(value);
					this.SendPropertyChanging();
					this._parent_catalog_item_category_id = value;
					this.SendPropertyChanged("parent_catalog_item_category_id");
					this.Onparent_catalog_item_category_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_category_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string catalog_item_category_name
		{
			get
			{
				return this._catalog_item_category_name;
			}
			set
			{
				if ((this._catalog_item_category_name != value))
				{
					this.Oncatalog_item_category_nameChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_category_name = value;
					this.SendPropertyChanged("catalog_item_category_name");
					this.Oncatalog_item_category_nameChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Association(Name="catalog_item_category_catalog_item_category", Storage="_catalog_item_categories", ThisKey="catalog_item_category_id", OtherKey="parent_catalog_item_category_id")]
		public EntitySet<catalog_item_category> catalog_item_categories
		{
			get
			{
				return this._catalog_item_categories;
			}
			set
			{
				this._catalog_item_categories.Assign(value);
			}
		}
		
		[Association(Name="catalog_item_category_catalog_item_category_catalog_item", Storage="_catalog_item_category_catalog_items", ThisKey="catalog_item_category_id", OtherKey="catalog_item_category_id")]
		public EntitySet<catalog_item_category_catalog_item> catalog_item_category_catalog_items
		{
			get
			{
				return this._catalog_item_category_catalog_items;
			}
			set
			{
				this._catalog_item_category_catalog_items.Assign(value);
			}
		}
		
		[Association(Name="catalog_catalog_item_category", Storage="_catalog", ThisKey="catalog_id", OtherKey="catalog_id", IsForeignKey=true)]
		public catalog catalog
		{
			get
			{
				return this._catalog.Entity;
			}
			set
			{
				catalog previousValue = this._catalog.Entity;
				if (((previousValue != value) 
							|| (this._catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._catalog.Entity = null;
						previousValue.catalog_item_categories.Remove(this);
					}
					this._catalog.Entity = value;
					if ((value != null))
					{
						value.catalog_item_categories.Add(this);
						this._catalog_id = value.catalog_id;
					}
					else
					{
						this._catalog_id = default(int);
					}
					this.SendPropertyChanged("catalog");
				}
			}
		}
		
		[Association(Name="catalog_item_category_catalog_item_category", Storage="_catalog_item_category1", ThisKey="parent_catalog_item_category_id", OtherKey="catalog_item_category_id", IsForeignKey=true)]
		public catalog_item_category catalog_item_category1
		{
			get
			{
				return this._catalog_item_category1.Entity;
			}
			set
			{
				catalog_item_category previousValue = this._catalog_item_category1.Entity;
				if (((previousValue != value) 
							|| (this._catalog_item_category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._catalog_item_category1.Entity = null;
						previousValue.catalog_item_categories.Remove(this);
					}
					this._catalog_item_category1.Entity = value;
					if ((value != null))
					{
						value.catalog_item_categories.Add(this);
						this._parent_catalog_item_category_id = value.catalog_item_category_id;
					}
					else
					{
						this._parent_catalog_item_category_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("catalog_item_category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_catalog_item_categories(catalog_item_category entity)
		{
			this.SendPropertyChanging();
			entity.catalog_item_category1 = this;
		}
		
		private void detach_catalog_item_categories(catalog_item_category entity)
		{
			this.SendPropertyChanging();
			entity.catalog_item_category1 = null;
		}
		
		private void attach_catalog_item_category_catalog_items(catalog_item_category_catalog_item entity)
		{
			this.SendPropertyChanging();
			entity.catalog_item_category = this;
		}
		
		private void detach_catalog_item_category_catalog_items(catalog_item_category_catalog_item entity)
		{
			this.SendPropertyChanging();
			entity.catalog_item_category = null;
		}
	}
	
	[Table(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private int _product_type_id;
		
		private System.Nullable<int> _vendor_id;
		
		private System.Nullable<int> _coupon_id;
		
		private string _product_code;
		
		private string _product_name;
		
		private string _description;
		
		private int _nb_units;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<decimal> _unit_cost;
		
		private System.Nullable<int> _nb_day_lead_time;
		
		private string _vendor_item_code;
		
		private string _oracle_code;
		
		private System.Nullable<decimal> _commission;
		
		private System.Nullable<bool> _is_free_sample;
		
		private string _image_url;
		
		private System.Nullable<int> _business_division_id;
		
		private string _IVITEM;
		
		private string _IVCOUP;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private int _product_status_id;
		
		private EntityRef<vendor> _vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onproduct_type_idChanging(int value);
    partial void Onproduct_type_idChanged();
    partial void Onvendor_idChanging(System.Nullable<int> value);
    partial void Onvendor_idChanged();
    partial void Oncoupon_idChanging(System.Nullable<int> value);
    partial void Oncoupon_idChanged();
    partial void Onproduct_codeChanging(string value);
    partial void Onproduct_codeChanged();
    partial void Onproduct_nameChanging(string value);
    partial void Onproduct_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onnb_unitsChanging(int value);
    partial void Onnb_unitsChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Onunit_costChanging(System.Nullable<decimal> value);
    partial void Onunit_costChanged();
    partial void Onnb_day_lead_timeChanging(System.Nullable<int> value);
    partial void Onnb_day_lead_timeChanged();
    partial void Onvendor_item_codeChanging(string value);
    partial void Onvendor_item_codeChanged();
    partial void Onoracle_codeChanging(string value);
    partial void Onoracle_codeChanged();
    partial void OncommissionChanging(System.Nullable<decimal> value);
    partial void OncommissionChanged();
    partial void Onis_free_sampleChanging(System.Nullable<bool> value);
    partial void Onis_free_sampleChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    partial void Onbusiness_division_idChanging(System.Nullable<int> value);
    partial void Onbusiness_division_idChanged();
    partial void OnIVITEMChanging(string value);
    partial void OnIVITEMChanged();
    partial void OnIVCOUPChanging(string value);
    partial void OnIVCOUPChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void Onproduct_status_idChanging(int value);
    partial void Onproduct_status_idChanged();
    #endregion
		
		public product()
		{
			this._vendor = default(EntityRef<vendor>);
			OnCreated();
		}
		
		[Column(Storage="_product_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[Column(Storage="_product_type_id", DbType="Int NOT NULL")]
		public int product_type_id
		{
			get
			{
				return this._product_type_id;
			}
			set
			{
				if ((this._product_type_id != value))
				{
					this.Onproduct_type_idChanging(value);
					this.SendPropertyChanging();
					this._product_type_id = value;
					this.SendPropertyChanged("product_type_id");
					this.Onproduct_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_vendor_id", DbType="Int")]
		public System.Nullable<int> vendor_id
		{
			get
			{
				return this._vendor_id;
			}
			set
			{
				if ((this._vendor_id != value))
				{
					if (this._vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvendor_idChanging(value);
					this.SendPropertyChanging();
					this._vendor_id = value;
					this.SendPropertyChanged("vendor_id");
					this.Onvendor_idChanged();
				}
			}
		}
		
		[Column(Storage="_coupon_id", DbType="Int")]
		public System.Nullable<int> coupon_id
		{
			get
			{
				return this._coupon_id;
			}
			set
			{
				if ((this._coupon_id != value))
				{
					this.Oncoupon_idChanging(value);
					this.SendPropertyChanging();
					this._coupon_id = value;
					this.SendPropertyChanged("coupon_id");
					this.Oncoupon_idChanged();
				}
			}
		}
		
		[Column(Storage="_product_code", DbType="VarChar(50)")]
		public string product_code
		{
			get
			{
				return this._product_code;
			}
			set
			{
				if ((this._product_code != value))
				{
					this.Onproduct_codeChanging(value);
					this.SendPropertyChanging();
					this._product_code = value;
					this.SendPropertyChanged("product_code");
					this.Onproduct_codeChanged();
				}
			}
		}
		
		[Column(Storage="_product_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string product_name
		{
			get
			{
				return this._product_name;
			}
			set
			{
				if ((this._product_name != value))
				{
					this.Onproduct_nameChanging(value);
					this.SendPropertyChanging();
					this._product_name = value;
					this.SendPropertyChanged("product_name");
					this.Onproduct_nameChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(2000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_nb_units", DbType="Int NOT NULL")]
		public int nb_units
		{
			get
			{
				return this._nb_units;
			}
			set
			{
				if ((this._nb_units != value))
				{
					this.Onnb_unitsChanging(value);
					this.SendPropertyChanging();
					this._nb_units = value;
					this.SendPropertyChanged("nb_units");
					this.Onnb_unitsChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="Money")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[Column(Storage="_unit_cost", DbType="Money")]
		public System.Nullable<decimal> unit_cost
		{
			get
			{
				return this._unit_cost;
			}
			set
			{
				if ((this._unit_cost != value))
				{
					this.Onunit_costChanging(value);
					this.SendPropertyChanging();
					this._unit_cost = value;
					this.SendPropertyChanged("unit_cost");
					this.Onunit_costChanged();
				}
			}
		}
		
		[Column(Storage="_nb_day_lead_time", DbType="Int")]
		public System.Nullable<int> nb_day_lead_time
		{
			get
			{
				return this._nb_day_lead_time;
			}
			set
			{
				if ((this._nb_day_lead_time != value))
				{
					this.Onnb_day_lead_timeChanging(value);
					this.SendPropertyChanging();
					this._nb_day_lead_time = value;
					this.SendPropertyChanged("nb_day_lead_time");
					this.Onnb_day_lead_timeChanged();
				}
			}
		}
		
		[Column(Storage="_vendor_item_code", DbType="VarChar(50)")]
		public string vendor_item_code
		{
			get
			{
				return this._vendor_item_code;
			}
			set
			{
				if ((this._vendor_item_code != value))
				{
					this.Onvendor_item_codeChanging(value);
					this.SendPropertyChanging();
					this._vendor_item_code = value;
					this.SendPropertyChanged("vendor_item_code");
					this.Onvendor_item_codeChanged();
				}
			}
		}
		
		[Column(Storage="_oracle_code", DbType="VarChar(50)")]
		public string oracle_code
		{
			get
			{
				return this._oracle_code;
			}
			set
			{
				if ((this._oracle_code != value))
				{
					this.Onoracle_codeChanging(value);
					this.SendPropertyChanging();
					this._oracle_code = value;
					this.SendPropertyChanged("oracle_code");
					this.Onoracle_codeChanged();
				}
			}
		}
		
		[Column(Storage="_commission", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> commission
		{
			get
			{
				return this._commission;
			}
			set
			{
				if ((this._commission != value))
				{
					this.OncommissionChanging(value);
					this.SendPropertyChanging();
					this._commission = value;
					this.SendPropertyChanged("commission");
					this.OncommissionChanged();
				}
			}
		}
		
		[Column(Storage="_is_free_sample", DbType="Bit")]
		public System.Nullable<bool> is_free_sample
		{
			get
			{
				return this._is_free_sample;
			}
			set
			{
				if ((this._is_free_sample != value))
				{
					this.Onis_free_sampleChanging(value);
					this.SendPropertyChanging();
					this._is_free_sample = value;
					this.SendPropertyChanged("is_free_sample");
					this.Onis_free_sampleChanged();
				}
			}
		}
		
		[Column(Storage="_image_url", DbType="VarChar(255)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[Column(Storage="_business_division_id", DbType="Int")]
		public System.Nullable<int> business_division_id
		{
			get
			{
				return this._business_division_id;
			}
			set
			{
				if ((this._business_division_id != value))
				{
					this.Onbusiness_division_idChanging(value);
					this.SendPropertyChanging();
					this._business_division_id = value;
					this.SendPropertyChanged("business_division_id");
					this.Onbusiness_division_idChanged();
				}
			}
		}
		
		[Column(Storage="_IVITEM", DbType="VarChar(50)")]
		public string IVITEM
		{
			get
			{
				return this._IVITEM;
			}
			set
			{
				if ((this._IVITEM != value))
				{
					this.OnIVITEMChanging(value);
					this.SendPropertyChanging();
					this._IVITEM = value;
					this.SendPropertyChanged("IVITEM");
					this.OnIVITEMChanged();
				}
			}
		}
		
		[Column(Storage="_IVCOUP", DbType="VarChar(10)")]
		public string IVCOUP
		{
			get
			{
				return this._IVCOUP;
			}
			set
			{
				if ((this._IVCOUP != value))
				{
					this.OnIVCOUPChanging(value);
					this.SendPropertyChanging();
					this._IVCOUP = value;
					this.SendPropertyChanged("IVCOUP");
					this.OnIVCOUPChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_product_status_id", DbType="Int NOT NULL")]
		public int product_status_id
		{
			get
			{
				return this._product_status_id;
			}
			set
			{
				if ((this._product_status_id != value))
				{
					this.Onproduct_status_idChanging(value);
					this.SendPropertyChanging();
					this._product_status_id = value;
					this.SendPropertyChanged("product_status_id");
					this.Onproduct_status_idChanged();
				}
			}
		}
		
		[Association(Name="vendor_product", Storage="_vendor", ThisKey="vendor_id", OtherKey="vendor_id", IsForeignKey=true)]
		public vendor vendor
		{
			get
			{
				return this._vendor.Entity;
			}
			set
			{
				vendor previousValue = this._vendor.Entity;
				if (((previousValue != value) 
							|| (this._vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vendor.Entity = null;
						previousValue.products.Remove(this);
					}
					this._vendor.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._vendor_id = value.vendor_id;
					}
					else
					{
						this._vendor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.catalog_item")]
	public partial class catalog_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catalog_item_id;
		
		private int _catalog_id;
		
		private int _product_id;
		
		private string _catalog_item_code;
		
		private string _catalog_item_name;
		
		private string _description;
		
		private System.Nullable<int> _nb_units;
		
		private System.Nullable<decimal> _price;
		
		private string _image_url;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private int _catalog_item_status_id;
		
		private string _catalog_item_export_name;
		
		private EntitySet<catalog_item_category_catalog_item> _catalog_item_category_catalog_items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncatalog_item_idChanging(int value);
    partial void Oncatalog_item_idChanged();
    partial void Oncatalog_idChanging(int value);
    partial void Oncatalog_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Oncatalog_item_codeChanging(string value);
    partial void Oncatalog_item_codeChanged();
    partial void Oncatalog_item_nameChanging(string value);
    partial void Oncatalog_item_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onnb_unitsChanging(System.Nullable<int> value);
    partial void Onnb_unitsChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void Oncatalog_item_status_idChanging(int value);
    partial void Oncatalog_item_status_idChanged();
    partial void Oncatalog_item_export_nameChanging(string value);
    partial void Oncatalog_item_export_nameChanged();
    #endregion
		
		public catalog_item()
		{
			this._catalog_item_category_catalog_items = new EntitySet<catalog_item_category_catalog_item>(new Action<catalog_item_category_catalog_item>(this.attach_catalog_item_category_catalog_items), new Action<catalog_item_category_catalog_item>(this.detach_catalog_item_category_catalog_items));
			OnCreated();
		}
		
		[Column(Storage="_catalog_item_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catalog_item_id
		{
			get
			{
				return this._catalog_item_id;
			}
			set
			{
				if ((this._catalog_item_id != value))
				{
					this.Oncatalog_item_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_id = value;
					this.SendPropertyChanged("catalog_item_id");
					this.Oncatalog_item_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_id", DbType="Int NOT NULL")]
		public int catalog_id
		{
			get
			{
				return this._catalog_id;
			}
			set
			{
				if ((this._catalog_id != value))
				{
					this.Oncatalog_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_id = value;
					this.SendPropertyChanged("catalog_id");
					this.Oncatalog_idChanged();
				}
			}
		}
		
		[Column(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_code", DbType="VarChar(50)")]
		public string catalog_item_code
		{
			get
			{
				return this._catalog_item_code;
			}
			set
			{
				if ((this._catalog_item_code != value))
				{
					this.Oncatalog_item_codeChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_code = value;
					this.SendPropertyChanged("catalog_item_code");
					this.Oncatalog_item_codeChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_name", DbType="VarChar(50)")]
		public string catalog_item_name
		{
			get
			{
				return this._catalog_item_name;
			}
			set
			{
				if ((this._catalog_item_name != value))
				{
					this.Oncatalog_item_nameChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_name = value;
					this.SendPropertyChanged("catalog_item_name");
					this.Oncatalog_item_nameChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(2000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_nb_units", DbType="Int")]
		public System.Nullable<int> nb_units
		{
			get
			{
				return this._nb_units;
			}
			set
			{
				if ((this._nb_units != value))
				{
					this.Onnb_unitsChanging(value);
					this.SendPropertyChanging();
					this._nb_units = value;
					this.SendPropertyChanged("nb_units");
					this.Onnb_unitsChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="Money")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[Column(Storage="_image_url", DbType="VarChar(255)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_status_id", DbType="Int NOT NULL")]
		public int catalog_item_status_id
		{
			get
			{
				return this._catalog_item_status_id;
			}
			set
			{
				if ((this._catalog_item_status_id != value))
				{
					this.Oncatalog_item_status_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_status_id = value;
					this.SendPropertyChanged("catalog_item_status_id");
					this.Oncatalog_item_status_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_export_name", DbType="VarChar(50)")]
		public string catalog_item_export_name
		{
			get
			{
				return this._catalog_item_export_name;
			}
			set
			{
				if ((this._catalog_item_export_name != value))
				{
					this.Oncatalog_item_export_nameChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_export_name = value;
					this.SendPropertyChanged("catalog_item_export_name");
					this.Oncatalog_item_export_nameChanged();
				}
			}
		}
		
		[Association(Name="catalog_item_catalog_item_category_catalog_item", Storage="_catalog_item_category_catalog_items", ThisKey="catalog_item_id", OtherKey="catalog_item_id")]
		public EntitySet<catalog_item_category_catalog_item> catalog_item_category_catalog_items
		{
			get
			{
				return this._catalog_item_category_catalog_items;
			}
			set
			{
				this._catalog_item_category_catalog_items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_catalog_item_category_catalog_items(catalog_item_category_catalog_item entity)
		{
			this.SendPropertyChanging();
			entity.catalog_item = this;
		}
		
		private void detach_catalog_item_category_catalog_items(catalog_item_category_catalog_item entity)
		{
			this.SendPropertyChanging();
			entity.catalog_item = null;
		}
	}
	
	[Table(Name="dbo.catalog_item_detail")]
	public partial class catalog_item_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catalog_item_detail_id;
		
		private string _catalog_item_detail_code;
		
		private string _catalog_item_detail_name;
		
		private int _catalog_item_id;
		
		private string _description;
		
		private decimal _price;
		
		private int _nb_units;
		
		private int _term;
		
		private System.Nullable<bool> _is_default;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private double _profit_rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncatalog_item_detail_idChanging(int value);
    partial void Oncatalog_item_detail_idChanged();
    partial void Oncatalog_item_detail_codeChanging(string value);
    partial void Oncatalog_item_detail_codeChanged();
    partial void Oncatalog_item_detail_nameChanging(string value);
    partial void Oncatalog_item_detail_nameChanged();
    partial void Oncatalog_item_idChanging(int value);
    partial void Oncatalog_item_idChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void Onnb_unitsChanging(int value);
    partial void Onnb_unitsChanged();
    partial void OntermChanging(int value);
    partial void OntermChanged();
    partial void Onis_defaultChanging(System.Nullable<bool> value);
    partial void Onis_defaultChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void Onprofit_rateChanging(double value);
    partial void Onprofit_rateChanged();
    #endregion
		
		public catalog_item_detail()
		{
			OnCreated();
		}
		
		[Column(Storage="_catalog_item_detail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catalog_item_detail_id
		{
			get
			{
				return this._catalog_item_detail_id;
			}
			set
			{
				if ((this._catalog_item_detail_id != value))
				{
					this.Oncatalog_item_detail_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_detail_id = value;
					this.SendPropertyChanged("catalog_item_detail_id");
					this.Oncatalog_item_detail_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_detail_code", DbType="VarChar(50)")]
		public string catalog_item_detail_code
		{
			get
			{
				return this._catalog_item_detail_code;
			}
			set
			{
				if ((this._catalog_item_detail_code != value))
				{
					this.Oncatalog_item_detail_codeChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_detail_code = value;
					this.SendPropertyChanged("catalog_item_detail_code");
					this.Oncatalog_item_detail_codeChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_detail_name", DbType="VarChar(50)")]
		public string catalog_item_detail_name
		{
			get
			{
				return this._catalog_item_detail_name;
			}
			set
			{
				if ((this._catalog_item_detail_name != value))
				{
					this.Oncatalog_item_detail_nameChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_detail_name = value;
					this.SendPropertyChanged("catalog_item_detail_name");
					this.Oncatalog_item_detail_nameChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_id", DbType="Int NOT NULL")]
		public int catalog_item_id
		{
			get
			{
				return this._catalog_item_id;
			}
			set
			{
				if ((this._catalog_item_id != value))
				{
					this.Oncatalog_item_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_id = value;
					this.SendPropertyChanged("catalog_item_id");
					this.Oncatalog_item_idChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(2000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="Money NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[Column(Storage="_nb_units", DbType="Int NOT NULL")]
		public int nb_units
		{
			get
			{
				return this._nb_units;
			}
			set
			{
				if ((this._nb_units != value))
				{
					this.Onnb_unitsChanging(value);
					this.SendPropertyChanging();
					this._nb_units = value;
					this.SendPropertyChanged("nb_units");
					this.Onnb_unitsChanged();
				}
			}
		}
		
		[Column(Storage="_term", DbType="Int NOT NULL")]
		public int term
		{
			get
			{
				return this._term;
			}
			set
			{
				if ((this._term != value))
				{
					this.OntermChanging(value);
					this.SendPropertyChanging();
					this._term = value;
					this.SendPropertyChanged("term");
					this.OntermChanged();
				}
			}
		}
		
		[Column(Storage="_is_default", DbType="Bit")]
		public System.Nullable<bool> is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_profit_rate", DbType="Float NOT NULL")]
		public double profit_rate
		{
			get
			{
				return this._profit_rate;
			}
			set
			{
				if ((this._profit_rate != value))
				{
					this.Onprofit_rateChanging(value);
					this.SendPropertyChanging();
					this._profit_rate = value;
					this.SendPropertyChanged("profit_rate");
					this.Onprofit_rateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.catalog_item_category_catalog_item")]
	public partial class catalog_item_category_catalog_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catalog_item_category_catalog_item_id;
		
		private int _catalog_item_category_id;
		
		private int _catalog_item_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private System.Nullable<int> _display_order;
		
		private EntityRef<catalog_item> _catalog_item;
		
		private EntityRef<catalog_item_category> _catalog_item_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncatalog_item_category_catalog_item_idChanging(int value);
    partial void Oncatalog_item_category_catalog_item_idChanged();
    partial void Oncatalog_item_category_idChanging(int value);
    partial void Oncatalog_item_category_idChanged();
    partial void Oncatalog_item_idChanging(int value);
    partial void Oncatalog_item_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void Ondisplay_orderChanging(System.Nullable<int> value);
    partial void Ondisplay_orderChanged();
    #endregion
		
		public catalog_item_category_catalog_item()
		{
			this._catalog_item = default(EntityRef<catalog_item>);
			this._catalog_item_category = default(EntityRef<catalog_item_category>);
			OnCreated();
		}
		
		[Column(Storage="_catalog_item_category_catalog_item_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catalog_item_category_catalog_item_id
		{
			get
			{
				return this._catalog_item_category_catalog_item_id;
			}
			set
			{
				if ((this._catalog_item_category_catalog_item_id != value))
				{
					this.Oncatalog_item_category_catalog_item_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_category_catalog_item_id = value;
					this.SendPropertyChanged("catalog_item_category_catalog_item_id");
					this.Oncatalog_item_category_catalog_item_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_category_id", DbType="Int NOT NULL")]
		public int catalog_item_category_id
		{
			get
			{
				return this._catalog_item_category_id;
			}
			set
			{
				if ((this._catalog_item_category_id != value))
				{
					if (this._catalog_item_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncatalog_item_category_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_category_id = value;
					this.SendPropertyChanged("catalog_item_category_id");
					this.Oncatalog_item_category_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_id", DbType="Int NOT NULL")]
		public int catalog_item_id
		{
			get
			{
				return this._catalog_item_id;
			}
			set
			{
				if ((this._catalog_item_id != value))
				{
					if (this._catalog_item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncatalog_item_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_id = value;
					this.SendPropertyChanged("catalog_item_id");
					this.Oncatalog_item_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_display_order", DbType="Int")]
		public System.Nullable<int> display_order
		{
			get
			{
				return this._display_order;
			}
			set
			{
				if ((this._display_order != value))
				{
					this.Ondisplay_orderChanging(value);
					this.SendPropertyChanging();
					this._display_order = value;
					this.SendPropertyChanged("display_order");
					this.Ondisplay_orderChanged();
				}
			}
		}
		
		[Association(Name="catalog_item_catalog_item_category_catalog_item", Storage="_catalog_item", ThisKey="catalog_item_id", OtherKey="catalog_item_id", IsForeignKey=true)]
		public catalog_item catalog_item
		{
			get
			{
				return this._catalog_item.Entity;
			}
			set
			{
				catalog_item previousValue = this._catalog_item.Entity;
				if (((previousValue != value) 
							|| (this._catalog_item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._catalog_item.Entity = null;
						previousValue.catalog_item_category_catalog_items.Remove(this);
					}
					this._catalog_item.Entity = value;
					if ((value != null))
					{
						value.catalog_item_category_catalog_items.Add(this);
						this._catalog_item_id = value.catalog_item_id;
					}
					else
					{
						this._catalog_item_id = default(int);
					}
					this.SendPropertyChanged("catalog_item");
				}
			}
		}
		
		[Association(Name="catalog_item_category_catalog_item_category_catalog_item", Storage="_catalog_item_category", ThisKey="catalog_item_category_id", OtherKey="catalog_item_category_id", IsForeignKey=true)]
		public catalog_item_category catalog_item_category
		{
			get
			{
				return this._catalog_item_category.Entity;
			}
			set
			{
				catalog_item_category previousValue = this._catalog_item_category.Entity;
				if (((previousValue != value) 
							|| (this._catalog_item_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._catalog_item_category.Entity = null;
						previousValue.catalog_item_category_catalog_items.Remove(this);
					}
					this._catalog_item_category.Entity = value;
					if ((value != null))
					{
						value.catalog_item_category_catalog_items.Add(this);
						this._catalog_item_category_id = value.catalog_item_category_id;
					}
					else
					{
						this._catalog_item_category_id = default(int);
					}
					this.SendPropertyChanged("catalog_item_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.business_rule")]
	public partial class business_rule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _business_rule_id;
		
		private System.Nullable<int> _logical_operator_id;
		
		private System.Nullable<int> _form_id;
		
		private System.Nullable<int> _field_id;
		
		private string _business_rule_name;
		
		private string _message;
		
		private string _value_to_compare;
		
		private string _description;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private System.Nullable<int> _form_section_type_id;
		
		private System.Nullable<int> _form_section_number;
		
		private EntityRef<form> _form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbusiness_rule_idChanging(int value);
    partial void Onbusiness_rule_idChanged();
    partial void Onlogical_operator_idChanging(System.Nullable<int> value);
    partial void Onlogical_operator_idChanged();
    partial void Onform_idChanging(System.Nullable<int> value);
    partial void Onform_idChanged();
    partial void Onfield_idChanging(System.Nullable<int> value);
    partial void Onfield_idChanged();
    partial void Onbusiness_rule_nameChanging(string value);
    partial void Onbusiness_rule_nameChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void Onvalue_to_compareChanging(string value);
    partial void Onvalue_to_compareChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void Onform_section_type_idChanging(System.Nullable<int> value);
    partial void Onform_section_type_idChanged();
    partial void Onform_section_numberChanging(System.Nullable<int> value);
    partial void Onform_section_numberChanged();
    #endregion
		
		public business_rule()
		{
			this._form = default(EntityRef<form>);
			OnCreated();
		}
		
		[Column(Storage="_business_rule_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int business_rule_id
		{
			get
			{
				return this._business_rule_id;
			}
			set
			{
				if ((this._business_rule_id != value))
				{
					this.Onbusiness_rule_idChanging(value);
					this.SendPropertyChanging();
					this._business_rule_id = value;
					this.SendPropertyChanged("business_rule_id");
					this.Onbusiness_rule_idChanged();
				}
			}
		}
		
		[Column(Storage="_logical_operator_id", DbType="Int")]
		public System.Nullable<int> logical_operator_id
		{
			get
			{
				return this._logical_operator_id;
			}
			set
			{
				if ((this._logical_operator_id != value))
				{
					this.Onlogical_operator_idChanging(value);
					this.SendPropertyChanging();
					this._logical_operator_id = value;
					this.SendPropertyChanged("logical_operator_id");
					this.Onlogical_operator_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int")]
		public System.Nullable<int> form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					if (this._form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_field_id", DbType="Int")]
		public System.Nullable<int> field_id
		{
			get
			{
				return this._field_id;
			}
			set
			{
				if ((this._field_id != value))
				{
					this.Onfield_idChanging(value);
					this.SendPropertyChanging();
					this._field_id = value;
					this.SendPropertyChanged("field_id");
					this.Onfield_idChanged();
				}
			}
		}
		
		[Column(Storage="_business_rule_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string business_rule_name
		{
			get
			{
				return this._business_rule_name;
			}
			set
			{
				if ((this._business_rule_name != value))
				{
					this.Onbusiness_rule_nameChanging(value);
					this.SendPropertyChanging();
					this._business_rule_name = value;
					this.SendPropertyChanged("business_rule_name");
					this.Onbusiness_rule_nameChanged();
				}
			}
		}
		
		[Column(Storage="_message", DbType="VarChar(200)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[Column(Storage="_value_to_compare", DbType="VarChar(50)")]
		public string value_to_compare
		{
			get
			{
				return this._value_to_compare;
			}
			set
			{
				if ((this._value_to_compare != value))
				{
					this.Onvalue_to_compareChanging(value);
					this.SendPropertyChanging();
					this._value_to_compare = value;
					this.SendPropertyChanged("value_to_compare");
					this.Onvalue_to_compareChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_section_type_id", DbType="Int")]
		public System.Nullable<int> form_section_type_id
		{
			get
			{
				return this._form_section_type_id;
			}
			set
			{
				if ((this._form_section_type_id != value))
				{
					this.Onform_section_type_idChanging(value);
					this.SendPropertyChanging();
					this._form_section_type_id = value;
					this.SendPropertyChanged("form_section_type_id");
					this.Onform_section_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_section_number", DbType="Int")]
		public System.Nullable<int> form_section_number
		{
			get
			{
				return this._form_section_number;
			}
			set
			{
				if ((this._form_section_number != value))
				{
					this.Onform_section_numberChanging(value);
					this.SendPropertyChanging();
					this._form_section_number = value;
					this.SendPropertyChanged("form_section_number");
					this.Onform_section_numberChanged();
				}
			}
		}
		
		[Association(Name="form_business_rule", Storage="_form", ThisKey="form_id", OtherKey="form_id", IsForeignKey=true)]
		public form form
		{
			get
			{
				return this._form.Entity;
			}
			set
			{
				form previousValue = this._form.Entity;
				if (((previousValue != value) 
							|| (this._form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form.Entity = null;
						previousValue.business_rules.Remove(this);
					}
					this._form.Entity = value;
					if ((value != null))
					{
						value.business_rules.Add(this);
						this._form_id = value.form_id;
					}
					else
					{
						this._form_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.business_exception")]
	public partial class business_exception : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _business_exception_id;
		
		private string _business_exception_name;
		
		private System.Nullable<int> _exception_type_id;
		
		private System.Nullable<int> _entity_type_id;
		
		private string _message;
		
		private string _warning_message;
		
		private string _exception_expression;
		
		private string _fees_value_expression;
		
		private int _form_id;
		
		private System.Nullable<int> _app_item_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private System.Nullable<int> _form_section_type_id;
		
		private System.Nullable<int> _form_section_number;
		
		private System.Nullable<int> _business_rule_id;
		
		private EntityRef<form> _form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbusiness_exception_idChanging(int value);
    partial void Onbusiness_exception_idChanged();
    partial void Onbusiness_exception_nameChanging(string value);
    partial void Onbusiness_exception_nameChanged();
    partial void Onexception_type_idChanging(System.Nullable<int> value);
    partial void Onexception_type_idChanged();
    partial void Onentity_type_idChanging(System.Nullable<int> value);
    partial void Onentity_type_idChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void Onwarning_messageChanging(string value);
    partial void Onwarning_messageChanged();
    partial void Onexception_expressionChanging(string value);
    partial void Onexception_expressionChanged();
    partial void Onfees_value_expressionChanging(string value);
    partial void Onfees_value_expressionChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Onapp_item_idChanging(System.Nullable<int> value);
    partial void Onapp_item_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void Onform_section_type_idChanging(System.Nullable<int> value);
    partial void Onform_section_type_idChanged();
    partial void Onform_section_numberChanging(System.Nullable<int> value);
    partial void Onform_section_numberChanged();
    partial void Onbusiness_rule_idChanging(System.Nullable<int> value);
    partial void Onbusiness_rule_idChanged();
    #endregion
		
		public business_exception()
		{
			this._form = default(EntityRef<form>);
			OnCreated();
		}
		
		[Column(Storage="_business_exception_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int business_exception_id
		{
			get
			{
				return this._business_exception_id;
			}
			set
			{
				if ((this._business_exception_id != value))
				{
					this.Onbusiness_exception_idChanging(value);
					this.SendPropertyChanging();
					this._business_exception_id = value;
					this.SendPropertyChanged("business_exception_id");
					this.Onbusiness_exception_idChanged();
				}
			}
		}
		
		[Column(Storage="_business_exception_name", DbType="VarChar(100)")]
		public string business_exception_name
		{
			get
			{
				return this._business_exception_name;
			}
			set
			{
				if ((this._business_exception_name != value))
				{
					this.Onbusiness_exception_nameChanging(value);
					this.SendPropertyChanging();
					this._business_exception_name = value;
					this.SendPropertyChanged("business_exception_name");
					this.Onbusiness_exception_nameChanged();
				}
			}
		}
		
		[Column(Storage="_exception_type_id", DbType="Int")]
		public System.Nullable<int> exception_type_id
		{
			get
			{
				return this._exception_type_id;
			}
			set
			{
				if ((this._exception_type_id != value))
				{
					this.Onexception_type_idChanging(value);
					this.SendPropertyChanging();
					this._exception_type_id = value;
					this.SendPropertyChanged("exception_type_id");
					this.Onexception_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_entity_type_id", DbType="Int")]
		public System.Nullable<int> entity_type_id
		{
			get
			{
				return this._entity_type_id;
			}
			set
			{
				if ((this._entity_type_id != value))
				{
					this.Onentity_type_idChanging(value);
					this.SendPropertyChanging();
					this._entity_type_id = value;
					this.SendPropertyChanged("entity_type_id");
					this.Onentity_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_message", DbType="VarChar(2048)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[Column(Storage="_warning_message", DbType="VarChar(2048)")]
		public string warning_message
		{
			get
			{
				return this._warning_message;
			}
			set
			{
				if ((this._warning_message != value))
				{
					this.Onwarning_messageChanging(value);
					this.SendPropertyChanging();
					this._warning_message = value;
					this.SendPropertyChanged("warning_message");
					this.Onwarning_messageChanged();
				}
			}
		}
		
		[Column(Storage="_exception_expression", DbType="VarChar(200)")]
		public string exception_expression
		{
			get
			{
				return this._exception_expression;
			}
			set
			{
				if ((this._exception_expression != value))
				{
					this.Onexception_expressionChanging(value);
					this.SendPropertyChanging();
					this._exception_expression = value;
					this.SendPropertyChanged("exception_expression");
					this.Onexception_expressionChanged();
				}
			}
		}
		
		[Column(Storage="_fees_value_expression", DbType="VarChar(200)")]
		public string fees_value_expression
		{
			get
			{
				return this._fees_value_expression;
			}
			set
			{
				if ((this._fees_value_expression != value))
				{
					this.Onfees_value_expressionChanging(value);
					this.SendPropertyChanging();
					this._fees_value_expression = value;
					this.SendPropertyChanged("fees_value_expression");
					this.Onfees_value_expressionChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					if (this._form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_app_item_id", DbType="Int")]
		public System.Nullable<int> app_item_id
		{
			get
			{
				return this._app_item_id;
			}
			set
			{
				if ((this._app_item_id != value))
				{
					this.Onapp_item_idChanging(value);
					this.SendPropertyChanging();
					this._app_item_id = value;
					this.SendPropertyChanged("app_item_id");
					this.Onapp_item_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_section_type_id", DbType="Int")]
		public System.Nullable<int> form_section_type_id
		{
			get
			{
				return this._form_section_type_id;
			}
			set
			{
				if ((this._form_section_type_id != value))
				{
					this.Onform_section_type_idChanging(value);
					this.SendPropertyChanging();
					this._form_section_type_id = value;
					this.SendPropertyChanged("form_section_type_id");
					this.Onform_section_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_section_number", DbType="Int")]
		public System.Nullable<int> form_section_number
		{
			get
			{
				return this._form_section_number;
			}
			set
			{
				if ((this._form_section_number != value))
				{
					this.Onform_section_numberChanging(value);
					this.SendPropertyChanging();
					this._form_section_number = value;
					this.SendPropertyChanged("form_section_number");
					this.Onform_section_numberChanged();
				}
			}
		}
		
		[Column(Storage="_business_rule_id", DbType="Int")]
		public System.Nullable<int> business_rule_id
		{
			get
			{
				return this._business_rule_id;
			}
			set
			{
				if ((this._business_rule_id != value))
				{
					this.Onbusiness_rule_idChanging(value);
					this.SendPropertyChanging();
					this._business_rule_id = value;
					this.SendPropertyChanged("business_rule_id");
					this.Onbusiness_rule_idChanged();
				}
			}
		}
		
		[Association(Name="form_business_exception", Storage="_form", ThisKey="form_id", OtherKey="form_id", IsForeignKey=true)]
		public form form
		{
			get
			{
				return this._form.Entity;
			}
			set
			{
				form previousValue = this._form.Entity;
				if (((previousValue != value) 
							|| (this._form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form.Entity = null;
						previousValue.business_exceptions.Remove(this);
					}
					this._form.Entity = value;
					if ((value != null))
					{
						value.business_exceptions.Add(this);
						this._form_id = value.form_id;
					}
					else
					{
						this._form_id = default(int);
					}
					this.SendPropertyChanged("form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vendor")]
	public partial class vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vendor_id;
		
		private string _vendor_code;
		
		private string _vendor_name;
		
		private System.Nullable<int> _postal_address_id;
		
		private System.Nullable<int> _phone_number_id;
		
		private System.Nullable<int> _fax_number_id;
		
		private System.Nullable<int> _email_id;
		
		private string _division;
		
		private string _vendor_term;
		
		private string _oracle_vendor_code;
		
		private string _PO_CO;
		
		private System.Nullable<System.DateTime> _last_import_date;
		
		private System.Nullable<int> _import_source_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private int _vendor_type_id;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvendor_idChanging(int value);
    partial void Onvendor_idChanged();
    partial void Onvendor_codeChanging(string value);
    partial void Onvendor_codeChanged();
    partial void Onvendor_nameChanging(string value);
    partial void Onvendor_nameChanged();
    partial void Onpostal_address_idChanging(System.Nullable<int> value);
    partial void Onpostal_address_idChanged();
    partial void Onphone_number_idChanging(System.Nullable<int> value);
    partial void Onphone_number_idChanged();
    partial void Onfax_number_idChanging(System.Nullable<int> value);
    partial void Onfax_number_idChanged();
    partial void Onemail_idChanging(System.Nullable<int> value);
    partial void Onemail_idChanged();
    partial void OndivisionChanging(string value);
    partial void OndivisionChanged();
    partial void Onvendor_termChanging(string value);
    partial void Onvendor_termChanged();
    partial void Onoracle_vendor_codeChanging(string value);
    partial void Onoracle_vendor_codeChanged();
    partial void OnPO_COChanging(string value);
    partial void OnPO_COChanged();
    partial void Onlast_import_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_import_dateChanged();
    partial void Onimport_source_idChanging(System.Nullable<int> value);
    partial void Onimport_source_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void Onvendor_type_idChanging(int value);
    partial void Onvendor_type_idChanged();
    #endregion
		
		public vendor()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[Column(Storage="_vendor_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vendor_id
		{
			get
			{
				return this._vendor_id;
			}
			set
			{
				if ((this._vendor_id != value))
				{
					this.Onvendor_idChanging(value);
					this.SendPropertyChanging();
					this._vendor_id = value;
					this.SendPropertyChanged("vendor_id");
					this.Onvendor_idChanged();
				}
			}
		}
		
		[Column(Storage="_vendor_code", DbType="VarChar(50)")]
		public string vendor_code
		{
			get
			{
				return this._vendor_code;
			}
			set
			{
				if ((this._vendor_code != value))
				{
					this.Onvendor_codeChanging(value);
					this.SendPropertyChanging();
					this._vendor_code = value;
					this.SendPropertyChanged("vendor_code");
					this.Onvendor_codeChanged();
				}
			}
		}
		
		[Column(Storage="_vendor_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string vendor_name
		{
			get
			{
				return this._vendor_name;
			}
			set
			{
				if ((this._vendor_name != value))
				{
					this.Onvendor_nameChanging(value);
					this.SendPropertyChanging();
					this._vendor_name = value;
					this.SendPropertyChanged("vendor_name");
					this.Onvendor_nameChanged();
				}
			}
		}
		
		[Column(Storage="_postal_address_id", DbType="Int")]
		public System.Nullable<int> postal_address_id
		{
			get
			{
				return this._postal_address_id;
			}
			set
			{
				if ((this._postal_address_id != value))
				{
					this.Onpostal_address_idChanging(value);
					this.SendPropertyChanging();
					this._postal_address_id = value;
					this.SendPropertyChanged("postal_address_id");
					this.Onpostal_address_idChanged();
				}
			}
		}
		
		[Column(Storage="_phone_number_id", DbType="Int")]
		public System.Nullable<int> phone_number_id
		{
			get
			{
				return this._phone_number_id;
			}
			set
			{
				if ((this._phone_number_id != value))
				{
					this.Onphone_number_idChanging(value);
					this.SendPropertyChanging();
					this._phone_number_id = value;
					this.SendPropertyChanged("phone_number_id");
					this.Onphone_number_idChanged();
				}
			}
		}
		
		[Column(Storage="_fax_number_id", DbType="Int")]
		public System.Nullable<int> fax_number_id
		{
			get
			{
				return this._fax_number_id;
			}
			set
			{
				if ((this._fax_number_id != value))
				{
					this.Onfax_number_idChanging(value);
					this.SendPropertyChanging();
					this._fax_number_id = value;
					this.SendPropertyChanged("fax_number_id");
					this.Onfax_number_idChanged();
				}
			}
		}
		
		[Column(Storage="_email_id", DbType="Int")]
		public System.Nullable<int> email_id
		{
			get
			{
				return this._email_id;
			}
			set
			{
				if ((this._email_id != value))
				{
					this.Onemail_idChanging(value);
					this.SendPropertyChanging();
					this._email_id = value;
					this.SendPropertyChanged("email_id");
					this.Onemail_idChanged();
				}
			}
		}
		
		[Column(Storage="_division", DbType="VarChar(50)")]
		public string division
		{
			get
			{
				return this._division;
			}
			set
			{
				if ((this._division != value))
				{
					this.OndivisionChanging(value);
					this.SendPropertyChanging();
					this._division = value;
					this.SendPropertyChanged("division");
					this.OndivisionChanged();
				}
			}
		}
		
		[Column(Storage="_vendor_term", DbType="VarChar(50)")]
		public string vendor_term
		{
			get
			{
				return this._vendor_term;
			}
			set
			{
				if ((this._vendor_term != value))
				{
					this.Onvendor_termChanging(value);
					this.SendPropertyChanging();
					this._vendor_term = value;
					this.SendPropertyChanged("vendor_term");
					this.Onvendor_termChanged();
				}
			}
		}
		
		[Column(Storage="_oracle_vendor_code", DbType="VarChar(50)")]
		public string oracle_vendor_code
		{
			get
			{
				return this._oracle_vendor_code;
			}
			set
			{
				if ((this._oracle_vendor_code != value))
				{
					this.Onoracle_vendor_codeChanging(value);
					this.SendPropertyChanging();
					this._oracle_vendor_code = value;
					this.SendPropertyChanged("oracle_vendor_code");
					this.Onoracle_vendor_codeChanged();
				}
			}
		}
		
		[Column(Name="PO#CO", Storage="_PO_CO", DbType="VarChar(50)")]
		public string PO_CO
		{
			get
			{
				return this._PO_CO;
			}
			set
			{
				if ((this._PO_CO != value))
				{
					this.OnPO_COChanging(value);
					this.SendPropertyChanging();
					this._PO_CO = value;
					this.SendPropertyChanged("PO_CO");
					this.OnPO_COChanged();
				}
			}
		}
		
		[Column(Storage="_last_import_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_import_date
		{
			get
			{
				return this._last_import_date;
			}
			set
			{
				if ((this._last_import_date != value))
				{
					this.Onlast_import_dateChanging(value);
					this.SendPropertyChanging();
					this._last_import_date = value;
					this.SendPropertyChanged("last_import_date");
					this.Onlast_import_dateChanged();
				}
			}
		}
		
		[Column(Storage="_import_source_id", DbType="Int")]
		public System.Nullable<int> import_source_id
		{
			get
			{
				return this._import_source_id;
			}
			set
			{
				if ((this._import_source_id != value))
				{
					this.Onimport_source_idChanging(value);
					this.SendPropertyChanging();
					this._import_source_id = value;
					this.SendPropertyChanged("import_source_id");
					this.Onimport_source_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_vendor_type_id", DbType="Int NOT NULL")]
		public int vendor_type_id
		{
			get
			{
				return this._vendor_type_id;
			}
			set
			{
				if ((this._vendor_type_id != value))
				{
					this.Onvendor_type_idChanging(value);
					this.SendPropertyChanging();
					this._vendor_type_id = value;
					this.SendPropertyChanged("vendor_type_id");
					this.Onvendor_type_idChanged();
				}
			}
		}
		
		[Association(Name="vendor_product", Storage="_products", ThisKey="vendor_id", OtherKey="vendor_id")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.vendor = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.vendor = null;
		}
	}
	
	[Table(Name="dbo.form_catalog_group")]
	public partial class form_catalog_group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_catalog_group_id;
		
		private int _form_id;
		
		private int _catalog_group_id;
		
		private System.Nullable<int> _product_catalog_item_category_id;
		
		private string _supply_catalog_item_category_id;
		
		private System.Nullable<int> _optional_product_catalog_item_catagory_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_catalog_group_idChanging(int value);
    partial void Onform_catalog_group_idChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Oncatalog_group_idChanging(int value);
    partial void Oncatalog_group_idChanged();
    partial void Onproduct_catalog_item_category_idChanging(System.Nullable<int> value);
    partial void Onproduct_catalog_item_category_idChanged();
    partial void Onsupply_catalog_item_category_idChanging(string value);
    partial void Onsupply_catalog_item_category_idChanged();
    partial void Onoptional_product_catalog_item_catagory_idChanging(System.Nullable<int> value);
    partial void Onoptional_product_catalog_item_catagory_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public form_catalog_group()
		{
			OnCreated();
		}
		
		[Column(Storage="_form_catalog_group_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_catalog_group_id
		{
			get
			{
				return this._form_catalog_group_id;
			}
			set
			{
				if ((this._form_catalog_group_id != value))
				{
					this.Onform_catalog_group_idChanging(value);
					this.SendPropertyChanging();
					this._form_catalog_group_id = value;
					this.SendPropertyChanged("form_catalog_group_id");
					this.Onform_catalog_group_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_group_id", DbType="Int NOT NULL")]
		public int catalog_group_id
		{
			get
			{
				return this._catalog_group_id;
			}
			set
			{
				if ((this._catalog_group_id != value))
				{
					this.Oncatalog_group_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_group_id = value;
					this.SendPropertyChanged("catalog_group_id");
					this.Oncatalog_group_idChanged();
				}
			}
		}
		
		[Column(Storage="_product_catalog_item_category_id", DbType="Int")]
		public System.Nullable<int> product_catalog_item_category_id
		{
			get
			{
				return this._product_catalog_item_category_id;
			}
			set
			{
				if ((this._product_catalog_item_category_id != value))
				{
					this.Onproduct_catalog_item_category_idChanging(value);
					this.SendPropertyChanging();
					this._product_catalog_item_category_id = value;
					this.SendPropertyChanged("product_catalog_item_category_id");
					this.Onproduct_catalog_item_category_idChanged();
				}
			}
		}
		
		[Column(Storage="_supply_catalog_item_category_id", DbType="Char(10)")]
		public string supply_catalog_item_category_id
		{
			get
			{
				return this._supply_catalog_item_category_id;
			}
			set
			{
				if ((this._supply_catalog_item_category_id != value))
				{
					this.Onsupply_catalog_item_category_idChanging(value);
					this.SendPropertyChanging();
					this._supply_catalog_item_category_id = value;
					this.SendPropertyChanged("supply_catalog_item_category_id");
					this.Onsupply_catalog_item_category_idChanged();
				}
			}
		}
		
		[Column(Storage="_optional_product_catalog_item_catagory_id", DbType="Int")]
		public System.Nullable<int> optional_product_catalog_item_catagory_id
		{
			get
			{
				return this._optional_product_catalog_item_catagory_id;
			}
			set
			{
				if ((this._optional_product_catalog_item_catagory_id != value))
				{
					this.Onoptional_product_catalog_item_catagory_idChanging(value);
					this.SendPropertyChanging();
					this._optional_product_catalog_item_catagory_id = value;
					this.SendPropertyChanged("optional_product_catalog_item_catagory_id");
					this.Onoptional_product_catalog_item_catagory_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_profit_rate")]
	public partial class form_profit_rate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_profit_rate_id;
		
		private int _form_id;
		
		private double _profit_rate_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_profit_rate_idChanging(int value);
    partial void Onform_profit_rate_idChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Onprofit_rate_idChanging(double value);
    partial void Onprofit_rate_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public form_profit_rate()
		{
			OnCreated();
		}
		
		[Column(Storage="_form_profit_rate_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_profit_rate_id
		{
			get
			{
				return this._form_profit_rate_id;
			}
			set
			{
				if ((this._form_profit_rate_id != value))
				{
					this.Onform_profit_rate_idChanging(value);
					this.SendPropertyChanging();
					this._form_profit_rate_id = value;
					this.SendPropertyChanged("form_profit_rate_id");
					this.Onform_profit_rate_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_profit_rate_id", DbType="Float NOT NULL")]
		public double profit_rate_id
		{
			get
			{
				return this._profit_rate_id;
			}
			set
			{
				if ((this._profit_rate_id != value))
				{
					this.Onprofit_rate_idChanging(value);
					this.SendPropertyChanging();
					this._profit_rate_id = value;
					this.SendPropertyChanged("profit_rate_id");
					this.Onprofit_rate_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_permission")]
	public partial class form_permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_permission_id;
		
		private System.Nullable<int> _form_id;
		
		private System.Nullable<int> _role_id;
		
		private bool _allow_read;
		
		private bool _allow_write;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.DateTime _update_date;
		
		private int _update_user_id;
		
		private EntityRef<form> _form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_permission_idChanging(int value);
    partial void Onform_permission_idChanged();
    partial void Onform_idChanging(System.Nullable<int> value);
    partial void Onform_idChanged();
    partial void Onrole_idChanging(System.Nullable<int> value);
    partial void Onrole_idChanged();
    partial void Onallow_readChanging(bool value);
    partial void Onallow_readChanged();
    partial void Onallow_writeChanging(bool value);
    partial void Onallow_writeChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.DateTime value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(int value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public form_permission()
		{
			this._form = default(EntityRef<form>);
			OnCreated();
		}
		
		[Column(Storage="_form_permission_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_permission_id
		{
			get
			{
				return this._form_permission_id;
			}
			set
			{
				if ((this._form_permission_id != value))
				{
					this.Onform_permission_idChanging(value);
					this.SendPropertyChanging();
					this._form_permission_id = value;
					this.SendPropertyChanged("form_permission_id");
					this.Onform_permission_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int")]
		public System.Nullable<int> form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					if (this._form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_role_id", DbType="Int")]
		public System.Nullable<int> role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[Column(Storage="_allow_read", DbType="Bit NOT NULL")]
		public bool allow_read
		{
			get
			{
				return this._allow_read;
			}
			set
			{
				if ((this._allow_read != value))
				{
					this.Onallow_readChanging(value);
					this.SendPropertyChanging();
					this._allow_read = value;
					this.SendPropertyChanged("allow_read");
					this.Onallow_readChanged();
				}
			}
		}
		
		[Column(Storage="_allow_write", DbType="Bit NOT NULL")]
		public bool allow_write
		{
			get
			{
				return this._allow_write;
			}
			set
			{
				if ((this._allow_write != value))
				{
					this.Onallow_writeChanging(value);
					this.SendPropertyChanging();
					this._allow_write = value;
					this.SendPropertyChanged("allow_write");
					this.Onallow_writeChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime NOT NULL")]
		public System.DateTime update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int NOT NULL")]
		public int update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Association(Name="form_form_permission", Storage="_form", ThisKey="form_id", OtherKey="form_id", IsForeignKey=true)]
		public form form
		{
			get
			{
				return this._form.Entity;
			}
			set
			{
				form previousValue = this._form.Entity;
				if (((previousValue != value) 
							|| (this._form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form.Entity = null;
						previousValue.form_permissions.Remove(this);
					}
					this._form.Entity = value;
					if ((value != null))
					{
						value.form_permissions.Add(this);
						this._form_id = value.form_id;
					}
					else
					{
						this._form_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_delivery_date_type")]
	public partial class form_delivery_date_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_delivery_date_type_id;
		
		private int _form_id;
		
		private int _delivery_date_type_id;
		
		private EntityRef<form> _form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_delivery_date_type_idChanging(int value);
    partial void Onform_delivery_date_type_idChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Ondelivery_date_type_idChanging(int value);
    partial void Ondelivery_date_type_idChanged();
    #endregion
		
		public form_delivery_date_type()
		{
			this._form = default(EntityRef<form>);
			OnCreated();
		}
		
		[Column(Storage="_form_delivery_date_type_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_delivery_date_type_id
		{
			get
			{
				return this._form_delivery_date_type_id;
			}
			set
			{
				if ((this._form_delivery_date_type_id != value))
				{
					this.Onform_delivery_date_type_idChanging(value);
					this.SendPropertyChanging();
					this._form_delivery_date_type_id = value;
					this.SendPropertyChanged("form_delivery_date_type_id");
					this.Onform_delivery_date_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					if (this._form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_delivery_date_type_id", DbType="Int NOT NULL")]
		public int delivery_date_type_id
		{
			get
			{
				return this._delivery_date_type_id;
			}
			set
			{
				if ((this._delivery_date_type_id != value))
				{
					this.Ondelivery_date_type_idChanging(value);
					this.SendPropertyChanging();
					this._delivery_date_type_id = value;
					this.SendPropertyChanged("delivery_date_type_id");
					this.Ondelivery_date_type_idChanged();
				}
			}
		}
		
		[Association(Name="form_form_delivery_date_type", Storage="_form", ThisKey="form_id", OtherKey="form_id", IsForeignKey=true)]
		public form form
		{
			get
			{
				return this._form.Entity;
			}
			set
			{
				form previousValue = this._form.Entity;
				if (((previousValue != value) 
							|| (this._form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form.Entity = null;
						previousValue.form_delivery_date_types.Remove(this);
					}
					this._form.Entity = value;
					if ((value != null))
					{
						value.form_delivery_date_types.Add(this);
						this._form_id = value.form_id;
					}
					else
					{
						this._form_id = default(int);
					}
					this.SendPropertyChanged("form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_requires_form")]
	public partial class form_requires_form : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _form_requires_form_id;
		
		private int _form_id;
		
		private int _required_form_id;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.DateTime _update_date;
		
		private int _update_user_id;
		
		private EntityRef<form> _form;
		
		private EntityRef<form> _form1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onform_requires_form_idChanging(int value);
    partial void Onform_requires_form_idChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Onrequired_form_idChanging(int value);
    partial void Onrequired_form_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.DateTime value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(int value);
    partial void Onupdate_user_idChanged();
    #endregion
		
		public form_requires_form()
		{
			this._form = default(EntityRef<form>);
			this._form1 = default(EntityRef<form>);
			OnCreated();
		}
		
		[Column(Storage="_form_requires_form_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int form_requires_form_id
		{
			get
			{
				return this._form_requires_form_id;
			}
			set
			{
				if ((this._form_requires_form_id != value))
				{
					this.Onform_requires_form_idChanging(value);
					this.SendPropertyChanging();
					this._form_requires_form_id = value;
					this.SendPropertyChanged("form_requires_form_id");
					this.Onform_requires_form_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					if (this._form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_required_form_id", DbType="Int NOT NULL")]
		public int required_form_id
		{
			get
			{
				return this._required_form_id;
			}
			set
			{
				if ((this._required_form_id != value))
				{
					if (this._form1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrequired_form_idChanging(value);
					this.SendPropertyChanging();
					this._required_form_id = value;
					this.SendPropertyChanged("required_form_id");
					this.Onrequired_form_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime NOT NULL")]
		public System.DateTime update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int NOT NULL")]
		public int update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Association(Name="form_form_requires_form", Storage="_form", ThisKey="form_id", OtherKey="form_id", IsForeignKey=true)]
		public form form
		{
			get
			{
				return this._form.Entity;
			}
			set
			{
				form previousValue = this._form.Entity;
				if (((previousValue != value) 
							|| (this._form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form.Entity = null;
						previousValue.form_requires_forms.Remove(this);
					}
					this._form.Entity = value;
					if ((value != null))
					{
						value.form_requires_forms.Add(this);
						this._form_id = value.form_id;
					}
					else
					{
						this._form_id = default(int);
					}
					this.SendPropertyChanged("form");
				}
			}
		}
		
		[Association(Name="form_form_requires_form1", Storage="_form1", ThisKey="required_form_id", OtherKey="form_id", IsForeignKey=true)]
		public form form1
		{
			get
			{
				return this._form1.Entity;
			}
			set
			{
				form previousValue = this._form1.Entity;
				if (((previousValue != value) 
							|| (this._form1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._form1.Entity = null;
						previousValue.form_requires_forms1.Remove(this);
					}
					this._form1.Entity = value;
					if ((value != null))
					{
						value.form_requires_forms1.Add(this);
						this._required_form_id = value.form_id;
					}
					else
					{
						this._required_form_id = default(int);
					}
					this.SendPropertyChanged("form1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
