////////////////////////////////////////////////////////////////////////////////////////////
// Class generated by SqlCodeGen 1.1.0.0.
// Do not edit this file directly. Changes will be lost when this file is regenerated.
// Extensions should be added in a separate file using partial classes.
////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Data;
using System.Text;
using NHibernate;
using NHibernate.Expression;
using NHibernate.Mapping.Attributes;

namespace QSP.Business.Fulfillment
{
	[Serializable]
	[Class(Schema="`dbo`", Table="`product`")]
	public partial class Product
	{
		#region Constants
        public const string ProductEntity = "Product";
		public const string ProductIdProperty = "ProductId";
		public const string ProductTypeIdProperty = "ProductTypeId";
		public const string VendorIdProperty = "VendorId";
		public const string CouponIdProperty = "CouponId";
		public const string ProductCodeProperty = "ProductCode";
		public const string ProductNameProperty = "ProductName";
		public const string DescriptionProperty = "Description";
		public const string NbUnitsProperty = "NbUnits";
		public const string PriceProperty = "Price";
		public const string UnitCostProperty = "UnitCost";
		public const string NbDayLeadTimeProperty = "NbDayLeadTime";
		public const string VendorItemCodeProperty = "VendorItemCode";
		public const string OracleCodeProperty = "OracleCode";
		public const string CommissionProperty = "Commission";
		public const string IsFreeSampleProperty = "IsFreeSample";
		public const string ImageUrlProperty = "ImageUrl";
		public const string BusinessDivisionIdProperty = "BusinessDivisionId";
		public const string IVITEMProperty = "IVITEM";
		public const string IVCOUPProperty = "IVCOUP";
		public const string DeletedProperty = "Deleted";
		public const string CreateDateProperty = "CreateDate";
		public const string CreateUserIdProperty = "CreateUserId";
		public const string UpdateDateProperty = "UpdateDate";
		public const string UpdateUserIdProperty = "UpdateUserId";
		public const string ProductStatusIdProperty = "ProductStatusId";
		#endregion

		#region Fields
		protected int productId = 0;
		protected int productTypeId = 0;
		protected int? vendorId = null;
		protected int? couponId = null;
		protected string productCode = null;
		protected string productName = "";
		protected string description = null;
		protected int nbUnits = 0;
		protected decimal? price = null;
		protected decimal? unitCost = null;
		protected int? nbDayLeadTime = 0;
		protected string vendorItemCode = null;
		protected string oracleCode = null;
		protected decimal? commission = null;
		protected bool? isFreeSample = false;
		protected string imageUrl = null;
		protected int? businessDivisionId = null;
		protected string iVITEM = null;
		protected string iVCOUP = null;
		protected bool deleted = false;
		protected DateTime createDate = DateTime.Now;
		protected int createUserId = 0;
		protected DateTime? updateDate = DateTime.Now;
		protected int? updateUserId = null;
		protected int productStatusId = 101;
		#endregion

		#region Constructors
		public Product() 
		{
		}
		#endregion

		#region Properties
		[RawXml(Content=@"
		<id name=""ProductId"" column=""`product_id`"">
			<generator class=""native"">
			</generator>
		</id>")]

		public virtual int ProductId
		{
			get { return this.productId; }
			set { this.productId = value; }
		}

		[Property(Column="`product_type_id`")]
		public virtual int ProductTypeId
		{
			get { return this.productTypeId; }
			set { this.productTypeId = value; }
		}

		[Property(Column="`vendor_id`")]
		public virtual int? VendorId
		{
			get { return this.vendorId; }
			set { this.vendorId = value; }
		}

		[Property(Column="`coupon_id`")]
		public virtual int? CouponId
		{
			get { return this.couponId; }
			set { this.couponId = value; }
		}

		[Property(Column="`product_code`")]
		public virtual string ProductCode
		{
			get { return this.productCode; }
			set { this.productCode = value; }
		}

		[Property(Column="`product_name`")]
		public virtual string ProductName
		{
			get { return this.productName; }
			set { this.productName = value; }
		}

		[Property(Column="`description`")]
		public virtual string Description
		{
			get { return this.description; }
			set { this.description = value; }
		}

		[Property(Column="`nb_units`")]
		public virtual int NbUnits
		{
			get { return this.nbUnits; }
			set { this.nbUnits = value; }
		}

		[Property(Column="`price`")]
		public virtual decimal? Price
		{
			get { return this.price; }
			set { this.price = value; }
		}

		[Property(Column="`unit_cost`")]
		public virtual decimal? UnitCost
		{
			get { return this.unitCost; }
			set { this.unitCost = value; }
		}

		[Property(Column="`nb_day_lead_time`")]
		public virtual int? NbDayLeadTime
		{
			get { return this.nbDayLeadTime; }
			set { this.nbDayLeadTime = value; }
		}

		[Property(Column="`vendor_item_code`")]
		public virtual string VendorItemCode
		{
			get { return this.vendorItemCode; }
			set { this.vendorItemCode = value; }
		}

		[Property(Column="`oracle_code`")]
		public virtual string OracleCode
		{
			get { return this.oracleCode; }
			set { this.oracleCode = value; }
		}

		[Property(Column="`commission`")]
		public virtual decimal? Commission
		{
			get { return this.commission; }
			set { this.commission = value; }
		}

		[Property(Column="`is_free_sample`")]
		public virtual bool? IsFreeSample
		{
			get { return this.isFreeSample; }
			set { this.isFreeSample = value; }
		}

		[Property(Column="`image_url`")]
		public virtual string ImageUrl
		{
			get { return this.imageUrl; }
			set { this.imageUrl = value; }
		}

		[Property(Column="`business_division_id`")]
		public virtual int? BusinessDivisionId
		{
			get { return this.businessDivisionId; }
			set { this.businessDivisionId = value; }
		}

		[Property(Column="`IVITEM`")]
		public virtual string IVITEM
		{
			get { return this.iVITEM; }
			set { this.iVITEM = value; }
		}

		[Property(Column="`IVCOUP`")]
		public virtual string IVCOUP
		{
			get { return this.iVCOUP; }
			set { this.iVCOUP = value; }
		}

		[Property(Column="`deleted`")]
		public virtual bool Deleted
		{
			get { return this.deleted; }
			set { this.deleted = value; }
		}

		[Property(Column="`create_date`")]
		public virtual DateTime CreateDate
		{
			get { return this.createDate; }
			set { this.createDate = value; }
		}

		[Property(Column="`create_user_id`")]
		public virtual int CreateUserId
		{
			get { return this.createUserId; }
			set { this.createUserId = value; }
		}

		[Property(Column="`update_date`")]
		public virtual DateTime? UpdateDate
		{
			get { return this.updateDate; }
			set { this.updateDate = value; }
		}

		[Property(Column="`update_user_id`")]
		public virtual int? UpdateUserId
		{
			get { return this.updateUserId; }
			set { this.updateUserId = value; }
		}

		[Property(Column="`product_status_id`")]
		public virtual int ProductStatusId
		{
			get { return this.productStatusId; }
			set { this.productStatusId = value; }
		}
		#endregion

		#region Methods

        public static ICriteria CreateCriteria()
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ICriteria c = session.CreateCriteria(typeof(Product));
                return c;
            }
        }

        public static List<Product> GetProductList(ICriteria criteria)
        {
            return (List<Product>)criteria.List<Product>();
        }

		public static Product GetProduct(int productId)
		{
			using (ISession session = SqlSessionManager.OpenSession())
			{
				return session.Get<Product>(productId);
			}
		}

		public static List<Product> GetProductList()
		{
			using (ISession session = SqlSessionManager.OpenSession())
			{
				ICriteria c = session.CreateCriteria(typeof(Product));
				return (List<Product>)c.List<Product>();
			}
		}

		public static List<Product> GetProductList(string sortExpression, int maximumRows, int startRowIndex)
		{
			using (ISession session = SqlSessionManager.OpenSession())
			{
				ICriteria c = session.CreateCriteria(typeof(Product));
				if (sortExpression != null && sortExpression != "")
				{
					// Get ascending or descending order
					bool descending = sortExpression.Contains(" DESC");

					// Strip off ASC or DESC ordering
					sortExpression = sortExpression.Replace(" ASC", "");
					sortExpression = sortExpression.Replace(" DESC", "");
					sortExpression = sortExpression.Trim();

					// Get multi column sort from the comma delimited string
					List<String> expressions = new List<String>();
					if (sortExpression.Contains(","))
					{
						string[] tokens = sortExpression.Split(",".ToCharArray());
						for (int i = 0; i < tokens.Length; i++)
						{
							tokens[i] = tokens[i].Trim();
							if (tokens[i] != "")
								expressions.Add(tokens[i]);
						}
					}
					else if (sortExpression != "")
					{
						expressions.Add(sortExpression);
					}

					// Create the order
					for (int i = 0; i < expressions.Count; i++)
					{
						if (descending)
							c.AddOrder(NHibernate.Expression.Order.Desc(expressions[i]));
						else
							c.AddOrder(NHibernate.Expression.Order.Asc(expressions[i]));
					}
				}

				// Set offset and limit
				if (startRowIndex >= 0)
					c.SetFirstResult(startRowIndex);

				if (maximumRows >= 0)
					c.SetMaxResults(maximumRows);

				return (List<Product>)c.List<Product>();
			}
		}

		public static List<Product> GetProductList(string sortExpression)
		{
			return GetProductList(sortExpression, -1, -1);
		}

		public static void InsertProduct(Product obj)
		{
			if (obj != null)
				obj.Insert();
		}

		public static void UpdateProduct(Product obj)
		{
			if (obj != null)
				obj.Update();
		}

		public static void DeleteProduct(Product obj)
		{
			if (obj != null)
				obj.Delete();
		}

        protected static Product PopulateProduct(IDataReader r)
		{
			Product obj = new Product();
			obj.ProductId = (int)r["product_id"];
			obj.ProductTypeId = (int)r["product_type_id"];
			obj.VendorId = (r["vendor_id"] == DBNull.Value) ? null : (int?)r["vendor_id"];
			obj.CouponId = (r["coupon_id"] == DBNull.Value) ? null : (int?)r["coupon_id"];
			obj.ProductCode = (r["product_code"] == DBNull.Value) ? null : (string)r["product_code"];
			obj.ProductName = (string)r["product_name"];
			obj.Description = (r["description"] == DBNull.Value) ? null : (string)r["description"];
			obj.NbUnits = (int)r["nb_units"];
			obj.Price = (r["price"] == DBNull.Value) ? null : (decimal?)r["price"];
			obj.UnitCost = (r["unit_cost"] == DBNull.Value) ? null : (decimal?)r["unit_cost"];
			obj.NbDayLeadTime = (r["nb_day_lead_time"] == DBNull.Value) ? null : (int?)r["nb_day_lead_time"];
			obj.VendorItemCode = (r["vendor_item_code"] == DBNull.Value) ? null : (string)r["vendor_item_code"];
			obj.OracleCode = (r["oracle_code"] == DBNull.Value) ? null : (string)r["oracle_code"];
			obj.Commission = (r["commission"] == DBNull.Value) ? null : (decimal?)r["commission"];
			obj.IsFreeSample = (r["is_free_sample"] == DBNull.Value) ? null : (bool?)r["is_free_sample"];
			obj.ImageUrl = (r["image_url"] == DBNull.Value) ? null : (string)r["image_url"];
			obj.BusinessDivisionId = (r["business_division_id"] == DBNull.Value) ? null : (int?)r["business_division_id"];
			obj.IVITEM = (r["IVITEM"] == DBNull.Value) ? null : (string)r["IVITEM"];
			obj.IVCOUP = (r["IVCOUP"] == DBNull.Value) ? null : (string)r["IVCOUP"];
			obj.Deleted = (bool)r["deleted"];
			obj.CreateDate = (DateTime)r["create_date"];
			obj.CreateUserId = (int)r["create_user_id"];
			obj.UpdateDate = (r["update_date"] == DBNull.Value) ? null : (DateTime?)r["update_date"];
			obj.UpdateUserId = (r["update_user_id"] == DBNull.Value) ? null : (int?)r["update_user_id"];
			obj.ProductStatusId = (int)r["product_status_id"];

			return obj;
		}

		public static int GetCount()
		{
			using (ISession session = SqlSessionManager.OpenSession())
			{
				ICriteria c = session.CreateCriteria(typeof(Product));
				c.SetProjection(Projections.RowCount());
				return (int) c.UniqueResult();
			}
		}

		/// <summary>
		/// Insert the entity to database.
		/// </summary>
		public virtual void Insert()
		{
			using (ISession session = SqlSessionManager.OpenSession())
			{
				ITransaction trans = session.BeginTransaction();
				try
				{
					session.Save(this);
					trans.Commit();
				}
				catch
				{
					trans.Rollback();
					throw;
				}
			}
		}

		/// <summary>
		/// Update the entity to database.
		/// </summary>
		public virtual void Update()
		{
			using (ISession session = SqlSessionManager.OpenSession())
			{
				ITransaction trans = session.BeginTransaction();
				try
				{
					session.Update(this);
					trans.Commit();
				}
				catch
				{
					trans.Rollback();
					throw;
				}
			}
		}

		/// <summary>
		/// Persist the entity back to database.
		/// </summary>
		public virtual void Save()
		{
			using (ISession session = SqlSessionManager.OpenSession())
			{
				ITransaction trans = session.BeginTransaction();
				try
				{
					session.SaveOrUpdate(this);
					trans.Commit();
				}
				catch
				{
					trans.Rollback();
					throw;
				}
			}
		}

		/// <summary>
		/// Delete entity in database.
		/// </summary>
		public virtual void Delete()
		{
			using (ISession session = SqlSessionManager.OpenSession())
			{
				ITransaction trans = session.BeginTransaction();
				try
				{
					session.Delete(this);
					trans.Commit();
				}
				catch
				{
					trans.Rollback();
					throw;
				}
			}
		}

		/// <summary>
		/// Local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals(object obj)
		{
			if (this == obj)
				return true;

			if ((obj == null) || (obj.GetType() != this.GetType())) 
				return false;

			Product castObj = (Product)obj;
			return (castObj != null && this.productId == castObj.ProductId);
		}

		/// <summary>
		/// Local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			return 29 * (1 + this.productId.GetHashCode());
		}
		#endregion
	}
}
