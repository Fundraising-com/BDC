//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
// 
#pragma warning disable 1591

namespace EfundraisingCRM.com.qsp.dev_wsi {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BatchPaymentSystemWebserviceSoap", Namespace="http://www.qsp.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EPayDTO))]
    public partial class BatchPaymentSystemWebservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthDepositRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthDepositRealTimeStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthDepositBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundPreviousOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BatchPaymentSystemWebservice() {
            this.Url = global::EfundraisingCRM.Properties.Settings.Default.EfundraisingCRM_com_qsp_dev_wsi_BatchPaymentSystemWebservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthRealTimeCompletedEventHandler AuthRealTimeCompleted;
        
        /// <remarks/>
        public event AuthDepositRealTimeCompletedEventHandler AuthDepositRealTimeCompleted;
        
        /// <remarks/>
        public event AuthDepositRealTimeStringCompletedEventHandler AuthDepositRealTimeStringCompleted;
        
        /// <remarks/>
        public event AuthDepositBatchCompletedEventHandler AuthDepositBatchCompleted;
        
        /// <remarks/>
        public event DepositCompletedEventHandler DepositCompleted;
        
        /// <remarks/>
        public event FetchResponseCompletedEventHandler FetchResponseCompleted;
        
        /// <remarks/>
        public event RefundPreviousCompletedEventHandler RefundPreviousCompleted;
        
        /// <remarks/>
        public event RefundCompletedEventHandler RefundCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qsp.com/AuthRealTime", RequestNamespace="http://www.qsp.com/", ResponseNamespace="http://www.qsp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BPPSTxResponse AuthRealTime(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID) {
            object[] results = this.Invoke("AuthRealTime", new object[] {
                        ApplicationId,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId,
                        AppGUID});
            return ((BPPSTxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthRealTimeAsync(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID) {
            this.AuthRealTimeAsync(ApplicationId, CustomerFirstName, CustomerLastName, CustomerStreet1, CustomerStreet2, CustomerCity, CustomerState, CustomerPostalCode, CustomerCountryCode, CreditCardType, CreditCardNumber, CreditCardExpirationMonth, CreditCardExpirationYear, TransactionAmount, LineItemDescription, Descriptor, ClientTransactionId, AppGUID, null);
        }
        
        /// <remarks/>
        public void AuthRealTimeAsync(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID, 
                    object userState) {
            if ((this.AuthRealTimeOperationCompleted == null)) {
                this.AuthRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthRealTimeOperationCompleted);
            }
            this.InvokeAsync("AuthRealTime", new object[] {
                        ApplicationId,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId,
                        AppGUID}, this.AuthRealTimeOperationCompleted, userState);
        }
        
        private void OnAuthRealTimeOperationCompleted(object arg) {
            if ((this.AuthRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthRealTimeCompleted(this, new AuthRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qsp.com/AuthDepositRealTime", RequestNamespace="http://www.qsp.com/", ResponseNamespace="http://www.qsp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BPPSTxResponse AuthDepositRealTime(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID) {
            object[] results = this.Invoke("AuthDepositRealTime", new object[] {
                        ApplicationId,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId,
                        AppGUID});
            return ((BPPSTxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthDepositRealTimeAsync(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID) {
            this.AuthDepositRealTimeAsync(ApplicationId, CustomerFirstName, CustomerLastName, CustomerStreet1, CustomerStreet2, CustomerCity, CustomerState, CustomerPostalCode, CustomerCountryCode, CreditCardType, CreditCardNumber, CreditCardExpirationMonth, CreditCardExpirationYear, TransactionAmount, LineItemDescription, Descriptor, ClientTransactionId, AppGUID, null);
        }
        
        /// <remarks/>
        public void AuthDepositRealTimeAsync(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID, 
                    object userState) {
            if ((this.AuthDepositRealTimeOperationCompleted == null)) {
                this.AuthDepositRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthDepositRealTimeOperationCompleted);
            }
            this.InvokeAsync("AuthDepositRealTime", new object[] {
                        ApplicationId,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId,
                        AppGUID}, this.AuthDepositRealTimeOperationCompleted, userState);
        }
        
        private void OnAuthDepositRealTimeOperationCompleted(object arg) {
            if ((this.AuthDepositRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthDepositRealTimeCompleted(this, new AuthDepositRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qsp.com/AuthDepositRealTimeString", RequestNamespace="http://www.qsp.com/", ResponseNamespace="http://www.qsp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthDepositRealTimeString(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    string CustomerCountryCode, 
                    string CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID) {
            object[] results = this.Invoke("AuthDepositRealTimeString", new object[] {
                        ApplicationId,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId,
                        AppGUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthDepositRealTimeStringAsync(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    string CustomerCountryCode, 
                    string CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID) {
            this.AuthDepositRealTimeStringAsync(ApplicationId, CustomerFirstName, CustomerLastName, CustomerStreet1, CustomerStreet2, CustomerCity, CustomerState, CustomerPostalCode, CustomerCountryCode, CreditCardType, CreditCardNumber, CreditCardExpirationMonth, CreditCardExpirationYear, TransactionAmount, LineItemDescription, Descriptor, ClientTransactionId, AppGUID, null);
        }
        
        /// <remarks/>
        public void AuthDepositRealTimeStringAsync(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    string CustomerCountryCode, 
                    string CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID, 
                    object userState) {
            if ((this.AuthDepositRealTimeStringOperationCompleted == null)) {
                this.AuthDepositRealTimeStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthDepositRealTimeStringOperationCompleted);
            }
            this.InvokeAsync("AuthDepositRealTimeString", new object[] {
                        ApplicationId,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId,
                        AppGUID}, this.AuthDepositRealTimeStringOperationCompleted, userState);
        }
        
        private void OnAuthDepositRealTimeStringOperationCompleted(object arg) {
            if ((this.AuthDepositRealTimeStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthDepositRealTimeStringCompleted(this, new AuthDepositRealTimeStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qsp.com/AuthDepositBatch", RequestNamespace="http://www.qsp.com/", ResponseNamespace="http://www.qsp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BPPSTxResponse AuthDepositBatch(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID) {
            object[] results = this.Invoke("AuthDepositBatch", new object[] {
                        ApplicationId,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId,
                        AppGUID});
            return ((BPPSTxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthDepositBatchAsync(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID) {
            this.AuthDepositBatchAsync(ApplicationId, CustomerFirstName, CustomerLastName, CustomerStreet1, CustomerStreet2, CustomerCity, CustomerState, CustomerPostalCode, CustomerCountryCode, CreditCardType, CreditCardNumber, CreditCardExpirationMonth, CreditCardExpirationYear, TransactionAmount, LineItemDescription, Descriptor, ClientTransactionId, AppGUID, null);
        }
        
        /// <remarks/>
        public void AuthDepositBatchAsync(
                    int ApplicationId, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    string AppGUID, 
                    object userState) {
            if ((this.AuthDepositBatchOperationCompleted == null)) {
                this.AuthDepositBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthDepositBatchOperationCompleted);
            }
            this.InvokeAsync("AuthDepositBatch", new object[] {
                        ApplicationId,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId,
                        AppGUID}, this.AuthDepositBatchOperationCompleted, userState);
        }
        
        private void OnAuthDepositBatchOperationCompleted(object arg) {
            if ((this.AuthDepositBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthDepositBatchCompleted(this, new AuthDepositBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qsp.com/Deposit", RequestNamespace="http://www.qsp.com/", ResponseNamespace="http://www.qsp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BPPSTxResponse Deposit(int ApplicationId, string AppGuid, int ReferringBPPSTxId, int TransactionAmount, string LineItemDescription, string Descriptor) {
            object[] results = this.Invoke("Deposit", new object[] {
                        ApplicationId,
                        AppGuid,
                        ReferringBPPSTxId,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor});
            return ((BPPSTxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DepositAsync(int ApplicationId, string AppGuid, int ReferringBPPSTxId, int TransactionAmount, string LineItemDescription, string Descriptor) {
            this.DepositAsync(ApplicationId, AppGuid, ReferringBPPSTxId, TransactionAmount, LineItemDescription, Descriptor, null);
        }
        
        /// <remarks/>
        public void DepositAsync(int ApplicationId, string AppGuid, int ReferringBPPSTxId, int TransactionAmount, string LineItemDescription, string Descriptor, object userState) {
            if ((this.DepositOperationCompleted == null)) {
                this.DepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepositOperationCompleted);
            }
            this.InvokeAsync("Deposit", new object[] {
                        ApplicationId,
                        AppGuid,
                        ReferringBPPSTxId,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor}, this.DepositOperationCompleted, userState);
        }
        
        private void OnDepositOperationCompleted(object arg) {
            if ((this.DepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepositCompleted(this, new DepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qsp.com/FetchResponse", RequestNamespace="http://www.qsp.com/", ResponseNamespace="http://www.qsp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BPPSTxResponse FetchResponse(int ApplicationId, string AppGuid, int ReferringBPPSTxId) {
            object[] results = this.Invoke("FetchResponse", new object[] {
                        ApplicationId,
                        AppGuid,
                        ReferringBPPSTxId});
            return ((BPPSTxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FetchResponseAsync(int ApplicationId, string AppGuid, int ReferringBPPSTxId) {
            this.FetchResponseAsync(ApplicationId, AppGuid, ReferringBPPSTxId, null);
        }
        
        /// <remarks/>
        public void FetchResponseAsync(int ApplicationId, string AppGuid, int ReferringBPPSTxId, object userState) {
            if ((this.FetchResponseOperationCompleted == null)) {
                this.FetchResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchResponseOperationCompleted);
            }
            this.InvokeAsync("FetchResponse", new object[] {
                        ApplicationId,
                        AppGuid,
                        ReferringBPPSTxId}, this.FetchResponseOperationCompleted, userState);
        }
        
        private void OnFetchResponseOperationCompleted(object arg) {
            if ((this.FetchResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchResponseCompleted(this, new FetchResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qsp.com/RefundPrevious", RequestNamespace="http://www.qsp.com/", ResponseNamespace="http://www.qsp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BPPSTxResponse RefundPrevious(int ApplicationId, string AppGuid, int ReferringBPPSTxId, int TransactionAmount, string LineItemDescription, string Descriptor) {
            object[] results = this.Invoke("RefundPrevious", new object[] {
                        ApplicationId,
                        AppGuid,
                        ReferringBPPSTxId,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor});
            return ((BPPSTxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RefundPreviousAsync(int ApplicationId, string AppGuid, int ReferringBPPSTxId, int TransactionAmount, string LineItemDescription, string Descriptor) {
            this.RefundPreviousAsync(ApplicationId, AppGuid, ReferringBPPSTxId, TransactionAmount, LineItemDescription, Descriptor, null);
        }
        
        /// <remarks/>
        public void RefundPreviousAsync(int ApplicationId, string AppGuid, int ReferringBPPSTxId, int TransactionAmount, string LineItemDescription, string Descriptor, object userState) {
            if ((this.RefundPreviousOperationCompleted == null)) {
                this.RefundPreviousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundPreviousOperationCompleted);
            }
            this.InvokeAsync("RefundPrevious", new object[] {
                        ApplicationId,
                        AppGuid,
                        ReferringBPPSTxId,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor}, this.RefundPreviousOperationCompleted, userState);
        }
        
        private void OnRefundPreviousOperationCompleted(object arg) {
            if ((this.RefundPreviousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundPreviousCompleted(this, new RefundPreviousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qsp.com/Refund", RequestNamespace="http://www.qsp.com/", ResponseNamespace="http://www.qsp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BPPSTxResponse Refund(
                    int ApplicationId, 
                    string AppGuid, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId) {
            object[] results = this.Invoke("Refund", new object[] {
                        ApplicationId,
                        AppGuid,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId});
            return ((BPPSTxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RefundAsync(
                    int ApplicationId, 
                    string AppGuid, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId) {
            this.RefundAsync(ApplicationId, AppGuid, CustomerFirstName, CustomerLastName, CustomerStreet1, CustomerStreet2, CustomerCity, CustomerState, CustomerPostalCode, CustomerCountryCode, CreditCardType, CreditCardNumber, CreditCardExpirationMonth, CreditCardExpirationYear, TransactionAmount, LineItemDescription, Descriptor, ClientTransactionId, null);
        }
        
        /// <remarks/>
        public void RefundAsync(
                    int ApplicationId, 
                    string AppGuid, 
                    string CustomerFirstName, 
                    string CustomerLastName, 
                    string CustomerStreet1, 
                    string CustomerStreet2, 
                    string CustomerCity, 
                    string CustomerState, 
                    string CustomerPostalCode, 
                    CountryCode CustomerCountryCode, 
                    CardType CreditCardType, 
                    string CreditCardNumber, 
                    int CreditCardExpirationMonth, 
                    int CreditCardExpirationYear, 
                    int TransactionAmount, 
                    string LineItemDescription, 
                    string Descriptor, 
                    string ClientTransactionId, 
                    object userState) {
            if ((this.RefundOperationCompleted == null)) {
                this.RefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOperationCompleted);
            }
            this.InvokeAsync("Refund", new object[] {
                        ApplicationId,
                        AppGuid,
                        CustomerFirstName,
                        CustomerLastName,
                        CustomerStreet1,
                        CustomerStreet2,
                        CustomerCity,
                        CustomerState,
                        CustomerPostalCode,
                        CustomerCountryCode,
                        CreditCardType,
                        CreditCardNumber,
                        CreditCardExpirationMonth,
                        CreditCardExpirationYear,
                        TransactionAmount,
                        LineItemDescription,
                        Descriptor,
                        ClientTransactionId}, this.RefundOperationCompleted, userState);
        }
        
        private void OnRefundOperationCompleted(object arg) {
            if ((this.RefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundCompleted(this, new RefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qsp.com/")]
    public enum CountryCode {
        
        /// <remarks/>
        US,
        
        /// <remarks/>
        CA,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qsp.com")]
    public enum CardType {
        
        /// <remarks/>
        VISA,
        
        /// <remarks/>
        MASTERCARD,
        
        /// <remarks/>
        AMEX,
        
        /// <remarks/>
        DISCOVER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qsp.com/")]
    public partial class BPPSTxResponse : EPayDTO {
        
        private int bPPS_Tx_IdField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int BPPS_Tx_Id {
            get {
                return this.bPPS_Tx_IdField;
            }
            set {
                this.bPPS_Tx_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BPPSTxResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epay.tcs.timeinc.com")]
    public partial class EPayDTO {
        
        private string authNumberField;
        
        private string avs_responseField;
        
        private string ccNumberLast4Field;
        
        private string clientIdField;
        
        private string csv_responseField;
        
        private string clientTransIdField;
        
        private string refIdField;
        
        private string responseCodeField;
        
        private string tranIdField;
        
        private string tranRequestTypeField;
        
        private string clientPassThroughField;
        
        private string tcs_transaction_idField;
        
        private string tranDateField;
        
        private string tranResponseTypeField;
        
        private string tranAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string authNumber {
            get {
                return this.authNumberField;
            }
            set {
                this.authNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string avs_response {
            get {
                return this.avs_responseField;
            }
            set {
                this.avs_responseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ccNumberLast4 {
            get {
                return this.ccNumberLast4Field;
            }
            set {
                this.ccNumberLast4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string clientId {
            get {
                return this.clientIdField;
            }
            set {
                this.clientIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string csv_response {
            get {
                return this.csv_responseField;
            }
            set {
                this.csv_responseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string clientTransId {
            get {
                return this.clientTransIdField;
            }
            set {
                this.clientTransIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string refId {
            get {
                return this.refIdField;
            }
            set {
                this.refIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string responseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tranId {
            get {
                return this.tranIdField;
            }
            set {
                this.tranIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tranRequestType {
            get {
                return this.tranRequestTypeField;
            }
            set {
                this.tranRequestTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string clientPassThrough {
            get {
                return this.clientPassThroughField;
            }
            set {
                this.clientPassThroughField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tcs_transaction_id {
            get {
                return this.tcs_transaction_idField;
            }
            set {
                this.tcs_transaction_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tranDate {
            get {
                return this.tranDateField;
            }
            set {
                this.tranDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tranResponseType {
            get {
                return this.tranResponseTypeField;
            }
            set {
                this.tranResponseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tranAmount {
            get {
                return this.tranAmountField;
            }
            set {
                this.tranAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AuthRealTimeCompletedEventHandler(object sender, AuthRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BPPSTxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BPPSTxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AuthDepositRealTimeCompletedEventHandler(object sender, AuthDepositRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthDepositRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthDepositRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BPPSTxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BPPSTxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AuthDepositRealTimeStringCompletedEventHandler(object sender, AuthDepositRealTimeStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthDepositRealTimeStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthDepositRealTimeStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AuthDepositBatchCompletedEventHandler(object sender, AuthDepositBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthDepositBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthDepositBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BPPSTxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BPPSTxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DepositCompletedEventHandler(object sender, DepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BPPSTxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BPPSTxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FetchResponseCompletedEventHandler(object sender, FetchResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BPPSTxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BPPSTxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RefundPreviousCompletedEventHandler(object sender, RefundPreviousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundPreviousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundPreviousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BPPSTxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BPPSTxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RefundCompletedEventHandler(object sender, RefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BPPSTxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BPPSTxResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591