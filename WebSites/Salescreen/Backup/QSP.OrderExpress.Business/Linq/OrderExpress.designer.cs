#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QSP.OrderExpress.Business.Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="QSPFulfillment")]
	public partial class OrderExpressDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(QSP.OrderExpress.Business.Entity.Account instance);
    partial void UpdateAccount(QSP.OrderExpress.Business.Entity.Account instance);
    partial void DeleteAccount(QSP.OrderExpress.Business.Entity.Account instance);
    partial void InsertAccountStatus(QSP.OrderExpress.Business.Entity.AccountStatus instance);
    partial void UpdateAccountStatus(QSP.OrderExpress.Business.Entity.AccountStatus instance);
    partial void DeleteAccountStatus(QSP.OrderExpress.Business.Entity.AccountStatus instance);
    partial void InsertCampaign(QSP.OrderExpress.Business.Entity.Campaign instance);
    partial void UpdateCampaign(QSP.OrderExpress.Business.Entity.Campaign instance);
    partial void DeleteCampaign(QSP.OrderExpress.Business.Entity.Campaign instance);
    partial void InsertFieldSalesManager(QSP.OrderExpress.Business.Entity.FieldSalesManager instance);
    partial void UpdateFieldSalesManager(QSP.OrderExpress.Business.Entity.FieldSalesManager instance);
    partial void DeleteFieldSalesManager(QSP.OrderExpress.Business.Entity.FieldSalesManager instance);
    partial void InsertProgramType(QSP.OrderExpress.Business.Entity.ProgramType instance);
    partial void UpdateProgramType(QSP.OrderExpress.Business.Entity.ProgramType instance);
    partial void DeleteProgramType(QSP.OrderExpress.Business.Entity.ProgramType instance);
    partial void InsertPostalAddressAccount(QSP.OrderExpress.Business.Entity.PostalAddressAccount instance);
    partial void UpdatePostalAddressAccount(QSP.OrderExpress.Business.Entity.PostalAddressAccount instance);
    partial void DeletePostalAddressAccount(QSP.OrderExpress.Business.Entity.PostalAddressAccount instance);
    partial void InsertPostalAddress(QSP.OrderExpress.Business.Entity.PostalAddress instance);
    partial void UpdatePostalAddress(QSP.OrderExpress.Business.Entity.PostalAddress instance);
    partial void DeletePostalAddress(QSP.OrderExpress.Business.Entity.PostalAddress instance);
    partial void InsertUser(QSP.OrderExpress.Business.Entity.User instance);
    partial void UpdateUser(QSP.OrderExpress.Business.Entity.User instance);
    partial void DeleteUser(QSP.OrderExpress.Business.Entity.User instance);
    partial void InsertOrganization(QSP.OrderExpress.Business.Entity.Organization instance);
    partial void UpdateOrganization(QSP.OrderExpress.Business.Entity.Organization instance);
    partial void DeleteOrganization(QSP.OrderExpress.Business.Entity.Organization instance);
    partial void InsertPostalAddressOrganization(QSP.OrderExpress.Business.Entity.PostalAddressOrganization instance);
    partial void UpdatePostalAddressOrganization(QSP.OrderExpress.Business.Entity.PostalAddressOrganization instance);
    partial void DeletePostalAddressOrganization(QSP.OrderExpress.Business.Entity.PostalAddressOrganization instance);
    partial void InsertOrganizationType(QSP.OrderExpress.Business.Entity.OrganizationType instance);
    partial void UpdateOrganizationType(QSP.OrderExpress.Business.Entity.OrganizationType instance);
    partial void DeleteOrganizationType(QSP.OrderExpress.Business.Entity.OrganizationType instance);
    partial void InsertSeason(QSP.OrderExpress.Business.Entity.Season instance);
    partial void UpdateSeason(QSP.OrderExpress.Business.Entity.Season instance);
    partial void DeleteSeason(QSP.OrderExpress.Business.Entity.Season instance);
    partial void InsertForm(QSP.OrderExpress.Business.Entity.Form instance);
    partial void UpdateForm(QSP.OrderExpress.Business.Entity.Form instance);
    partial void DeleteForm(QSP.OrderExpress.Business.Entity.Form instance);
    partial void InsertUserRole(QSP.OrderExpress.Business.Entity.UserRole instance);
    partial void UpdateUserRole(QSP.OrderExpress.Business.Entity.UserRole instance);
    partial void DeleteUserRole(QSP.OrderExpress.Business.Entity.UserRole instance);
    partial void InsertFormPermission(QSP.OrderExpress.Business.Entity.FormPermission instance);
    partial void UpdateFormPermission(QSP.OrderExpress.Business.Entity.FormPermission instance);
    partial void DeleteFormPermission(QSP.OrderExpress.Business.Entity.FormPermission instance);
    partial void InsertFormPermissionRegion(QSP.OrderExpress.Business.Entity.FormPermissionRegion instance);
    partial void UpdateFormPermissionRegion(QSP.OrderExpress.Business.Entity.FormPermissionRegion instance);
    partial void DeleteFormPermissionRegion(QSP.OrderExpress.Business.Entity.FormPermissionRegion instance);
    partial void InsertFormRequiresForm(QSP.OrderExpress.Business.Entity.FormRequiresForm instance);
    partial void UpdateFormRequiresForm(QSP.OrderExpress.Business.Entity.FormRequiresForm instance);
    partial void DeleteFormRequiresForm(QSP.OrderExpress.Business.Entity.FormRequiresForm instance);
    partial void InsertProgramAgreement(QSP.OrderExpress.Business.Entity.ProgramAgreement instance);
    partial void UpdateProgramAgreement(QSP.OrderExpress.Business.Entity.ProgramAgreement instance);
    partial void DeleteProgramAgreement(QSP.OrderExpress.Business.Entity.ProgramAgreement instance);
    partial void InsertProgramAgreementCampaign(QSP.OrderExpress.Business.Entity.ProgramAgreementCampaign instance);
    partial void UpdateProgramAgreementCampaign(QSP.OrderExpress.Business.Entity.ProgramAgreementCampaign instance);
    partial void DeleteProgramAgreementCampaign(QSP.OrderExpress.Business.Entity.ProgramAgreementCampaign instance);
    partial void InsertProgramAgreementStatus(QSP.OrderExpress.Business.Entity.ProgramAgreementStatus instance);
    partial void UpdateProgramAgreementStatus(QSP.OrderExpress.Business.Entity.ProgramAgreementStatus instance);
    partial void DeleteProgramAgreementStatus(QSP.OrderExpress.Business.Entity.ProgramAgreementStatus instance);
    partial void InsertFormDeliveryDateType(QSP.OrderExpress.Business.Entity.FormDeliveryDateType instance);
    partial void UpdateFormDeliveryDateType(QSP.OrderExpress.Business.Entity.FormDeliveryDateType instance);
    partial void DeleteFormDeliveryDateType(QSP.OrderExpress.Business.Entity.FormDeliveryDateType instance);
    partial void InsertPostalAddressCampaign(QSP.OrderExpress.Business.Entity.PostalAddressCampaign instance);
    partial void UpdatePostalAddressCampaign(QSP.OrderExpress.Business.Entity.PostalAddressCampaign instance);
    partial void DeletePostalAddressCampaign(QSP.OrderExpress.Business.Entity.PostalAddressCampaign instance);
    partial void InsertPostalAddressProgramAgreement(QSP.OrderExpress.Business.Entity.PostalAddressProgramAgreement instance);
    partial void UpdatePostalAddressProgramAgreement(QSP.OrderExpress.Business.Entity.PostalAddressProgramAgreement instance);
    partial void DeletePostalAddressProgramAgreement(QSP.OrderExpress.Business.Entity.PostalAddressProgramAgreement instance);
    partial void InsertPhoneNumberProgramAgreement(QSP.OrderExpress.Business.Entity.PhoneNumberProgramAgreement instance);
    partial void UpdatePhoneNumberProgramAgreement(QSP.OrderExpress.Business.Entity.PhoneNumberProgramAgreement instance);
    partial void DeletePhoneNumberProgramAgreement(QSP.OrderExpress.Business.Entity.PhoneNumberProgramAgreement instance);
    partial void InsertPhoneNumberOrganization(QSP.OrderExpress.Business.Entity.PhoneNumberOrganization instance);
    partial void UpdatePhoneNumberOrganization(QSP.OrderExpress.Business.Entity.PhoneNumberOrganization instance);
    partial void DeletePhoneNumberOrganization(QSP.OrderExpress.Business.Entity.PhoneNumberOrganization instance);
    partial void InsertPhoneNumberCampaign(QSP.OrderExpress.Business.Entity.PhoneNumberCampaign instance);
    partial void UpdatePhoneNumberCampaign(QSP.OrderExpress.Business.Entity.PhoneNumberCampaign instance);
    partial void DeletePhoneNumberCampaign(QSP.OrderExpress.Business.Entity.PhoneNumberCampaign instance);
    partial void InsertPhoneNumberAccount(QSP.OrderExpress.Business.Entity.PhoneNumberAccount instance);
    partial void UpdatePhoneNumberAccount(QSP.OrderExpress.Business.Entity.PhoneNumberAccount instance);
    partial void DeletePhoneNumberAccount(QSP.OrderExpress.Business.Entity.PhoneNumberAccount instance);
    partial void InsertPhoneNumber(QSP.OrderExpress.Business.Entity.PhoneNumber instance);
    partial void UpdatePhoneNumber(QSP.OrderExpress.Business.Entity.PhoneNumber instance);
    partial void DeletePhoneNumber(QSP.OrderExpress.Business.Entity.PhoneNumber instance);
    partial void InsertEmail(QSP.OrderExpress.Business.Entity.Email instance);
    partial void UpdateEmail(QSP.OrderExpress.Business.Entity.Email instance);
    partial void DeleteEmail(QSP.OrderExpress.Business.Entity.Email instance);
    partial void InsertEmailAccount(QSP.OrderExpress.Business.Entity.EmailAccount instance);
    partial void UpdateEmailAccount(QSP.OrderExpress.Business.Entity.EmailAccount instance);
    partial void DeleteEmailAccount(QSP.OrderExpress.Business.Entity.EmailAccount instance);
    partial void InsertEmailCampaign(QSP.OrderExpress.Business.Entity.EmailCampaign instance);
    partial void UpdateEmailCampaign(QSP.OrderExpress.Business.Entity.EmailCampaign instance);
    partial void DeleteEmailCampaign(QSP.OrderExpress.Business.Entity.EmailCampaign instance);
    partial void InsertEmailOrganization(QSP.OrderExpress.Business.Entity.EmailOrganization instance);
    partial void UpdateEmailOrganization(QSP.OrderExpress.Business.Entity.EmailOrganization instance);
    partial void DeleteEmailOrganization(QSP.OrderExpress.Business.Entity.EmailOrganization instance);
    partial void InsertEmailProgramAgreement(QSP.OrderExpress.Business.Entity.EmailProgramAgreement instance);
    partial void UpdateEmailProgramAgreement(QSP.OrderExpress.Business.Entity.EmailProgramAgreement instance);
    partial void DeleteEmailProgramAgreement(QSP.OrderExpress.Business.Entity.EmailProgramAgreement instance);
    partial void InsertOrganizationLevel(QSP.OrderExpress.Business.Entity.OrganizationLevel instance);
    partial void UpdateOrganizationLevel(QSP.OrderExpress.Business.Entity.OrganizationLevel instance);
    partial void DeleteOrganizationLevel(QSP.OrderExpress.Business.Entity.OrganizationLevel instance);
    partial void InsertRole(QSP.OrderExpress.Business.Entity.Role instance);
    partial void UpdateRole(QSP.OrderExpress.Business.Entity.Role instance);
    partial void DeleteRole(QSP.OrderExpress.Business.Entity.Role instance);
    partial void InsertSubdivision(QSP.OrderExpress.Business.Entity.Subdivision instance);
    partial void UpdateSubdivision(QSP.OrderExpress.Business.Entity.Subdivision instance);
    partial void DeleteSubdivision(QSP.OrderExpress.Business.Entity.Subdivision instance);
    partial void InsertFormSection(QSP.OrderExpress.Business.Entity.FormSection instance);
    partial void UpdateFormSection(QSP.OrderExpress.Business.Entity.FormSection instance);
    partial void DeleteFormSection(QSP.OrderExpress.Business.Entity.FormSection instance);
    partial void InsertCatalogItemCategory(QSP.OrderExpress.Business.Entity.CatalogItemCategory instance);
    partial void UpdateCatalogItemCategory(QSP.OrderExpress.Business.Entity.CatalogItemCategory instance);
    partial void DeleteCatalogItemCategory(QSP.OrderExpress.Business.Entity.CatalogItemCategory instance);
    partial void InsertCatalog(QSP.OrderExpress.Business.Entity.Catalog instance);
    partial void UpdateCatalog(QSP.OrderExpress.Business.Entity.Catalog instance);
    partial void DeleteCatalog(QSP.OrderExpress.Business.Entity.Catalog instance);
    partial void InsertBusinessDivision(QSP.OrderExpress.Business.Entity.BusinessDivision instance);
    partial void UpdateBusinessDivision(QSP.OrderExpress.Business.Entity.BusinessDivision instance);
    partial void DeleteBusinessDivision(QSP.OrderExpress.Business.Entity.BusinessDivision instance);
    partial void InsertProgram(QSP.OrderExpress.Business.Entity.Program instance);
    partial void UpdateProgram(QSP.OrderExpress.Business.Entity.Program instance);
    partial void DeleteProgram(QSP.OrderExpress.Business.Entity.Program instance);
    partial void InsertStatusCategory(QSP.OrderExpress.Business.Entity.StatusCategory instance);
    partial void UpdateStatusCategory(QSP.OrderExpress.Business.Entity.StatusCategory instance);
    partial void DeleteStatusCategory(QSP.OrderExpress.Business.Entity.StatusCategory instance);
    partial void InsertAccountCollection(QSP.OrderExpress.Business.Entity.AccountCollection instance);
    partial void UpdateAccountCollection(QSP.OrderExpress.Business.Entity.AccountCollection instance);
    partial void DeleteAccountCollection(QSP.OrderExpress.Business.Entity.AccountCollection instance);
    partial void InsertBusinessException(QSP.OrderExpress.Business.Entity.BusinessException instance);
    partial void UpdateBusinessException(QSP.OrderExpress.Business.Entity.BusinessException instance);
    partial void DeleteBusinessException(QSP.OrderExpress.Business.Entity.BusinessException instance);
    partial void InsertEntityException(QSP.OrderExpress.Business.Entity.EntityException instance);
    partial void UpdateEntityException(QSP.OrderExpress.Business.Entity.EntityException instance);
    partial void DeleteEntityException(QSP.OrderExpress.Business.Entity.EntityException instance);
    partial void InsertWarehouse(QSP.OrderExpress.Business.Entity.Warehouse instance);
    partial void UpdateWarehouse(QSP.OrderExpress.Business.Entity.Warehouse instance);
    partial void DeleteWarehouse(QSP.OrderExpress.Business.Entity.Warehouse instance);
    partial void InsertTradeClass(QSP.OrderExpress.Business.Entity.TradeClass instance);
    partial void UpdateTradeClass(QSP.OrderExpress.Business.Entity.TradeClass instance);
    partial void DeleteTradeClass(QSP.OrderExpress.Business.Entity.TradeClass instance);
    partial void InsertOrder(QSP.OrderExpress.Business.Entity.Order instance);
    partial void UpdateOrder(QSP.OrderExpress.Business.Entity.Order instance);
    partial void DeleteOrder(QSP.OrderExpress.Business.Entity.Order instance);
    partial void InsertDocument(QSP.OrderExpress.Business.Entity.Document instance);
    partial void UpdateDocument(QSP.OrderExpress.Business.Entity.Document instance);
    partial void DeleteDocument(QSP.OrderExpress.Business.Entity.Document instance);
    partial void InsertDocumentAccount(QSP.OrderExpress.Business.Entity.DocumentAccount instance);
    partial void UpdateDocumentAccount(QSP.OrderExpress.Business.Entity.DocumentAccount instance);
    partial void DeleteDocumentAccount(QSP.OrderExpress.Business.Entity.DocumentAccount instance);
    partial void InsertDocumentType(QSP.OrderExpress.Business.Entity.DocumentType instance);
    partial void UpdateDocumentType(QSP.OrderExpress.Business.Entity.DocumentType instance);
    partial void DeleteDocumentType(QSP.OrderExpress.Business.Entity.DocumentType instance);
    partial void InsertOrderStatus(QSP.OrderExpress.Business.Entity.OrderStatus instance);
    partial void UpdateOrderStatus(QSP.OrderExpress.Business.Entity.OrderStatus instance);
    partial void DeleteOrderStatus(QSP.OrderExpress.Business.Entity.OrderStatus instance);
    partial void InsertOrderType(QSP.OrderExpress.Business.Entity.OrderType instance);
    partial void UpdateOrderType(QSP.OrderExpress.Business.Entity.OrderType instance);
    partial void DeleteOrderType(QSP.OrderExpress.Business.Entity.OrderType instance);
    partial void InsertSource(QSP.OrderExpress.Business.Entity.Source instance);
    partial void UpdateSource(QSP.OrderExpress.Business.Entity.Source instance);
    partial void DeleteSource(QSP.OrderExpress.Business.Entity.Source instance);
    partial void InsertAccountStatusChange(QSP.OrderExpress.Business.Entity.AccountStatusChange instance);
    partial void UpdateAccountStatusChange(QSP.OrderExpress.Business.Entity.AccountStatusChange instance);
    partial void DeleteAccountStatusChange(QSP.OrderExpress.Business.Entity.AccountStatusChange instance);
    partial void InsertProgramAgreementStatusChange(QSP.OrderExpress.Business.Entity.ProgramAgreementStatusChange instance);
    partial void UpdateProgramAgreementStatusChange(QSP.OrderExpress.Business.Entity.ProgramAgreementStatusChange instance);
    partial void DeleteProgramAgreementStatusChange(QSP.OrderExpress.Business.Entity.ProgramAgreementStatusChange instance);
    partial void InsertProgramAgreementCatalog(QSP.OrderExpress.Business.Entity.ProgramAgreementCatalog instance);
    partial void UpdateProgramAgreementCatalog(QSP.OrderExpress.Business.Entity.ProgramAgreementCatalog instance);
    partial void DeleteProgramAgreementCatalog(QSP.OrderExpress.Business.Entity.ProgramAgreementCatalog instance);
    partial void InsertProgramAgreementOrder(QSP.OrderExpress.Business.Entity.ProgramAgreementOrder instance);
    partial void UpdateProgramAgreementOrder(QSP.OrderExpress.Business.Entity.ProgramAgreementOrder instance);
    partial void DeleteProgramAgreementOrder(QSP.OrderExpress.Business.Entity.ProgramAgreementOrder instance);
    partial void InsertOrderStatusChange(QSP.OrderExpress.Business.Entity.OrderStatusChange instance);
    partial void UpdateOrderStatusChange(QSP.OrderExpress.Business.Entity.OrderStatusChange instance);
    partial void DeleteOrderStatusChange(QSP.OrderExpress.Business.Entity.OrderStatusChange instance);
    partial void InsertOrderDetail(QSP.OrderExpress.Business.Entity.OrderDetail instance);
    partial void UpdateOrderDetail(QSP.OrderExpress.Business.Entity.OrderDetail instance);
    partial void DeleteOrderDetail(QSP.OrderExpress.Business.Entity.OrderDetail instance);
    partial void InsertCatalogItem(QSP.OrderExpress.Business.Entity.CatalogItem instance);
    partial void UpdateCatalogItem(QSP.OrderExpress.Business.Entity.CatalogItem instance);
    partial void DeleteCatalogItem(QSP.OrderExpress.Business.Entity.CatalogItem instance);
    partial void InsertCatalogItemDetail(QSP.OrderExpress.Business.Entity.CatalogItemDetail instance);
    partial void UpdateCatalogItemDetail(QSP.OrderExpress.Business.Entity.CatalogItemDetail instance);
    partial void DeleteCatalogItemDetail(QSP.OrderExpress.Business.Entity.CatalogItemDetail instance);
    partial void InsertShipmentGroup(QSP.OrderExpress.Business.Entity.ShipmentGroup instance);
    partial void UpdateShipmentGroup(QSP.OrderExpress.Business.Entity.ShipmentGroup instance);
    partial void DeleteShipmentGroup(QSP.OrderExpress.Business.Entity.ShipmentGroup instance);
    partial void InsertDeliveryMethod(QSP.OrderExpress.Business.Entity.DeliveryMethod instance);
    partial void UpdateDeliveryMethod(QSP.OrderExpress.Business.Entity.DeliveryMethod instance);
    partial void DeleteDeliveryMethod(QSP.OrderExpress.Business.Entity.DeliveryMethod instance);
    partial void InsertOrderCharge(QSP.OrderExpress.Business.Entity.OrderCharge instance);
    partial void UpdateOrderCharge(QSP.OrderExpress.Business.Entity.OrderCharge instance);
    partial void DeleteOrderCharge(QSP.OrderExpress.Business.Entity.OrderCharge instance);
    partial void InsertCharge(QSP.OrderExpress.Business.Entity.Charge instance);
    partial void UpdateCharge(QSP.OrderExpress.Business.Entity.Charge instance);
    partial void DeleteCharge(QSP.OrderExpress.Business.Entity.Charge instance);
    partial void InsertChargeTo(QSP.OrderExpress.Business.Entity.ChargeTo instance);
    partial void UpdateChargeTo(QSP.OrderExpress.Business.Entity.ChargeTo instance);
    partial void DeleteChargeTo(QSP.OrderExpress.Business.Entity.ChargeTo instance);
    partial void InsertOrderDetailTax(QSP.OrderExpress.Business.Entity.OrderDetailTax instance);
    partial void UpdateOrderDetailTax(QSP.OrderExpress.Business.Entity.OrderDetailTax instance);
    partial void DeleteOrderDetailTax(QSP.OrderExpress.Business.Entity.OrderDetailTax instance);
    partial void InsertTaxCalculationMethod(QSP.OrderExpress.Business.Entity.TaxCalculationMethod instance);
    partial void UpdateTaxCalculationMethod(QSP.OrderExpress.Business.Entity.TaxCalculationMethod instance);
    partial void DeleteTaxCalculationMethod(QSP.OrderExpress.Business.Entity.TaxCalculationMethod instance);
    partial void InsertProductTypeProgramType(QSP.OrderExpress.Business.Entity.ProductTypeProgramType instance);
    partial void UpdateProductTypeProgramType(QSP.OrderExpress.Business.Entity.ProductTypeProgramType instance);
    partial void DeleteProductTypeProgramType(QSP.OrderExpress.Business.Entity.ProductTypeProgramType instance);
    partial void InsertProductType(QSP.OrderExpress.Business.Entity.ProductType instance);
    partial void UpdateProductType(QSP.OrderExpress.Business.Entity.ProductType instance);
    partial void DeleteProductType(QSP.OrderExpress.Business.Entity.ProductType instance);
    partial void InsertQCAPOrder(QSP.OrderExpress.Business.Entity.QCAPOrder instance);
    partial void UpdateQCAPOrder(QSP.OrderExpress.Business.Entity.QCAPOrder instance);
    partial void DeleteQCAPOrder(QSP.OrderExpress.Business.Entity.QCAPOrder instance);
    partial void InsertQCAPOrderDetail(QSP.OrderExpress.Business.Entity.QCAPOrderDetail instance);
    partial void UpdateQCAPOrderDetail(QSP.OrderExpress.Business.Entity.QCAPOrderDetail instance);
    partial void DeleteQCAPOrderDetail(QSP.OrderExpress.Business.Entity.QCAPOrderDetail instance);
    #endregion
		
		public OrderExpressDataContext() : 
				base(global::QSPForm.Business.Properties.Settings.Default.QSPFulfillmentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OrderExpressDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrderExpressDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrderExpressDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrderExpressDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Account> Accounts
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Account>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.AccountStatus> AccountStatus
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.AccountStatus>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Campaign> Campaigns
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Campaign>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.FieldSalesManager> FieldSalesManagers
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.FieldSalesManager>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProgramType> ProgramTypes
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProgramType>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PostalAddressAccount> PostalAddressAccounts
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PostalAddressAccount>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PostalAddress> PostalAddresses
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PostalAddress>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.User> Users
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.User>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Organization> Organizations
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Organization>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PostalAddressOrganization> PostalAddressOrganizations
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PostalAddressOrganization>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.OrganizationType> OrganizationTypes
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.OrganizationType>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Season> Seasons
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Season>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Form> Forms
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Form>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.UserRole> UserRoles
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.UserRole>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.FormPermission> FormPermissions
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.FormPermission>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.FormPermissionRegion> FormPermissionRegions
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.FormPermissionRegion>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.FormRequiresForm> FormRequiresForms
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.FormRequiresForm>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProgramAgreement> ProgramAgreements
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProgramAgreement>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProgramAgreementCampaign> ProgramAgreementCampaigns
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProgramAgreementCampaign>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProgramAgreementStatus> ProgramAgreementStatus
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProgramAgreementStatus>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.FormDeliveryDateType> FormDeliveryDateTypes
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.FormDeliveryDateType>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PostalAddressCampaign> PostalAddressCampaigns
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PostalAddressCampaign>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PostalAddressProgramAgreement> PostalAddressProgramAgreements
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PostalAddressProgramAgreement>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PhoneNumberProgramAgreement> PhoneNumberProgramAgreements
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PhoneNumberProgramAgreement>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PhoneNumberOrganization> PhoneNumberOrganizations
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PhoneNumberOrganization>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PhoneNumberCampaign> PhoneNumberCampaigns
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PhoneNumberCampaign>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PhoneNumberAccount> PhoneNumberAccounts
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PhoneNumberAccount>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.PhoneNumber> PhoneNumbers
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.PhoneNumber>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Email> Emails
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Email>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.EmailAccount> EmailAccounts
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.EmailAccount>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.EmailCampaign> EmailCampaigns
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.EmailCampaign>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.EmailOrganization> EmailOrganizations
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.EmailOrganization>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.EmailProgramAgreement> EmailProgramAgreements
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.EmailProgramAgreement>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.OrganizationLevel> OrganizationLevels
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.OrganizationLevel>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Role> Roles
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Role>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Subdivision> Subdivisions
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Subdivision>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.FormSection> FormSections
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.FormSection>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.CatalogItemCategory> CatalogItemCategories
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.CatalogItemCategory>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Catalog> Catalogs
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Catalog>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.BusinessDivision> BusinessDivisions
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.BusinessDivision>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Program> Programs
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Program>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.StatusCategory> StatusCategories
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.StatusCategory>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.AccountCollection> AccountCollections
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.AccountCollection>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.BusinessException> BusinessExceptions
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.BusinessException>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.EntityException> EntityExceptions
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.EntityException>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Warehouse> Warehouses
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Warehouse>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.TradeClass> TradeClasses
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.TradeClass>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Order> Orders
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Order>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Document> Documents
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Document>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.DocumentAccount> DocumentAccounts
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.DocumentAccount>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.OrderType> OrderTypes
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.OrderType>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Source> Sources
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Source>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.AccountStatusChange> AccountStatusChanges
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.AccountStatusChange>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProgramAgreementStatusChange> ProgramAgreementStatusChanges
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProgramAgreementStatusChange>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProgramAgreementCatalog> ProgramAgreementCatalogs
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProgramAgreementCatalog>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProgramAgreementOrder> ProgramAgreementOrders
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProgramAgreementOrder>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.OrderStatusChange> OrderStatusChanges
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.OrderStatusChange>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.CatalogItem> CatalogItems
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.CatalogItem>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.CatalogItemDetail> CatalogItemDetails
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.CatalogItemDetail>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ShipmentGroup> ShipmentGroups
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ShipmentGroup>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.DeliveryMethod> DeliveryMethods
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.DeliveryMethod>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.OrderCharge> OrderCharges
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.OrderCharge>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.Charge> Charges
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.Charge>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ChargeTo> ChargeTos
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ChargeTo>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.OrderDetailTax> OrderDetailTaxes
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.OrderDetailTax>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.TaxCalculationMethod> TaxCalculationMethods
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.TaxCalculationMethod>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProductTypeProgramType> ProductTypeProgramTypes
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProductTypeProgramType>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.ProductType>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.QCAPOrder> QCAPOrders
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.QCAPOrder>();
			}
		}
		
		public System.Data.Linq.Table<QSP.OrderExpress.Business.Entity.QCAPOrderDetail> QCAPOrderDetails
		{
			get
			{
				return this.GetTable<QSP.OrderExpress.Business.Entity.QCAPOrderDetail>();
			}
		}
	}
}
namespace QSP.OrderExpress.Business.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[Table(Name="dbo.account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _account_id;
		
		private string _account_name;
		
		private System.Nullable<int> _account_status_id;
		
		private int _account_type_id;
		
		private int _organization_id;
		
		private System.Nullable<int> _customer_id;
		
		private string _fm_id;
		
		private System.Nullable<int> _fulf_account_id;
		
		private string _ARCUST;
		
		private System.Nullable<System.DateTime> _ARCUST_update_date;
		
		private string _tax_exemption_number;
		
		private System.Nullable<System.DateTime> _tax_exemption_expiration_date;
		
		private decimal _credit_limit;
		
		private string _comments;
		
		private bool _deleted;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private System.Nullable<int> _dts_FlagpoleInstance;
		
		private System.Nullable<int> _dts_CAccountId;
		
		private EntitySet<Campaign> _Campains;
		
		private EntitySet<PostalAddressAccount> _PostalAddressAccounts;
		
		private EntitySet<PhoneNumberAccount> _PhoneNumberAccounts;
		
		private EntitySet<EmailAccount> _EmailAccounts;
		
		private EntitySet<AccountCollection> _AccountCollections;
		
		private EntitySet<DocumentAccount> _DocumentAccounts;
		
		private EntitySet<AccountStatusChange> _AccountStatusChanges;
		
		private EntityRef<AccountStatus> _AccountStatus;
		
		private EntityRef<FieldSalesManager> _FieldSalesManager;
		
		private EntityRef<User> _User;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountStatusIdChanging(System.Nullable<int> value);
    partial void OnAccountStatusIdChanged();
    partial void OnAccountTypeIdChanging(int value);
    partial void OnAccountTypeIdChanged();
    partial void OnOrganizationIdChanging(int value);
    partial void OnOrganizationIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnFmIdChanging(string value);
    partial void OnFmIdChanged();
    partial void OnFulfAccountIdChanging(System.Nullable<int> value);
    partial void OnFulfAccountIdChanged();
    partial void OnARCUSTChanging(string value);
    partial void OnARCUSTChanged();
    partial void OnARCUST_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnARCUST_UpdateDateChanged();
    partial void OnTaxExemptionNumberChanging(string value);
    partial void OnTaxExemptionNumberChanged();
    partial void OnTaxExemptionExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaxExemptionExpirationDateChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnDtsFlagpoleInstanceChanging(System.Nullable<int> value);
    partial void OnDtsFlagpoleInstanceChanged();
    partial void OnDtsCAccountIdChanging(System.Nullable<int> value);
    partial void OnDtsCAccountIdChanged();
    #endregion
		
		public Account()
		{
			this._Campains = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campains), new Action<Campaign>(this.detach_Campains));
			this._PostalAddressAccounts = new EntitySet<PostalAddressAccount>(new Action<PostalAddressAccount>(this.attach_PostalAddressAccounts), new Action<PostalAddressAccount>(this.detach_PostalAddressAccounts));
			this._PhoneNumberAccounts = new EntitySet<PhoneNumberAccount>(new Action<PhoneNumberAccount>(this.attach_PhoneNumberAccounts), new Action<PhoneNumberAccount>(this.detach_PhoneNumberAccounts));
			this._EmailAccounts = new EntitySet<EmailAccount>(new Action<EmailAccount>(this.attach_EmailAccounts), new Action<EmailAccount>(this.detach_EmailAccounts));
			this._AccountCollections = new EntitySet<AccountCollection>(new Action<AccountCollection>(this.attach_AccountCollections), new Action<AccountCollection>(this.detach_AccountCollections));
			this._DocumentAccounts = new EntitySet<DocumentAccount>(new Action<DocumentAccount>(this.attach_DocumentAccounts), new Action<DocumentAccount>(this.detach_DocumentAccounts));
			this._AccountStatusChanges = new EntitySet<AccountStatusChange>(new Action<AccountStatusChange>(this.attach_AccountStatusChanges), new Action<AccountStatusChange>(this.detach_AccountStatusChanges));
			this._AccountStatus = default(EntityRef<AccountStatus>);
			this._FieldSalesManager = default(EntityRef<FieldSalesManager>);
			this._User = default(EntityRef<User>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[Column(Name="account_id", Storage="_account_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="account_name", Storage="_account_name", DbType="VarChar(100)")]
		public string AccountName
		{
			get
			{
				return this._account_name;
			}
			set
			{
				if ((this._account_name != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._account_name = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[Column(Name="account_status_id", Storage="_account_status_id", DbType="Int")]
		public System.Nullable<int> AccountStatusId
		{
			get
			{
				return this._account_status_id;
			}
			set
			{
				if ((this._account_status_id != value))
				{
					this.OnAccountStatusIdChanging(value);
					this.SendPropertyChanging();
					this._account_status_id = value;
					this.SendPropertyChanged("AccountStatusId");
					this.OnAccountStatusIdChanged();
				}
			}
		}
		
		[Column(Name="account_type_id", Storage="_account_type_id", DbType="Int NOT NULL")]
		public int AccountTypeId
		{
			get
			{
				return this._account_type_id;
			}
			set
			{
				if ((this._account_type_id != value))
				{
					this.OnAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._account_type_id = value;
					this.SendPropertyChanged("AccountTypeId");
					this.OnAccountTypeIdChanged();
				}
			}
		}
		
		[Column(Name="organization_id", Storage="_organization_id", DbType="Int NOT NULL")]
		public int OrganizationId
		{
			get
			{
				return this._organization_id;
			}
			set
			{
				if ((this._organization_id != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._organization_id = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[Column(Name="customer_id", Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[Column(Name="fm_id", Storage="_fm_id", DbType="VarChar(4)")]
		public string FmId
		{
			get
			{
				return this._fm_id;
			}
			set
			{
				if ((this._fm_id != value))
				{
					this.OnFmIdChanging(value);
					this.SendPropertyChanging();
					this._fm_id = value;
					this.SendPropertyChanged("FmId");
					this.OnFmIdChanged();
				}
			}
		}
		
		[Column(Name="fulf_account_id", Storage="_fulf_account_id", DbType="Int")]
		public System.Nullable<int> FulfAccountId
		{
			get
			{
				return this._fulf_account_id;
			}
			set
			{
				if ((this._fulf_account_id != value))
				{
					this.OnFulfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._fulf_account_id = value;
					this.SendPropertyChanged("FulfAccountId");
					this.OnFulfAccountIdChanged();
				}
			}
		}
		
		[Column(Storage="_ARCUST", DbType="VarChar(50)")]
		public string ARCUST
		{
			get
			{
				return this._ARCUST;
			}
			set
			{
				if ((this._ARCUST != value))
				{
					this.OnARCUSTChanging(value);
					this.SendPropertyChanging();
					this._ARCUST = value;
					this.SendPropertyChanged("ARCUST");
					this.OnARCUSTChanged();
				}
			}
		}
		
		[Column(Name="ARCUST_update_date", Storage="_ARCUST_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> ARCUST_UpdateDate
		{
			get
			{
				return this._ARCUST_update_date;
			}
			set
			{
				if ((this._ARCUST_update_date != value))
				{
					this.OnARCUST_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._ARCUST_update_date = value;
					this.SendPropertyChanged("ARCUST_UpdateDate");
					this.OnARCUST_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="tax_exemption_number", Storage="_tax_exemption_number", DbType="VarChar(23)")]
		public string TaxExemptionNumber
		{
			get
			{
				return this._tax_exemption_number;
			}
			set
			{
				if ((this._tax_exemption_number != value))
				{
					this.OnTaxExemptionNumberChanging(value);
					this.SendPropertyChanging();
					this._tax_exemption_number = value;
					this.SendPropertyChanged("TaxExemptionNumber");
					this.OnTaxExemptionNumberChanged();
				}
			}
		}
		
		[Column(Name="tax_exemption_expiration_date", Storage="_tax_exemption_expiration_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaxExemptionExpirationDate
		{
			get
			{
				return this._tax_exemption_expiration_date;
			}
			set
			{
				if ((this._tax_exemption_expiration_date != value))
				{
					this.OnTaxExemptionExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._tax_exemption_expiration_date = value;
					this.SendPropertyChanged("TaxExemptionExpirationDate");
					this.OnTaxExemptionExpirationDateChanged();
				}
			}
		}
		
		[Column(Name="credit_limit", Storage="_credit_limit", DbType="Decimal(18,0) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._credit_limit;
			}
			set
			{
				if ((this._credit_limit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._credit_limit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[Column(Name="comments", Storage="_comments", DbType="VarChar(4000)")]
		public string Comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_deleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_create_user_id", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="dts_FlagpoleInstance", Storage="_dts_FlagpoleInstance", DbType="Int")]
		public System.Nullable<int> DtsFlagpoleInstance
		{
			get
			{
				return this._dts_FlagpoleInstance;
			}
			set
			{
				if ((this._dts_FlagpoleInstance != value))
				{
					this.OnDtsFlagpoleInstanceChanging(value);
					this.SendPropertyChanging();
					this._dts_FlagpoleInstance = value;
					this.SendPropertyChanged("DtsFlagpoleInstance");
					this.OnDtsFlagpoleInstanceChanged();
				}
			}
		}
		
		[Column(Name="dts_CAccountId", Storage="_dts_CAccountId", DbType="Int")]
		public System.Nullable<int> DtsCAccountId
		{
			get
			{
				return this._dts_CAccountId;
			}
			set
			{
				if ((this._dts_CAccountId != value))
				{
					this.OnDtsCAccountIdChanging(value);
					this.SendPropertyChanging();
					this._dts_CAccountId = value;
					this.SendPropertyChanged("DtsCAccountId");
					this.OnDtsCAccountIdChanged();
				}
			}
		}
		
		[Association(Name="Account_Campaign", Storage="_Campains", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campains;
			}
			set
			{
				this._Campains.Assign(value);
			}
		}
		
		[Association(Name="Account_PostalAddressAccount", Storage="_PostalAddressAccounts", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<PostalAddressAccount> PostalAddressAccounts
		{
			get
			{
				return this._PostalAddressAccounts;
			}
			set
			{
				this._PostalAddressAccounts.Assign(value);
			}
		}
		
		[Association(Name="Account_PhoneNumberAccount", Storage="_PhoneNumberAccounts", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<PhoneNumberAccount> PhoneNumberAccounts
		{
			get
			{
				return this._PhoneNumberAccounts;
			}
			set
			{
				this._PhoneNumberAccounts.Assign(value);
			}
		}
		
		[Association(Name="Account_EmailAccount", Storage="_EmailAccounts", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<EmailAccount> EmailAccounts
		{
			get
			{
				return this._EmailAccounts;
			}
			set
			{
				this._EmailAccounts.Assign(value);
			}
		}
		
		[Association(Name="Account_AccountCollection", Storage="_AccountCollections", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<AccountCollection> AccountCollections
		{
			get
			{
				return this._AccountCollections;
			}
			set
			{
				this._AccountCollections.Assign(value);
			}
		}
		
		[Association(Name="Account_DocumentAccount", Storage="_DocumentAccounts", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<DocumentAccount> DocumentAccounts
		{
			get
			{
				return this._DocumentAccounts;
			}
			set
			{
				this._DocumentAccounts.Assign(value);
			}
		}
		
		[Association(Name="Account_AccountStatusChange", Storage="_AccountStatusChanges", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<AccountStatusChange> AccountStatusChanges
		{
			get
			{
				return this._AccountStatusChanges;
			}
			set
			{
				this._AccountStatusChanges.Assign(value);
			}
		}
		
		[Association(Name="AccountStatus_Account", Storage="_AccountStatus", ThisKey="AccountStatusId", OtherKey="AccountStatusId", IsForeignKey=true)]
		public AccountStatus AccountStatus
		{
			get
			{
				return this._AccountStatus.Entity;
			}
			set
			{
				AccountStatus previousValue = this._AccountStatus.Entity;
				if (((previousValue != value) 
							|| (this._AccountStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountStatus.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._AccountStatus.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._account_status_id = value.AccountStatusId;
					}
					else
					{
						this._account_status_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountStatus");
				}
			}
		}
		
		[Association(Name="FieldSalesManager_Account", Storage="_FieldSalesManager", ThisKey="FmId", OtherKey="FmId", IsForeignKey=true)]
		public FieldSalesManager FieldSalesManager
		{
			get
			{
				return this._FieldSalesManager.Entity;
			}
			set
			{
				FieldSalesManager previousValue = this._FieldSalesManager.Entity;
				if (((previousValue != value) 
							|| (this._FieldSalesManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldSalesManager.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._FieldSalesManager.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._fm_id = value.FmId;
					}
					else
					{
						this._fm_id = default(string);
					}
					this.SendPropertyChanged("FieldSalesManager");
				}
			}
		}
		
		[Association(Name="User_Account", Storage="_User", ThisKey="CreateUserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._create_user_id = value.UserId;
					}
					else
					{
						this._create_user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[Association(Name="Organization_Account", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._organization_id = value.OrganizationId;
					}
					else
					{
						this._organization_id = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campains(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Campains(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_PostalAddressAccounts(PostalAddressAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PostalAddressAccounts(PostalAddressAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_PhoneNumberAccounts(PhoneNumberAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PhoneNumberAccounts(PhoneNumberAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_EmailAccounts(EmailAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_EmailAccounts(EmailAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountCollections(AccountCollection entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountCollections(AccountCollection entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_DocumentAccounts(DocumentAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_DocumentAccounts(DocumentAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountStatusChanges(AccountStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountStatusChanges(AccountStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[Table(Name="dbo.account_status")]
	public partial class AccountStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountStatusId;
		
		private string _AccountStatusName;
		
		private string _ColorCode;
		
		private System.Nullable<int> _StatusCategoryId;
		
		private string _Description;
		
		private string _ShortDescription;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<AccountStatusChange> _AccountStatusChanges;
		
		private EntityRef<StatusCategory> _StatusCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountStatusIdChanging(int value);
    partial void OnAccountStatusIdChanged();
    partial void OnAccountStatusNameChanging(string value);
    partial void OnAccountStatusNameChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnStatusCategoryIdChanging(System.Nullable<int> value);
    partial void OnStatusCategoryIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    #endregion
		
		public AccountStatus()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._AccountStatusChanges = new EntitySet<AccountStatusChange>(new Action<AccountStatusChange>(this.attach_AccountStatusChanges), new Action<AccountStatusChange>(this.detach_AccountStatusChanges));
			this._StatusCategory = default(EntityRef<StatusCategory>);
			OnCreated();
		}
		
		[Column(Name="account_status_id", Storage="_AccountStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountStatusId
		{
			get
			{
				return this._AccountStatusId;
			}
			set
			{
				if ((this._AccountStatusId != value))
				{
					this.OnAccountStatusIdChanging(value);
					this.SendPropertyChanging();
					this._AccountStatusId = value;
					this.SendPropertyChanged("AccountStatusId");
					this.OnAccountStatusIdChanged();
				}
			}
		}
		
		[Column(Name="account_status_name", Storage="_AccountStatusName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountStatusName
		{
			get
			{
				return this._AccountStatusName;
			}
			set
			{
				if ((this._AccountStatusName != value))
				{
					this.OnAccountStatusNameChanging(value);
					this.SendPropertyChanging();
					this._AccountStatusName = value;
					this.SendPropertyChanged("AccountStatusName");
					this.OnAccountStatusNameChanged();
				}
			}
		}
		
		[Column(Name="color_code", Storage="_ColorCode", DbType="VarChar(50)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Name="status_category_id", Storage="_StatusCategoryId", DbType="Int")]
		public System.Nullable<int> StatusCategoryId
		{
			get
			{
				return this._StatusCategoryId;
			}
			set
			{
				if ((this._StatusCategoryId != value))
				{
					this.OnStatusCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._StatusCategoryId = value;
					this.SendPropertyChanged("StatusCategoryId");
					this.OnStatusCategoryIdChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="short_description", Storage="_ShortDescription", DbType="VarChar(50)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[Association(Name="AccountStatus_Account", Storage="_Accounts", ThisKey="AccountStatusId", OtherKey="AccountStatusId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[Association(Name="AccountStatus_AccountStatusChange", Storage="_AccountStatusChanges", ThisKey="AccountStatusId", OtherKey="AccountStatusId")]
		public EntitySet<AccountStatusChange> AccountStatusChanges
		{
			get
			{
				return this._AccountStatusChanges;
			}
			set
			{
				this._AccountStatusChanges.Assign(value);
			}
		}
		
		[Association(Name="StatusCategory_AccountStatus", Storage="_StatusCategory", ThisKey="StatusCategoryId", OtherKey="StatusCategoryId", IsForeignKey=true)]
		public StatusCategory StatusCategory
		{
			get
			{
				return this._StatusCategory.Entity;
			}
			set
			{
				StatusCategory previousValue = this._StatusCategory.Entity;
				if (((previousValue != value) 
							|| (this._StatusCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusCategory.Entity = null;
						previousValue.AccountStatus.Remove(this);
					}
					this._StatusCategory.Entity = value;
					if ((value != null))
					{
						value.AccountStatus.Add(this);
						this._StatusCategoryId = value.StatusCategoryId;
					}
					else
					{
						this._StatusCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StatusCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.AccountStatus = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.AccountStatus = null;
		}
		
		private void attach_AccountStatusChanges(AccountStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.AccountStatus = this;
		}
		
		private void detach_AccountStatusChanges(AccountStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.AccountStatus = null;
		}
	}
	
	[Table(Name="dbo.campaign")]
	public partial class Campaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampainId;
		
		private int _AccountId;
		
		private System.Nullable<int> _FulfCampainId;
		
		private int _ProgramTypeId;
		
		private System.Nullable<int> _WarehouseId;
		
		private string _CampainName;
		
		private string _FmId;
		
		private string _TaxExemptionNumber;
		
		private System.Nullable<System.DateTime> _TaxExemptionExpirationDate;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _FiscalYear;
		
		private int _Enrollment;
		
		private System.Nullable<decimal> _GoalEstimatedGross;
		
		private string _Arorbl;
		
		private string _Comments;
		
		private bool _Deleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private System.Nullable<int> _DtsCAccountId;
		
		private System.Nullable<int> _DtsCCAInstance;
		
		private System.Nullable<int> _TradeClassId;
		
		private System.Nullable<int> _FormId;
		
		private EntitySet<ProgramAgreementCampaign> _ProgramAgreementCampaigns;
		
		private EntitySet<PostalAddressCampaign> _PostalAddressCampaigns;
		
		private EntitySet<PhoneNumberCampaign> _PhoneNumberCampaigns;
		
		private EntitySet<EmailCampaign> _EmailCampaigns;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<QCAPOrder> _QCAPOrders;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<ProgramType> _ProgramType;
		
		private EntityRef<Form> _Form;
		
		private EntityRef<TradeClass> _TradeClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIdChanging(int value);
    partial void OnCampaignIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnFulfCampaginIdChanging(System.Nullable<int> value);
    partial void OnFulfCampaginIdChanged();
    partial void OnProgramTypeIdChanging(int value);
    partial void OnProgramTypeIdChanged();
    partial void OnWarehouseIdChanging(System.Nullable<int> value);
    partial void OnWarehouseIdChanged();
    partial void OnCampaignNameChanging(string value);
    partial void OnCampaignNameChanged();
    partial void OnFmIdChanging(string value);
    partial void OnFmIdChanged();
    partial void OnTaxExemptionNumberChanging(string value);
    partial void OnTaxExemptionNumberChanged();
    partial void OnTaxExemptionExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaxExemptionExpirationDateChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnFiscalYearChanging(int value);
    partial void OnFiscalYearChanged();
    partial void OnEnrollmentChanging(int value);
    partial void OnEnrollmentChanged();
    partial void OnGoalEstimatedGrossChanging(System.Nullable<decimal> value);
    partial void OnGoalEstimatedGrossChanged();
    partial void OnArorblChanging(string value);
    partial void OnArorblChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnDtsCAccountIdChanging(System.Nullable<int> value);
    partial void OnDtsCAccountIdChanged();
    partial void OnDtsCCAInstanceChanging(System.Nullable<int> value);
    partial void OnDtsCCAInstanceChanged();
    partial void OnTradeClassIdChanging(System.Nullable<int> value);
    partial void OnTradeClassIdChanged();
    partial void OnFormIdChanging(System.Nullable<int> value);
    partial void OnFormIdChanged();
    #endregion
		
		public Campaign()
		{
			this._ProgramAgreementCampaigns = new EntitySet<ProgramAgreementCampaign>(new Action<ProgramAgreementCampaign>(this.attach_ProgramAgreementCampaigns), new Action<ProgramAgreementCampaign>(this.detach_ProgramAgreementCampaigns));
			this._PostalAddressCampaigns = new EntitySet<PostalAddressCampaign>(new Action<PostalAddressCampaign>(this.attach_PostalAddressCampaigns), new Action<PostalAddressCampaign>(this.detach_PostalAddressCampaigns));
			this._PhoneNumberCampaigns = new EntitySet<PhoneNumberCampaign>(new Action<PhoneNumberCampaign>(this.attach_PhoneNumberCampaigns), new Action<PhoneNumberCampaign>(this.detach_PhoneNumberCampaigns));
			this._EmailCampaigns = new EntitySet<EmailCampaign>(new Action<EmailCampaign>(this.attach_EmailCampaigns), new Action<EmailCampaign>(this.detach_EmailCampaigns));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._QCAPOrders = new EntitySet<QCAPOrder>(new Action<QCAPOrder>(this.attach_QCAPOrders), new Action<QCAPOrder>(this.detach_QCAPOrders));
			this._Account = default(EntityRef<Account>);
			this._ProgramType = default(EntityRef<ProgramType>);
			this._Form = default(EntityRef<Form>);
			this._TradeClass = default(EntityRef<TradeClass>);
			OnCreated();
		}
		
		[Column(Name="campaign_id", Storage="_CampainId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CampaignId
		{
			get
			{
				return this._CampainId;
			}
			set
			{
				if ((this._CampainId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampainId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="account_id", Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="fulf_campaign_id", Storage="_FulfCampainId", DbType="Int")]
		public System.Nullable<int> FulfCampaginId
		{
			get
			{
				return this._FulfCampainId;
			}
			set
			{
				if ((this._FulfCampainId != value))
				{
					this.OnFulfCampaginIdChanging(value);
					this.SendPropertyChanging();
					this._FulfCampainId = value;
					this.SendPropertyChanged("FulfCampaginId");
					this.OnFulfCampaginIdChanged();
				}
			}
		}
		
		[Column(Name="program_type_id", Storage="_ProgramTypeId", DbType="Int NOT NULL")]
		public int ProgramTypeId
		{
			get
			{
				return this._ProgramTypeId;
			}
			set
			{
				if ((this._ProgramTypeId != value))
				{
					this.OnProgramTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramTypeId = value;
					this.SendPropertyChanged("ProgramTypeId");
					this.OnProgramTypeIdChanged();
				}
			}
		}
		
		[Column(Name="warehouse_id", Storage="_WarehouseId", DbType="Int")]
		public System.Nullable<int> WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[Column(Name="campaign_name", Storage="_CampainName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CampaignName
		{
			get
			{
				return this._CampainName;
			}
			set
			{
				if ((this._CampainName != value))
				{
					this.OnCampaignNameChanging(value);
					this.SendPropertyChanging();
					this._CampainName = value;
					this.SendPropertyChanged("CampaignName");
					this.OnCampaignNameChanged();
				}
			}
		}
		
		[Column(Name="fm_id", Storage="_FmId", DbType="VarChar(4)")]
		public string FmId
		{
			get
			{
				return this._FmId;
			}
			set
			{
				if ((this._FmId != value))
				{
					this.OnFmIdChanging(value);
					this.SendPropertyChanging();
					this._FmId = value;
					this.SendPropertyChanged("FmId");
					this.OnFmIdChanged();
				}
			}
		}
		
		[Column(Name="tax_exemption_number", Storage="_TaxExemptionNumber", DbType="VarChar(23)")]
		public string TaxExemptionNumber
		{
			get
			{
				return this._TaxExemptionNumber;
			}
			set
			{
				if ((this._TaxExemptionNumber != value))
				{
					this.OnTaxExemptionNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxExemptionNumber = value;
					this.SendPropertyChanged("TaxExemptionNumber");
					this.OnTaxExemptionNumberChanged();
				}
			}
		}
		
		[Column(Name="tax_exemption_expiration_date", Storage="_TaxExemptionExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaxExemptionExpirationDate
		{
			get
			{
				return this._TaxExemptionExpirationDate;
			}
			set
			{
				if ((this._TaxExemptionExpirationDate != value))
				{
					this.OnTaxExemptionExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._TaxExemptionExpirationDate = value;
					this.SendPropertyChanged("TaxExemptionExpirationDate");
					this.OnTaxExemptionExpirationDateChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Name="fiscal_year", Storage="_FiscalYear", DbType="Int NOT NULL")]
		public int FiscalYear
		{
			get
			{
				return this._FiscalYear;
			}
			set
			{
				if ((this._FiscalYear != value))
				{
					this.OnFiscalYearChanging(value);
					this.SendPropertyChanging();
					this._FiscalYear = value;
					this.SendPropertyChanged("FiscalYear");
					this.OnFiscalYearChanged();
				}
			}
		}
		
		[Column(Name="enrollment", Storage="_Enrollment", DbType="Int NOT NULL")]
		public int Enrollment
		{
			get
			{
				return this._Enrollment;
			}
			set
			{
				if ((this._Enrollment != value))
				{
					this.OnEnrollmentChanging(value);
					this.SendPropertyChanging();
					this._Enrollment = value;
					this.SendPropertyChanged("Enrollment");
					this.OnEnrollmentChanged();
				}
			}
		}
		
		[Column(Name="goal_estimated_gross", Storage="_GoalEstimatedGross", DbType="Money")]
		public System.Nullable<decimal> GoalEstimatedGross
		{
			get
			{
				return this._GoalEstimatedGross;
			}
			set
			{
				if ((this._GoalEstimatedGross != value))
				{
					this.OnGoalEstimatedGrossChanging(value);
					this.SendPropertyChanging();
					this._GoalEstimatedGross = value;
					this.SendPropertyChanged("GoalEstimatedGross");
					this.OnGoalEstimatedGrossChanged();
				}
			}
		}
		
		[Column(Name="ARORBL", Storage="_Arorbl", DbType="VarChar(50)")]
		public string Arorbl
		{
			get
			{
				return this._Arorbl;
			}
			set
			{
				if ((this._Arorbl != value))
				{
					this.OnArorblChanging(value);
					this.SendPropertyChanging();
					this._Arorbl = value;
					this.SendPropertyChanged("Arorbl");
					this.OnArorblChanged();
				}
			}
		}
		
		[Column(Name="comments", Storage="_Comments", DbType="VarChar(4000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="dts_CAccountId", Storage="_DtsCAccountId", DbType="Int")]
		public System.Nullable<int> DtsCAccountId
		{
			get
			{
				return this._DtsCAccountId;
			}
			set
			{
				if ((this._DtsCAccountId != value))
				{
					this.OnDtsCAccountIdChanging(value);
					this.SendPropertyChanging();
					this._DtsCAccountId = value;
					this.SendPropertyChanged("DtsCAccountId");
					this.OnDtsCAccountIdChanged();
				}
			}
		}
		
		[Column(Name="dts_CCAInstance", Storage="_DtsCCAInstance", DbType="Int")]
		public System.Nullable<int> DtsCCAInstance
		{
			get
			{
				return this._DtsCCAInstance;
			}
			set
			{
				if ((this._DtsCCAInstance != value))
				{
					this.OnDtsCCAInstanceChanging(value);
					this.SendPropertyChanging();
					this._DtsCCAInstance = value;
					this.SendPropertyChanged("DtsCCAInstance");
					this.OnDtsCCAInstanceChanged();
				}
			}
		}
		
		[Column(Name="trade_class_id", Storage="_TradeClassId", DbType="Int")]
		public System.Nullable<int> TradeClassId
		{
			get
			{
				return this._TradeClassId;
			}
			set
			{
				if ((this._TradeClassId != value))
				{
					this.OnTradeClassIdChanging(value);
					this.SendPropertyChanging();
					this._TradeClassId = value;
					this.SendPropertyChanged("TradeClassId");
					this.OnTradeClassIdChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int")]
		public System.Nullable<int> FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Association(Name="Campaign_ProgramAgreementCampaign", Storage="_ProgramAgreementCampaigns", ThisKey="CampaignId", OtherKey="CampaignId")]
		public EntitySet<ProgramAgreementCampaign> ProgramAgreementCampaigns
		{
			get
			{
				return this._ProgramAgreementCampaigns;
			}
			set
			{
				this._ProgramAgreementCampaigns.Assign(value);
			}
		}
		
		[Association(Name="Campaign_PostalAddressCampaign", Storage="_PostalAddressCampaigns", ThisKey="CampaignId", OtherKey="CampaignId")]
		public EntitySet<PostalAddressCampaign> PostalAddressCampaigns
		{
			get
			{
				return this._PostalAddressCampaigns;
			}
			set
			{
				this._PostalAddressCampaigns.Assign(value);
			}
		}
		
		[Association(Name="Campaign_PhoneNumberCampaign", Storage="_PhoneNumberCampaigns", ThisKey="CampaignId", OtherKey="CampaignId")]
		public EntitySet<PhoneNumberCampaign> PhoneNumberCampaigns
		{
			get
			{
				return this._PhoneNumberCampaigns;
			}
			set
			{
				this._PhoneNumberCampaigns.Assign(value);
			}
		}
		
		[Association(Name="Campaign_EmailCampaign", Storage="_EmailCampaigns", ThisKey="CampaignId", OtherKey="CampaignId")]
		public EntitySet<EmailCampaign> EmailCampaigns
		{
			get
			{
				return this._EmailCampaigns;
			}
			set
			{
				this._EmailCampaigns.Assign(value);
			}
		}
		
		[Association(Name="Campaign_Order", Storage="_Orders", ThisKey="CampaignId", OtherKey="CampaignId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[Association(Name="Campaign_QCAPOrder", Storage="_QCAPOrders", ThisKey="CampaignId", OtherKey="campaign_id")]
		public EntitySet<QCAPOrder> QCAPOrders
		{
			get
			{
				return this._QCAPOrders;
			}
			set
			{
				this._QCAPOrders.Assign(value);
			}
		}
		
		[Association(Name="Account_Campaign", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[Association(Name="ProgramType_Campaign", Storage="_ProgramType", ThisKey="ProgramTypeId", OtherKey="ProgramTypeId", IsForeignKey=true)]
		public ProgramType ProgramType
		{
			get
			{
				return this._ProgramType.Entity;
			}
			set
			{
				ProgramType previousValue = this._ProgramType.Entity;
				if (((previousValue != value) 
							|| (this._ProgramType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramType.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._ProgramType.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._ProgramTypeId = value.ProgramTypeId;
					}
					else
					{
						this._ProgramTypeId = default(int);
					}
					this.SendPropertyChanged("ProgramType");
				}
			}
		}
		
		[Association(Name="Form_Campaign", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		[Association(Name="TradeClass_Campaign", Storage="_TradeClass", ThisKey="TradeClassId", OtherKey="TradeClassId", IsForeignKey=true)]
		public TradeClass TradeClass
		{
			get
			{
				return this._TradeClass.Entity;
			}
			set
			{
				TradeClass previousValue = this._TradeClass.Entity;
				if (((previousValue != value) 
							|| (this._TradeClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TradeClass.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._TradeClass.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._TradeClassId = value.TradeClassId;
					}
					else
					{
						this._TradeClassId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TradeClass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProgramAgreementCampaigns(ProgramAgreementCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_ProgramAgreementCampaigns(ProgramAgreementCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_PostalAddressCampaigns(PostalAddressCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_PostalAddressCampaigns(PostalAddressCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_PhoneNumberCampaigns(PhoneNumberCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_PhoneNumberCampaigns(PhoneNumberCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_EmailCampaigns(EmailCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_EmailCampaigns(EmailCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_QCAPOrders(QCAPOrder entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_QCAPOrders(QCAPOrder entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
	}
	
	[Table(Name="dbo.field_sales_manager")]
	public partial class FieldSalesManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FieldSalesManagerId;
		
		private string _FmId;
		
		private System.Nullable<int> _UserId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _CUserProfileInstance;
		
		private bool _Deleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntitySet<Account> _Accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldSalesManagerIdChanging(int value);
    partial void OnFieldSalesManagerIdChanged();
    partial void OnFmIdChanging(string value);
    partial void OnFmIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnCUserProfileInstanceChanging(System.Nullable<int> value);
    partial void OnCUserProfileInstanceChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public FieldSalesManager()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			OnCreated();
		}
		
		[Column(Name="field_sales_manager_id", Storage="_FieldSalesManagerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FieldSalesManagerId
		{
			get
			{
				return this._FieldSalesManagerId;
			}
			set
			{
				if ((this._FieldSalesManagerId != value))
				{
					this.OnFieldSalesManagerIdChanging(value);
					this.SendPropertyChanging();
					this._FieldSalesManagerId = value;
					this.SendPropertyChanged("FieldSalesManagerId");
					this.OnFieldSalesManagerIdChanged();
				}
			}
		}
		
		[Column(Name="fm_id", Storage="_FmId", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string FmId
		{
			get
			{
				return this._FmId;
			}
			set
			{
				if ((this._FmId != value))
				{
					this.OnFmIdChanging(value);
					this.SendPropertyChanging();
					this._FmId = value;
					this.SendPropertyChanged("FmId");
					this.OnFmIdChanged();
				}
			}
		}
		
		[Column(Name="user_id", Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Name="first_name", Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Name="last_name", Storage="_LastName", DbType="VarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Name="customer_id", Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[Column(Name="CUserProfile_Instance", Storage="_CUserProfileInstance", DbType="Int")]
		public System.Nullable<int> CUserProfileInstance
		{
			get
			{
				return this._CUserProfileInstance;
			}
			set
			{
				if ((this._CUserProfileInstance != value))
				{
					this.OnCUserProfileInstanceChanging(value);
					this.SendPropertyChanging();
					this._CUserProfileInstance = value;
					this.SendPropertyChanged("CUserProfileInstance");
					this.OnCUserProfileInstanceChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="FieldSalesManager_Account", Storage="_Accounts", ThisKey="FmId", OtherKey="FmId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.FieldSalesManager = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.FieldSalesManager = null;
		}
	}
	
	[Table(Name="dbo.program_type")]
	public partial class ProgramType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramTypeId;
		
		private string _ProgramTypeName;
		
		private System.Nullable<bool> _Enabled;
		
		private EntitySet<Campaign> _Campains;
		
		private EntitySet<Form> _Forms;
		
		private EntitySet<Program> _Programs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramTypeIdChanging(int value);
    partial void OnProgramTypeIdChanged();
    partial void OnProgramTypeNameChanging(string value);
    partial void OnProgramTypeNameChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public ProgramType()
		{
			this._Campains = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campains), new Action<Campaign>(this.detach_Campains));
			this._Forms = new EntitySet<Form>(new Action<Form>(this.attach_Forms), new Action<Form>(this.detach_Forms));
			this._Programs = new EntitySet<Program>(new Action<Program>(this.attach_Programs), new Action<Program>(this.detach_Programs));
			OnCreated();
		}
		
		[Column(Name="program_type_id", Storage="_ProgramTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramTypeId
		{
			get
			{
				return this._ProgramTypeId;
			}
			set
			{
				if ((this._ProgramTypeId != value))
				{
					this.OnProgramTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramTypeId = value;
					this.SendPropertyChanged("ProgramTypeId");
					this.OnProgramTypeIdChanged();
				}
			}
		}
		
		[Column(Name="program_type_name", Storage="_ProgramTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProgramTypeName
		{
			get
			{
				return this._ProgramTypeName;
			}
			set
			{
				if ((this._ProgramTypeName != value))
				{
					this.OnProgramTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramTypeName = value;
					this.SendPropertyChanged("ProgramTypeName");
					this.OnProgramTypeNameChanged();
				}
			}
		}
		
		[Column(Name="enabled", Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[Association(Name="ProgramType_Campaign", Storage="_Campains", ThisKey="ProgramTypeId", OtherKey="ProgramTypeId")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campains;
			}
			set
			{
				this._Campains.Assign(value);
			}
		}
		
		[Association(Name="ProgramType_Form", Storage="_Forms", ThisKey="ProgramTypeId", OtherKey="ProgramTypeId")]
		public EntitySet<Form> Forms
		{
			get
			{
				return this._Forms;
			}
			set
			{
				this._Forms.Assign(value);
			}
		}
		
		[Association(Name="ProgramType_Program", Storage="_Programs", ThisKey="ProgramTypeId", OtherKey="ProgramTypeId")]
		public EntitySet<Program> Programs
		{
			get
			{
				return this._Programs;
			}
			set
			{
				this._Programs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campains(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.ProgramType = this;
		}
		
		private void detach_Campains(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.ProgramType = null;
		}
		
		private void attach_Forms(Form entity)
		{
			this.SendPropertyChanging();
			entity.ProgramType = this;
		}
		
		private void detach_Forms(Form entity)
		{
			this.SendPropertyChanging();
			entity.ProgramType = null;
		}
		
		private void attach_Programs(Program entity)
		{
			this.SendPropertyChanging();
			entity.ProgramType = this;
		}
		
		private void detach_Programs(Program entity)
		{
			this.SendPropertyChanging();
			entity.ProgramType = null;
		}
	}
	
	[Table(Name="dbo.postal_address_account")]
	public partial class PostalAddressAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostalAddressAccountId;
		
		private int _PostalAddressId;
		
		private int _AccountId;
		
		private int _PostalAddressTypeId;
		
		private bool _Deleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<PostalAddress> _PostalAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostalAddressAccountIdChanging(int value);
    partial void OnPostalAddressAccountIdChanged();
    partial void OnPostalAddressIdChanging(int value);
    partial void OnPostalAddressIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnPostalAddressTypeIdChanging(int value);
    partial void OnPostalAddressTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PostalAddressAccount()
		{
			this._Account = default(EntityRef<Account>);
			this._PostalAddress = default(EntityRef<PostalAddress>);
			OnCreated();
		}
		
		[Column(Name="postal_address_account_id", Storage="_PostalAddressAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PostalAddressAccountId
		{
			get
			{
				return this._PostalAddressAccountId;
			}
			set
			{
				if ((this._PostalAddressAccountId != value))
				{
					this.OnPostalAddressAccountIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressAccountId = value;
					this.SendPropertyChanged("PostalAddressAccountId");
					this.OnPostalAddressAccountIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_id", Storage="_PostalAddressId", DbType="Int NOT NULL")]
		public int PostalAddressId
		{
			get
			{
				return this._PostalAddressId;
			}
			set
			{
				if ((this._PostalAddressId != value))
				{
					this.OnPostalAddressIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressId = value;
					this.SendPropertyChanged("PostalAddressId");
					this.OnPostalAddressIdChanged();
				}
			}
		}
		
		[Column(Name="account_id", Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_type_id", Storage="_PostalAddressTypeId", DbType="Int NOT NULL")]
		public int PostalAddressTypeId
		{
			get
			{
				return this._PostalAddressTypeId;
			}
			set
			{
				if ((this._PostalAddressTypeId != value))
				{
					this.OnPostalAddressTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressTypeId = value;
					this.SendPropertyChanged("PostalAddressTypeId");
					this.OnPostalAddressTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Account_PostalAddressAccount", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PostalAddressAccounts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PostalAddressAccounts.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[Association(Name="PostalAddress_PostalAddressAccount", Storage="_PostalAddress", ThisKey="PostalAddressId", OtherKey="PostalAddressId", IsForeignKey=true)]
		public PostalAddress PostalAddress
		{
			get
			{
				return this._PostalAddress.Entity;
			}
			set
			{
				PostalAddress previousValue = this._PostalAddress.Entity;
				if (((previousValue != value) 
							|| (this._PostalAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostalAddress.Entity = null;
						previousValue.PostalAddressAccounts.Remove(this);
					}
					this._PostalAddress.Entity = value;
					if ((value != null))
					{
						value.PostalAddressAccounts.Add(this);
						this._PostalAddressId = value.PostalAddressId;
					}
					else
					{
						this._PostalAddressId = default(int);
					}
					this.SendPropertyChanged("PostalAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.postal_address")]
	public partial class PostalAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostalAddressId;
		
		private string _Name;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _Zip;
		
		private string _Zip4;
		
		private string _County;
		
		private string _SubdivisionCode;
		
		private System.Nullable<bool> _ResidentialArea;
		
		private int _Deleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntitySet<PostalAddressAccount> _PostalAddressAccounts;
		
		private EntitySet<PostalAddressOrganization> _PostalAddressOrganizations;
		
		private EntitySet<PostalAddressCampaign> _PostalAddressCampaigns;
		
		private EntitySet<PostalAddressProgramAgreement> _PostalAddressProgramAgreements;
		
		private EntitySet<Warehouse> _Warehouses;
		
		private EntitySet<ShipmentGroup> _ShipmentGroups;
		
		private EntityRef<Subdivision> _Subdivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostalAddressIdChanging(int value);
    partial void OnPostalAddressIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnZip4Changing(string value);
    partial void OnZip4Changed();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnSubdivisionCodeChanging(string value);
    partial void OnSubdivisionCodeChanged();
    partial void OnIsResidentialAreaChanging(System.Nullable<bool> value);
    partial void OnIsResidentialAreaChanged();
    partial void OnIsDeletedChanging(int value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PostalAddress()
		{
			this._PostalAddressAccounts = new EntitySet<PostalAddressAccount>(new Action<PostalAddressAccount>(this.attach_PostalAddressAccounts), new Action<PostalAddressAccount>(this.detach_PostalAddressAccounts));
			this._PostalAddressOrganizations = new EntitySet<PostalAddressOrganization>(new Action<PostalAddressOrganization>(this.attach_PostalAddressOrganizations), new Action<PostalAddressOrganization>(this.detach_PostalAddressOrganizations));
			this._PostalAddressCampaigns = new EntitySet<PostalAddressCampaign>(new Action<PostalAddressCampaign>(this.attach_PostalAddressCampaigns), new Action<PostalAddressCampaign>(this.detach_PostalAddressCampaigns));
			this._PostalAddressProgramAgreements = new EntitySet<PostalAddressProgramAgreement>(new Action<PostalAddressProgramAgreement>(this.attach_PostalAddressProgramAgreements), new Action<PostalAddressProgramAgreement>(this.detach_PostalAddressProgramAgreements));
			this._Warehouses = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_Warehouses), new Action<Warehouse>(this.detach_Warehouses));
			this._ShipmentGroups = new EntitySet<ShipmentGroup>(new Action<ShipmentGroup>(this.attach_ShipmentGroups), new Action<ShipmentGroup>(this.detach_ShipmentGroups));
			this._Subdivision = default(EntityRef<Subdivision>);
			OnCreated();
		}
		
		[Column(Name="postal_address_id", Storage="_PostalAddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PostalAddressId
		{
			get
			{
				return this._PostalAddressId;
			}
			set
			{
				if ((this._PostalAddressId != value))
				{
					this.OnPostalAddressIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressId = value;
					this.SendPropertyChanged("PostalAddressId");
					this.OnPostalAddressIdChanged();
				}
			}
		}
		
		[Column(Name="name", Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Name="first_name", Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Name="last_name", Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Name="address1", Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[Column(Name="address2", Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[Column(Name="city", Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Name="zip", Storage="_Zip", DbType="VarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[Column(Name="zip4", Storage="_Zip4", DbType="VarChar(4)")]
		public string Zip4
		{
			get
			{
				return this._Zip4;
			}
			set
			{
				if ((this._Zip4 != value))
				{
					this.OnZip4Changing(value);
					this.SendPropertyChanging();
					this._Zip4 = value;
					this.SendPropertyChanged("Zip4");
					this.OnZip4Changed();
				}
			}
		}
		
		[Column(Name="county", Storage="_County", DbType="VarChar(50)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[Column(Name="subdivision_code", Storage="_SubdivisionCode", DbType="NVarChar(7)")]
		public string SubdivisionCode
		{
			get
			{
				return this._SubdivisionCode;
			}
			set
			{
				if ((this._SubdivisionCode != value))
				{
					this.OnSubdivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._SubdivisionCode = value;
					this.SendPropertyChanged("SubdivisionCode");
					this.OnSubdivisionCodeChanged();
				}
			}
		}
		
		[Column(Name="residential_area", Storage="_ResidentialArea", DbType="Bit")]
		public System.Nullable<bool> IsResidentialArea
		{
			get
			{
				return this._ResidentialArea;
			}
			set
			{
				if ((this._ResidentialArea != value))
				{
					this.OnIsResidentialAreaChanging(value);
					this.SendPropertyChanging();
					this._ResidentialArea = value;
					this.SendPropertyChanged("IsResidentialArea");
					this.OnIsResidentialAreaChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_Deleted", DbType="Int NOT NULL")]
		public int IsDeleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="PostalAddress_PostalAddressAccount", Storage="_PostalAddressAccounts", ThisKey="PostalAddressId", OtherKey="PostalAddressId")]
		public EntitySet<PostalAddressAccount> PostalAddressAccounts
		{
			get
			{
				return this._PostalAddressAccounts;
			}
			set
			{
				this._PostalAddressAccounts.Assign(value);
			}
		}
		
		[Association(Name="PostalAddress_PostalAddressOrganization", Storage="_PostalAddressOrganizations", ThisKey="PostalAddressId", OtherKey="PostalAddressId")]
		public EntitySet<PostalAddressOrganization> PostalAddressOrganizations
		{
			get
			{
				return this._PostalAddressOrganizations;
			}
			set
			{
				this._PostalAddressOrganizations.Assign(value);
			}
		}
		
		[Association(Name="PostalAddress_PostalAddressCampaign", Storage="_PostalAddressCampaigns", ThisKey="PostalAddressId", OtherKey="PostalAddressId")]
		public EntitySet<PostalAddressCampaign> PostalAddressCampaigns
		{
			get
			{
				return this._PostalAddressCampaigns;
			}
			set
			{
				this._PostalAddressCampaigns.Assign(value);
			}
		}
		
		[Association(Name="PostalAddress_PostalAddressProgramAgreement", Storage="_PostalAddressProgramAgreements", ThisKey="PostalAddressId", OtherKey="PostalAddressId")]
		public EntitySet<PostalAddressProgramAgreement> PostalAddressProgramAgreements
		{
			get
			{
				return this._PostalAddressProgramAgreements;
			}
			set
			{
				this._PostalAddressProgramAgreements.Assign(value);
			}
		}
		
		[Association(Name="PostalAddress_Warehouse", Storage="_Warehouses", ThisKey="PostalAddressId", OtherKey="PostalAddressId")]
		public EntitySet<Warehouse> Warehouses
		{
			get
			{
				return this._Warehouses;
			}
			set
			{
				this._Warehouses.Assign(value);
			}
		}
		
		[Association(Name="PostalAddress_ShipmentGroup", Storage="_ShipmentGroups", ThisKey="PostalAddressId", OtherKey="ShippingPostalAddressId")]
		public EntitySet<ShipmentGroup> ShipmentGroups
		{
			get
			{
				return this._ShipmentGroups;
			}
			set
			{
				this._ShipmentGroups.Assign(value);
			}
		}
		
		[Association(Name="Subdivision_PostalAddress", Storage="_Subdivision", ThisKey="SubdivisionCode", OtherKey="SubdivisionCode", IsForeignKey=true)]
		public Subdivision Subdivision
		{
			get
			{
				return this._Subdivision.Entity;
			}
			set
			{
				Subdivision previousValue = this._Subdivision.Entity;
				if (((previousValue != value) 
							|| (this._Subdivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subdivision.Entity = null;
						previousValue.PostalAddresses.Remove(this);
					}
					this._Subdivision.Entity = value;
					if ((value != null))
					{
						value.PostalAddresses.Add(this);
						this._SubdivisionCode = value.SubdivisionCode;
					}
					else
					{
						this._SubdivisionCode = default(string);
					}
					this.SendPropertyChanged("Subdivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostalAddressAccounts(PostalAddressAccount entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = this;
		}
		
		private void detach_PostalAddressAccounts(PostalAddressAccount entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = null;
		}
		
		private void attach_PostalAddressOrganizations(PostalAddressOrganization entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = this;
		}
		
		private void detach_PostalAddressOrganizations(PostalAddressOrganization entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = null;
		}
		
		private void attach_PostalAddressCampaigns(PostalAddressCampaign entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = this;
		}
		
		private void detach_PostalAddressCampaigns(PostalAddressCampaign entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = null;
		}
		
		private void attach_PostalAddressProgramAgreements(PostalAddressProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = this;
		}
		
		private void detach_PostalAddressProgramAgreements(PostalAddressProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = null;
		}
		
		private void attach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = this;
		}
		
		private void detach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = null;
		}
		
		private void attach_ShipmentGroups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = this;
		}
		
		private void detach_ShipmentGroups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.PostalAddress = null;
		}
	}
	
	[Table(Name="dbo.[user]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<int> _RoleId;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Title;
		
		private string _Email;
		
		private string _BestTimeToCall;
		
		private string _DayPhoneNo;
		
		private string _EveningPhoneNo;
		
		private string _FaxNo;
		
		private bool _Deleted;
		
		private int _CreateUserId;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _SsoCommonName;
		
		private string _SsoUserGuid;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<QCAPOrder> _QCAPOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBestTimeToCallChanging(string value);
    partial void OnBestTimeToCallChanged();
    partial void OnDayPhoneNoChanging(string value);
    partial void OnDayPhoneNoChanged();
    partial void OnEveningPhoneNoChanging(string value);
    partial void OnEveningPhoneNoChanged();
    partial void OnFaxNoChanging(string value);
    partial void OnFaxNoChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSsoCommonNameChanging(string value);
    partial void OnSsoCommonNameChanged();
    partial void OnSsoUserGuidChanging(string value);
    partial void OnSsoUserGuidChanged();
    #endregion
		
		public User()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._QCAPOrders = new EntitySet<QCAPOrder>(new Action<QCAPOrder>(this.attach_QCAPOrders), new Action<QCAPOrder>(this.detach_QCAPOrders));
			OnCreated();
		}
		
		[Column(Name="user_id", Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Name="role_id", Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Name="user_name", Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Name="password", Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Name="first_name", Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Name="last_name", Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Name="title", Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Name="email", Storage="_Email", DbType="VarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Name="best_time_to_call", Storage="_BestTimeToCall", DbType="Char(5)")]
		public string BestTimeToCall
		{
			get
			{
				return this._BestTimeToCall;
			}
			set
			{
				if ((this._BestTimeToCall != value))
				{
					this.OnBestTimeToCallChanging(value);
					this.SendPropertyChanging();
					this._BestTimeToCall = value;
					this.SendPropertyChanged("BestTimeToCall");
					this.OnBestTimeToCallChanged();
				}
			}
		}
		
		[Column(Name="day_phone_no", Storage="_DayPhoneNo", DbType="VarChar(20)")]
		public string DayPhoneNo
		{
			get
			{
				return this._DayPhoneNo;
			}
			set
			{
				if ((this._DayPhoneNo != value))
				{
					this.OnDayPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._DayPhoneNo = value;
					this.SendPropertyChanged("DayPhoneNo");
					this.OnDayPhoneNoChanged();
				}
			}
		}
		
		[Column(Name="evening_phone_no", Storage="_EveningPhoneNo", DbType="VarChar(20)")]
		public string EveningPhoneNo
		{
			get
			{
				return this._EveningPhoneNo;
			}
			set
			{
				if ((this._EveningPhoneNo != value))
				{
					this.OnEveningPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._EveningPhoneNo = value;
					this.SendPropertyChanged("EveningPhoneNo");
					this.OnEveningPhoneNoChanged();
				}
			}
		}
		
		[Column(Name="fax_no", Storage="_FaxNo", DbType="VarChar(20)")]
		public string FaxNo
		{
			get
			{
				return this._FaxNo;
			}
			set
			{
				if ((this._FaxNo != value))
				{
					this.OnFaxNoChanging(value);
					this.SendPropertyChanging();
					this._FaxNo = value;
					this.SendPropertyChanged("FaxNo");
					this.OnFaxNoChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="SSO_Common_Name", Storage="_SsoCommonName", DbType="VarChar(50)")]
		public string SsoCommonName
		{
			get
			{
				return this._SsoCommonName;
			}
			set
			{
				if ((this._SsoCommonName != value))
				{
					this.OnSsoCommonNameChanging(value);
					this.SendPropertyChanging();
					this._SsoCommonName = value;
					this.SendPropertyChanged("SsoCommonName");
					this.OnSsoCommonNameChanged();
				}
			}
		}
		
		[Column(Name="SSO_User_GUID", Storage="_SsoUserGuid", DbType="VarChar(50)")]
		public string SsoUserGuid
		{
			get
			{
				return this._SsoUserGuid;
			}
			set
			{
				if ((this._SsoUserGuid != value))
				{
					this.OnSsoUserGuidChanging(value);
					this.SendPropertyChanging();
					this._SsoUserGuid = value;
					this.SendPropertyChanged("SsoUserGuid");
					this.OnSsoUserGuidChanged();
				}
			}
		}
		
		[Association(Name="User_Account", Storage="_Accounts", ThisKey="UserId", OtherKey="CreateUserId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[Association(Name="User_UserRole", Storage="_UserRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[Association(Name="User_QCAPOrder", Storage="_QCAPOrders", ThisKey="UserId", OtherKey="user_id")]
		public EntitySet<QCAPOrder> QCAPOrders
		{
			get
			{
				return this._QCAPOrders;
			}
			set
			{
				this._QCAPOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_QCAPOrders(QCAPOrder entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_QCAPOrders(QCAPOrder entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[Table(Name="dbo.organization")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrganizationId;
		
		private int _OrganizationTypeId;
		
		private System.Nullable<int> _OrganizationLevelId;
		
		private System.Nullable<int> _OrganizationStatusId;
		
		private string _OrganizationName;
		
		private string _FmId;
		
		private string _TaxExemptionNumber;
		
		private System.Nullable<System.DateTime> _TaxExemptionExpirationDate;
		
		private string _Mdrpid;
		
		private string _Arnmbl;
		
		private string _Comments;
		
		private bool _Deleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private int _BusinessDivisionId;
		
		private System.Nullable<int> _DtsFlagpoleInstance;
		
		private System.Nullable<int> _DtsCAccountId;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<PostalAddressOrganization> _PostalAddressOrganizations;
		
		private EntitySet<PhoneNumberOrganization> _PhoneNumberOrganizations;
		
		private EntitySet<EmailOrganization> _EmailOrganizations;
		
		private EntityRef<OrganizationType> _OrganizationType;
		
		private EntityRef<OrganizationLevel> _OrganizationLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationIdChanging(int value);
    partial void OnOrganizationIdChanged();
    partial void OnOrganizationTypeIdChanging(int value);
    partial void OnOrganizationTypeIdChanged();
    partial void OnOrganizationLevelIdChanging(System.Nullable<int> value);
    partial void OnOrganizationLevelIdChanged();
    partial void OnOrganizationStatusIdChanging(System.Nullable<int> value);
    partial void OnOrganizationStatusIdChanged();
    partial void OnOrganizationNameChanging(string value);
    partial void OnOrganizationNameChanged();
    partial void OnFmIdChanging(string value);
    partial void OnFmIdChanged();
    partial void OnTaxExemptionNumberChanging(string value);
    partial void OnTaxExemptionNumberChanged();
    partial void OnTaxExemptionExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaxExemptionExpirationDateChanged();
    partial void OnMdrpidChanging(string value);
    partial void OnMdrpidChanged();
    partial void OnArnmblChanging(string value);
    partial void OnArnmblChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnBusinessDivisionIdChanging(int value);
    partial void OnBusinessDivisionIdChanged();
    partial void OnDtsFlagpoleInstanceChanging(System.Nullable<int> value);
    partial void OnDtsFlagpoleInstanceChanged();
    partial void OnDtsCAccountIdChanging(System.Nullable<int> value);
    partial void OnDtsCAccountIdChanged();
    #endregion
		
		public Organization()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._PostalAddressOrganizations = new EntitySet<PostalAddressOrganization>(new Action<PostalAddressOrganization>(this.attach_PostalAddressOrganizations), new Action<PostalAddressOrganization>(this.detach_PostalAddressOrganizations));
			this._PhoneNumberOrganizations = new EntitySet<PhoneNumberOrganization>(new Action<PhoneNumberOrganization>(this.attach_PhoneNumberOrganizations), new Action<PhoneNumberOrganization>(this.detach_PhoneNumberOrganizations));
			this._EmailOrganizations = new EntitySet<EmailOrganization>(new Action<EmailOrganization>(this.attach_EmailOrganizations), new Action<EmailOrganization>(this.detach_EmailOrganizations));
			this._OrganizationType = default(EntityRef<OrganizationType>);
			this._OrganizationLevel = default(EntityRef<OrganizationLevel>);
			OnCreated();
		}
		
		[Column(Name="organization_id", Storage="_OrganizationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[Column(Name="organization_type_id", Storage="_OrganizationTypeId", DbType="Int NOT NULL")]
		public int OrganizationTypeId
		{
			get
			{
				return this._OrganizationTypeId;
			}
			set
			{
				if ((this._OrganizationTypeId != value))
				{
					this.OnOrganizationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationTypeId = value;
					this.SendPropertyChanged("OrganizationTypeId");
					this.OnOrganizationTypeIdChanged();
				}
			}
		}
		
		[Column(Name="organization_level_id", Storage="_OrganizationLevelId", DbType="Int")]
		public System.Nullable<int> OrganizationLevelId
		{
			get
			{
				return this._OrganizationLevelId;
			}
			set
			{
				if ((this._OrganizationLevelId != value))
				{
					this.OnOrganizationLevelIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationLevelId = value;
					this.SendPropertyChanged("OrganizationLevelId");
					this.OnOrganizationLevelIdChanged();
				}
			}
		}
		
		[Column(Name="organization_status_id", Storage="_OrganizationStatusId", DbType="Int")]
		public System.Nullable<int> OrganizationStatusId
		{
			get
			{
				return this._OrganizationStatusId;
			}
			set
			{
				if ((this._OrganizationStatusId != value))
				{
					this.OnOrganizationStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationStatusId = value;
					this.SendPropertyChanged("OrganizationStatusId");
					this.OnOrganizationStatusIdChanged();
				}
			}
		}
		
		[Column(Name="organization_name", Storage="_OrganizationName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this.OnOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationName = value;
					this.SendPropertyChanged("OrganizationName");
					this.OnOrganizationNameChanged();
				}
			}
		}
		
		[Column(Name="fm_id", Storage="_FmId", DbType="VarChar(4)")]
		public string FmId
		{
			get
			{
				return this._FmId;
			}
			set
			{
				if ((this._FmId != value))
				{
					this.OnFmIdChanging(value);
					this.SendPropertyChanging();
					this._FmId = value;
					this.SendPropertyChanged("FmId");
					this.OnFmIdChanged();
				}
			}
		}
		
		[Column(Name="tax_exemption_number", Storage="_TaxExemptionNumber", DbType="VarChar(20)")]
		public string TaxExemptionNumber
		{
			get
			{
				return this._TaxExemptionNumber;
			}
			set
			{
				if ((this._TaxExemptionNumber != value))
				{
					this.OnTaxExemptionNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxExemptionNumber = value;
					this.SendPropertyChanged("TaxExemptionNumber");
					this.OnTaxExemptionNumberChanged();
				}
			}
		}
		
		[Column(Name="tax_exemption_expiration_date", Storage="_TaxExemptionExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaxExemptionExpirationDate
		{
			get
			{
				return this._TaxExemptionExpirationDate;
			}
			set
			{
				if ((this._TaxExemptionExpirationDate != value))
				{
					this.OnTaxExemptionExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._TaxExemptionExpirationDate = value;
					this.SendPropertyChanged("TaxExemptionExpirationDate");
					this.OnTaxExemptionExpirationDateChanged();
				}
			}
		}
		
		[Column(Name="MDRPID", Storage="_Mdrpid", DbType="Char(8)")]
		public string Mdrpid
		{
			get
			{
				return this._Mdrpid;
			}
			set
			{
				if ((this._Mdrpid != value))
				{
					this.OnMdrpidChanging(value);
					this.SendPropertyChanging();
					this._Mdrpid = value;
					this.SendPropertyChanged("Mdrpid");
					this.OnMdrpidChanged();
				}
			}
		}
		
		[Column(Name="ARNMBL", Storage="_Arnmbl", DbType="VarChar(50)")]
		public string Arnmbl
		{
			get
			{
				return this._Arnmbl;
			}
			set
			{
				if ((this._Arnmbl != value))
				{
					this.OnArnmblChanging(value);
					this.SendPropertyChanging();
					this._Arnmbl = value;
					this.SendPropertyChanged("Arnmbl");
					this.OnArnmblChanged();
				}
			}
		}
		
		[Column(Name="comments", Storage="_Comments", DbType="VarChar(4000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="business_division_id", Storage="_BusinessDivisionId", DbType="Int NOT NULL")]
		public int BusinessDivisionId
		{
			get
			{
				return this._BusinessDivisionId;
			}
			set
			{
				if ((this._BusinessDivisionId != value))
				{
					this.OnBusinessDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessDivisionId = value;
					this.SendPropertyChanged("BusinessDivisionId");
					this.OnBusinessDivisionIdChanged();
				}
			}
		}
		
		[Column(Name="dts_FlagpoleInstance", Storage="_DtsFlagpoleInstance", DbType="Int")]
		public System.Nullable<int> DtsFlagpoleInstance
		{
			get
			{
				return this._DtsFlagpoleInstance;
			}
			set
			{
				if ((this._DtsFlagpoleInstance != value))
				{
					this.OnDtsFlagpoleInstanceChanging(value);
					this.SendPropertyChanging();
					this._DtsFlagpoleInstance = value;
					this.SendPropertyChanged("DtsFlagpoleInstance");
					this.OnDtsFlagpoleInstanceChanged();
				}
			}
		}
		
		[Column(Name="dts_CAccountID", Storage="_DtsCAccountId", DbType="Int")]
		public System.Nullable<int> DtsCAccountId
		{
			get
			{
				return this._DtsCAccountId;
			}
			set
			{
				if ((this._DtsCAccountId != value))
				{
					this.OnDtsCAccountIdChanging(value);
					this.SendPropertyChanging();
					this._DtsCAccountId = value;
					this.SendPropertyChanged("DtsCAccountId");
					this.OnDtsCAccountIdChanged();
				}
			}
		}
		
		[Association(Name="Organization_Account", Storage="_Accounts", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[Association(Name="Organization_PostalAddressOrganization", Storage="_PostalAddressOrganizations", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<PostalAddressOrganization> PostalAddressOrganizations
		{
			get
			{
				return this._PostalAddressOrganizations;
			}
			set
			{
				this._PostalAddressOrganizations.Assign(value);
			}
		}
		
		[Association(Name="Organization_PhoneNumberOrganization", Storage="_PhoneNumberOrganizations", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<PhoneNumberOrganization> PhoneNumberOrganizations
		{
			get
			{
				return this._PhoneNumberOrganizations;
			}
			set
			{
				this._PhoneNumberOrganizations.Assign(value);
			}
		}
		
		[Association(Name="Organization_EmailOrganization", Storage="_EmailOrganizations", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<EmailOrganization> EmailOrganizations
		{
			get
			{
				return this._EmailOrganizations;
			}
			set
			{
				this._EmailOrganizations.Assign(value);
			}
		}
		
		[Association(Name="OrganizationType_Organization", Storage="_OrganizationType", ThisKey="OrganizationTypeId", OtherKey="OrganizationTypeId", IsForeignKey=true)]
		public OrganizationType OrganizationType
		{
			get
			{
				return this._OrganizationType.Entity;
			}
			set
			{
				OrganizationType previousValue = this._OrganizationType.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationType.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._OrganizationType.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._OrganizationTypeId = value.OrganizationTypeId;
					}
					else
					{
						this._OrganizationTypeId = default(int);
					}
					this.SendPropertyChanged("OrganizationType");
				}
			}
		}
		
		[Association(Name="OrganizationLevel_Organization", Storage="_OrganizationLevel", ThisKey="OrganizationLevelId", OtherKey="OrganizationLevelId", IsForeignKey=true)]
		public OrganizationLevel OrganizationLevel
		{
			get
			{
				return this._OrganizationLevel.Entity;
			}
			set
			{
				OrganizationLevel previousValue = this._OrganizationLevel.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationLevel.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._OrganizationLevel.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._OrganizationLevelId = value.OrganizationLevelId;
					}
					else
					{
						this._OrganizationLevelId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrganizationLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_PostalAddressOrganizations(PostalAddressOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_PostalAddressOrganizations(PostalAddressOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_PhoneNumberOrganizations(PhoneNumberOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_PhoneNumberOrganizations(PhoneNumberOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_EmailOrganizations(EmailOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_EmailOrganizations(EmailOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
	}
	
	[Table(Name="dbo.postal_address_organization")]
	public partial class PostalAddressOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostalAddressOrganizationId;
		
		private int _PostalAddressId;
		
		private int _OrganizationId;
		
		private int _PostalAddressTypeId;
		
		private bool _Deleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<PostalAddress> _PostalAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostalAddressOrganizationIdChanging(int value);
    partial void OnPostalAddressOrganizationIdChanged();
    partial void OnPostalAddressIdChanging(int value);
    partial void OnPostalAddressIdChanged();
    partial void OnOrganizationIdChanging(int value);
    partial void OnOrganizationIdChanged();
    partial void OnPostalAddressTypeIdChanging(int value);
    partial void OnPostalAddressTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PostalAddressOrganization()
		{
			this._Organization = default(EntityRef<Organization>);
			this._PostalAddress = default(EntityRef<PostalAddress>);
			OnCreated();
		}
		
		[Column(Name="postal_address_organization_id", Storage="_PostalAddressOrganizationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PostalAddressOrganizationId
		{
			get
			{
				return this._PostalAddressOrganizationId;
			}
			set
			{
				if ((this._PostalAddressOrganizationId != value))
				{
					this.OnPostalAddressOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressOrganizationId = value;
					this.SendPropertyChanged("PostalAddressOrganizationId");
					this.OnPostalAddressOrganizationIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_id", Storage="_PostalAddressId", DbType="Int NOT NULL")]
		public int PostalAddressId
		{
			get
			{
				return this._PostalAddressId;
			}
			set
			{
				if ((this._PostalAddressId != value))
				{
					this.OnPostalAddressIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressId = value;
					this.SendPropertyChanged("PostalAddressId");
					this.OnPostalAddressIdChanged();
				}
			}
		}
		
		[Column(Name="organization_id", Storage="_OrganizationId", DbType="Int NOT NULL")]
		public int OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_type_id", Storage="_PostalAddressTypeId", DbType="Int NOT NULL")]
		public int PostalAddressTypeId
		{
			get
			{
				return this._PostalAddressTypeId;
			}
			set
			{
				if ((this._PostalAddressTypeId != value))
				{
					this.OnPostalAddressTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressTypeId = value;
					this.SendPropertyChanged("PostalAddressTypeId");
					this.OnPostalAddressTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Organization_PostalAddressOrganization", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.PostalAddressOrganizations.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.PostalAddressOrganizations.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[Association(Name="PostalAddress_PostalAddressOrganization", Storage="_PostalAddress", ThisKey="PostalAddressId", OtherKey="PostalAddressId", IsForeignKey=true)]
		public PostalAddress PostalAddress
		{
			get
			{
				return this._PostalAddress.Entity;
			}
			set
			{
				PostalAddress previousValue = this._PostalAddress.Entity;
				if (((previousValue != value) 
							|| (this._PostalAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostalAddress.Entity = null;
						previousValue.PostalAddressOrganizations.Remove(this);
					}
					this._PostalAddress.Entity = value;
					if ((value != null))
					{
						value.PostalAddressOrganizations.Add(this);
						this._PostalAddressId = value.PostalAddressId;
					}
					else
					{
						this._PostalAddressId = default(int);
					}
					this.SendPropertyChanged("PostalAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.organization_type")]
	public partial class OrganizationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrganizationTypeId;
		
		private string _OrganizationTypeName;
		
		private string _Arstyp;
		
		private EntitySet<Organization> _Organizations;
		
		private EntitySet<TaxCalculationMethod> _TaxCalculationMethods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationTypeIdChanging(int value);
    partial void OnOrganizationTypeIdChanged();
    partial void OnOrganizationTypeNameChanging(string value);
    partial void OnOrganizationTypeNameChanged();
    partial void OnArstypChanging(string value);
    partial void OnArstypChanged();
    #endregion
		
		public OrganizationType()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			this._TaxCalculationMethods = new EntitySet<TaxCalculationMethod>(new Action<TaxCalculationMethod>(this.attach_TaxCalculationMethods), new Action<TaxCalculationMethod>(this.detach_TaxCalculationMethods));
			OnCreated();
		}
		
		[Column(Name="organization_type_id", Storage="_OrganizationTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrganizationTypeId
		{
			get
			{
				return this._OrganizationTypeId;
			}
			set
			{
				if ((this._OrganizationTypeId != value))
				{
					this.OnOrganizationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationTypeId = value;
					this.SendPropertyChanged("OrganizationTypeId");
					this.OnOrganizationTypeIdChanged();
				}
			}
		}
		
		[Column(Name="organization_type_name", Storage="_OrganizationTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrganizationTypeName
		{
			get
			{
				return this._OrganizationTypeName;
			}
			set
			{
				if ((this._OrganizationTypeName != value))
				{
					this.OnOrganizationTypeNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationTypeName = value;
					this.SendPropertyChanged("OrganizationTypeName");
					this.OnOrganizationTypeNameChanged();
				}
			}
		}
		
		[Column(Name="ARSTYP", Storage="_Arstyp", DbType="VarChar(50)")]
		public string Arstyp
		{
			get
			{
				return this._Arstyp;
			}
			set
			{
				if ((this._Arstyp != value))
				{
					this.OnArstypChanging(value);
					this.SendPropertyChanging();
					this._Arstyp = value;
					this.SendPropertyChanged("Arstyp");
					this.OnArstypChanged();
				}
			}
		}
		
		[Association(Name="OrganizationType_Organization", Storage="_Organizations", ThisKey="OrganizationTypeId", OtherKey="OrganizationTypeId")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		[Association(Name="OrganizationType_TaxCalculationMethod", Storage="_TaxCalculationMethods", ThisKey="OrganizationTypeId", OtherKey="OrganizationTypeId")]
		public EntitySet<TaxCalculationMethod> TaxCalculationMethods
		{
			get
			{
				return this._TaxCalculationMethods;
			}
			set
			{
				this._TaxCalculationMethods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType = null;
		}
		
		private void attach_TaxCalculationMethods(TaxCalculationMethod entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType = this;
		}
		
		private void detach_TaxCalculationMethods(TaxCalculationMethod entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType = null;
		}
	}
	
	[Table(Name="dbo.season")]
	public partial class Season : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SeasonId;
		
		private int _FiscalYear;
		
		private char _SeasonCode;
		
		private char _FulfSeasonCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeasonIdChanging(int value);
    partial void OnSeasonIdChanged();
    partial void OnFiscalYearChanging(int value);
    partial void OnFiscalYearChanged();
    partial void OnSeasonCodeChanging(char value);
    partial void OnSeasonCodeChanged();
    partial void OnFulfSeasonCodeChanging(char value);
    partial void OnFulfSeasonCodeChanged();
    #endregion
		
		public Season()
		{
			OnCreated();
		}
		
		[Column(Name="season_id", Storage="_SeasonId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SeasonId
		{
			get
			{
				return this._SeasonId;
			}
			set
			{
				if ((this._SeasonId != value))
				{
					this.OnSeasonIdChanging(value);
					this.SendPropertyChanging();
					this._SeasonId = value;
					this.SendPropertyChanged("SeasonId");
					this.OnSeasonIdChanged();
				}
			}
		}
		
		[Column(Name="fiscal_year", Storage="_FiscalYear", DbType="Int NOT NULL")]
		public int FiscalYear
		{
			get
			{
				return this._FiscalYear;
			}
			set
			{
				if ((this._FiscalYear != value))
				{
					this.OnFiscalYearChanging(value);
					this.SendPropertyChanging();
					this._FiscalYear = value;
					this.SendPropertyChanged("FiscalYear");
					this.OnFiscalYearChanged();
				}
			}
		}
		
		[Column(Name="season_code", Storage="_SeasonCode", DbType="VarChar(1) NOT NULL")]
		public char SeasonCode
		{
			get
			{
				return this._SeasonCode;
			}
			set
			{
				if ((this._SeasonCode != value))
				{
					this.OnSeasonCodeChanging(value);
					this.SendPropertyChanging();
					this._SeasonCode = value;
					this.SendPropertyChanged("SeasonCode");
					this.OnSeasonCodeChanged();
				}
			}
		}
		
		[Column(Name="fulf_season_code", Storage="_FulfSeasonCode", DbType="VarChar(1) NOT NULL")]
		public char FulfSeasonCode
		{
			get
			{
				return this._FulfSeasonCode;
			}
			set
			{
				if ((this._FulfSeasonCode != value))
				{
					this.OnFulfSeasonCodeChanging(value);
					this.SendPropertyChanging();
					this._FulfSeasonCode = value;
					this.SendPropertyChanged("FulfSeasonCode");
					this.OnFulfSeasonCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form")]
	public partial class Form : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormId;
		
		private int _FormGroupId;
		
		private int _Version;
		
		private System.Nullable<int> _ProgramTypeId;
		
		private System.Nullable<int> _ProgramId;
		
		private System.Nullable<int> _EntityTypeId;
		
		private string _FormCode;
		
		private string _FormName;
		
		private string _Description;
		
		private string _ProgramBasicsText;
		
		private string _OrderTermsText;
		
		private System.Nullable<System.DateTime> _ClosingTime;
		
		private bool _IsEnabled;
		
		private bool _IsDeleted;
		
		private string _ImageUrl;
		
		private System.Nullable<bool> _IsProductPriceUpdatable;
		
		private System.Nullable<int> _ParentFormId;
		
		private System.Nullable<int> _TaxPostalAddressTypeId;
		
		private bool _IsBaseForm;
		
		private bool _IsQuantityAdjustmentAllowed;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private System.Nullable<int> _WarehouseTypeId;
		
		private bool _IsBulk;
		
		private string _ReportName;
		
		private bool _IsWarehouseSelectable;
		
		private System.Nullable<int> _DefaultWarehouseId;
		
		private System.Nullable<int> _SeasonId;
		
		private EntitySet<Campaign> _Campaigns;
		
		private EntitySet<FormPermission> _FormPermissions;
		
		private EntitySet<FormPermissionRegion> _FormPermissionRegions;
		
		private EntitySet<FormRequiresForm> _FormRequiresForms;
		
		private EntitySet<FormRequiresForm> _FormIsRequiredInForms;
		
		private EntitySet<ProgramAgreement> _ProgramAgreements;
		
		private EntitySet<FormDeliveryDateType> _FormDeliveryDateTypes;
		
		private EntitySet<FormSection> _FormSections;
		
		private EntitySet<BusinessException> _BusinessExceptions;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<QCAPOrder> _QCAPOrders;
		
		private EntityRef<ProgramType> _ProgramType;
		
		private EntityRef<Program> _Program;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnFormGroupIdChanging(int value);
    partial void OnFormGroupIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnProgramTypeIdChanging(System.Nullable<int> value);
    partial void OnProgramTypeIdChanged();
    partial void OnProgramIdChanging(System.Nullable<int> value);
    partial void OnProgramIdChanged();
    partial void OnEntityTypeIdChanging(System.Nullable<int> value);
    partial void OnEntityTypeIdChanged();
    partial void OnFormCodeChanging(string value);
    partial void OnFormCodeChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProgramBasicsTextChanging(string value);
    partial void OnProgramBasicsTextChanged();
    partial void OnOrderTermsTextChanging(string value);
    partial void OnOrderTermsTextChanged();
    partial void OnClosingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnClosingTimeChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnIsProductPriceUpdatableChanging(System.Nullable<bool> value);
    partial void OnIsProductPriceUpdatableChanged();
    partial void OnParentFormIdChanging(System.Nullable<int> value);
    partial void OnParentFormIdChanged();
    partial void OnTaxPostalAddressTypeIdChanging(System.Nullable<int> value);
    partial void OnTaxPostalAddressTypeIdChanged();
    partial void OnIsBaseFormChanging(bool value);
    partial void OnIsBaseFormChanged();
    partial void OnIsQuantityAdjustmentAllowedChanging(bool value);
    partial void OnIsQuantityAdjustmentAllowedChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnWarehouseTypeIdChanging(System.Nullable<int> value);
    partial void OnWarehouseTypeIdChanged();
    partial void OnIsBulkChanging(bool value);
    partial void OnIsBulkChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnIsWarehouseSelectableChanging(bool value);
    partial void OnIsWarehouseSelectableChanged();
    partial void OnDefaultWarehouseIdChanging(System.Nullable<int> value);
    partial void OnDefaultWarehouseIdChanged();
    partial void OnSeasonIdChanging(System.Nullable<int> value);
    partial void OnSeasonIdChanged();
    #endregion
		
		public Form()
		{
			this._Campaigns = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns), new Action<Campaign>(this.detach_Campaigns));
			this._FormPermissions = new EntitySet<FormPermission>(new Action<FormPermission>(this.attach_FormPermissions), new Action<FormPermission>(this.detach_FormPermissions));
			this._FormPermissionRegions = new EntitySet<FormPermissionRegion>(new Action<FormPermissionRegion>(this.attach_FormPermissionRegions), new Action<FormPermissionRegion>(this.detach_FormPermissionRegions));
			this._FormRequiresForms = new EntitySet<FormRequiresForm>(new Action<FormRequiresForm>(this.attach_FormRequiresForms), new Action<FormRequiresForm>(this.detach_FormRequiresForms));
			this._FormIsRequiredInForms = new EntitySet<FormRequiresForm>(new Action<FormRequiresForm>(this.attach_FormIsRequiredInForms), new Action<FormRequiresForm>(this.detach_FormIsRequiredInForms));
			this._ProgramAgreements = new EntitySet<ProgramAgreement>(new Action<ProgramAgreement>(this.attach_ProgramAgreements), new Action<ProgramAgreement>(this.detach_ProgramAgreements));
			this._FormDeliveryDateTypes = new EntitySet<FormDeliveryDateType>(new Action<FormDeliveryDateType>(this.attach_FormDeliveryDateTypes), new Action<FormDeliveryDateType>(this.detach_FormDeliveryDateTypes));
			this._FormSections = new EntitySet<FormSection>(new Action<FormSection>(this.attach_FormSections), new Action<FormSection>(this.detach_FormSections));
			this._BusinessExceptions = new EntitySet<BusinessException>(new Action<BusinessException>(this.attach_BusinessExceptions), new Action<BusinessException>(this.detach_BusinessExceptions));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._QCAPOrders = new EntitySet<QCAPOrder>(new Action<QCAPOrder>(this.attach_QCAPOrders), new Action<QCAPOrder>(this.detach_QCAPOrders));
			this._ProgramType = default(EntityRef<ProgramType>);
			this._Program = default(EntityRef<Program>);
			OnCreated();
		}
		
		[Column(Name="form_id", Storage="_FormId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="form_group_id", Storage="_FormGroupId", DbType="Int NOT NULL")]
		public int FormGroupId
		{
			get
			{
				return this._FormGroupId;
			}
			set
			{
				if ((this._FormGroupId != value))
				{
					this.OnFormGroupIdChanging(value);
					this.SendPropertyChanging();
					this._FormGroupId = value;
					this.SendPropertyChanged("FormGroupId");
					this.OnFormGroupIdChanged();
				}
			}
		}
		
		[Column(Name="version", Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Name="program_type_id", Storage="_ProgramTypeId", DbType="Int")]
		public System.Nullable<int> ProgramTypeId
		{
			get
			{
				return this._ProgramTypeId;
			}
			set
			{
				if ((this._ProgramTypeId != value))
				{
					this.OnProgramTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramTypeId = value;
					this.SendPropertyChanged("ProgramTypeId");
					this.OnProgramTypeIdChanged();
				}
			}
		}
		
		[Column(Name="program_id", Storage="_ProgramId", DbType="Int")]
		public System.Nullable<int> ProgramId
		{
			get
			{
				return this._ProgramId;
			}
			set
			{
				if ((this._ProgramId != value))
				{
					this.OnProgramIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramId = value;
					this.SendPropertyChanged("ProgramId");
					this.OnProgramIdChanged();
				}
			}
		}
		
		[Column(Name="entity_type_id", Storage="_EntityTypeId", DbType="Int")]
		public System.Nullable<int> EntityTypeId
		{
			get
			{
				return this._EntityTypeId;
			}
			set
			{
				if ((this._EntityTypeId != value))
				{
					this.OnEntityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeId = value;
					this.SendPropertyChanged("EntityTypeId");
					this.OnEntityTypeIdChanged();
				}
			}
		}
		
		[Column(Name="form_code", Storage="_FormCode", DbType="VarChar(50)")]
		public string FormCode
		{
			get
			{
				return this._FormCode;
			}
			set
			{
				if ((this._FormCode != value))
				{
					this.OnFormCodeChanging(value);
					this.SendPropertyChanging();
					this._FormCode = value;
					this.SendPropertyChanged("FormCode");
					this.OnFormCodeChanged();
				}
			}
		}
		
		[Column(Name="form_name", Storage="_FormName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="program_basics_text", Storage="_ProgramBasicsText", DbType="VarChar(2000)")]
		public string ProgramBasicsText
		{
			get
			{
				return this._ProgramBasicsText;
			}
			set
			{
				if ((this._ProgramBasicsText != value))
				{
					this.OnProgramBasicsTextChanging(value);
					this.SendPropertyChanging();
					this._ProgramBasicsText = value;
					this.SendPropertyChanged("ProgramBasicsText");
					this.OnProgramBasicsTextChanged();
				}
			}
		}
		
		[Column(Name="order_terms_text", Storage="_OrderTermsText", DbType="VarChar(2000)")]
		public string OrderTermsText
		{
			get
			{
				return this._OrderTermsText;
			}
			set
			{
				if ((this._OrderTermsText != value))
				{
					this.OnOrderTermsTextChanging(value);
					this.SendPropertyChanging();
					this._OrderTermsText = value;
					this.SendPropertyChanged("OrderTermsText");
					this.OnOrderTermsTextChanged();
				}
			}
		}
		
		[Column(Name="closing_time", Storage="_ClosingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosingTime
		{
			get
			{
				return this._ClosingTime;
			}
			set
			{
				if ((this._ClosingTime != value))
				{
					this.OnClosingTimeChanging(value);
					this.SendPropertyChanging();
					this._ClosingTime = value;
					this.SendPropertyChanged("ClosingTime");
					this.OnClosingTimeChanged();
				}
			}
		}
		
		[Column(Name="enabled", Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="image_url", Storage="_ImageUrl", DbType="VarChar(100)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[Column(Name="is_product_price_updatable", Storage="_IsProductPriceUpdatable", DbType="Bit")]
		public System.Nullable<bool> IsProductPriceUpdatable
		{
			get
			{
				return this._IsProductPriceUpdatable;
			}
			set
			{
				if ((this._IsProductPriceUpdatable != value))
				{
					this.OnIsProductPriceUpdatableChanging(value);
					this.SendPropertyChanging();
					this._IsProductPriceUpdatable = value;
					this.SendPropertyChanged("IsProductPriceUpdatable");
					this.OnIsProductPriceUpdatableChanged();
				}
			}
		}
		
		[Column(Name="parent_form_id", Storage="_ParentFormId", DbType="Int")]
		public System.Nullable<int> ParentFormId
		{
			get
			{
				return this._ParentFormId;
			}
			set
			{
				if ((this._ParentFormId != value))
				{
					this.OnParentFormIdChanging(value);
					this.SendPropertyChanging();
					this._ParentFormId = value;
					this.SendPropertyChanged("ParentFormId");
					this.OnParentFormIdChanged();
				}
			}
		}
		
		[Column(Name="tax_postal_address_type_id", Storage="_TaxPostalAddressTypeId", DbType="Int")]
		public System.Nullable<int> TaxPostalAddressTypeId
		{
			get
			{
				return this._TaxPostalAddressTypeId;
			}
			set
			{
				if ((this._TaxPostalAddressTypeId != value))
				{
					this.OnTaxPostalAddressTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxPostalAddressTypeId = value;
					this.SendPropertyChanged("TaxPostalAddressTypeId");
					this.OnTaxPostalAddressTypeIdChanged();
				}
			}
		}
		
		[Column(Name="is_base_form", Storage="_IsBaseForm", DbType="Bit NOT NULL")]
		public bool IsBaseForm
		{
			get
			{
				return this._IsBaseForm;
			}
			set
			{
				if ((this._IsBaseForm != value))
				{
					this.OnIsBaseFormChanging(value);
					this.SendPropertyChanging();
					this._IsBaseForm = value;
					this.SendPropertyChanged("IsBaseForm");
					this.OnIsBaseFormChanged();
				}
			}
		}
		
		[Column(Name="is_quantity_adjustment_allowed", Storage="_IsQuantityAdjustmentAllowed", DbType="Bit NOT NULL")]
		public bool IsQuantityAdjustmentAllowed
		{
			get
			{
				return this._IsQuantityAdjustmentAllowed;
			}
			set
			{
				if ((this._IsQuantityAdjustmentAllowed != value))
				{
					this.OnIsQuantityAdjustmentAllowedChanging(value);
					this.SendPropertyChanging();
					this._IsQuantityAdjustmentAllowed = value;
					this.SendPropertyChanged("IsQuantityAdjustmentAllowed");
					this.OnIsQuantityAdjustmentAllowedChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="warehouse_type_id", Storage="_WarehouseTypeId", DbType="Int")]
		public System.Nullable<int> WarehouseTypeId
		{
			get
			{
				return this._WarehouseTypeId;
			}
			set
			{
				if ((this._WarehouseTypeId != value))
				{
					this.OnWarehouseTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseTypeId = value;
					this.SendPropertyChanged("WarehouseTypeId");
					this.OnWarehouseTypeIdChanged();
				}
			}
		}
		
		[Column(Name="is_bulk", Storage="_IsBulk", DbType="Bit NOT NULL")]
		public bool IsBulk
		{
			get
			{
				return this._IsBulk;
			}
			set
			{
				if ((this._IsBulk != value))
				{
					this.OnIsBulkChanging(value);
					this.SendPropertyChanging();
					this._IsBulk = value;
					this.SendPropertyChanged("IsBulk");
					this.OnIsBulkChanged();
				}
			}
		}
		
		[Column(Name="report_name", Storage="_ReportName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[Column(Name="is_warehouse_selectable", Storage="_IsWarehouseSelectable", DbType="Bit NOT NULL")]
		public bool IsWarehouseSelectable
		{
			get
			{
				return this._IsWarehouseSelectable;
			}
			set
			{
				if ((this._IsWarehouseSelectable != value))
				{
					this.OnIsWarehouseSelectableChanging(value);
					this.SendPropertyChanging();
					this._IsWarehouseSelectable = value;
					this.SendPropertyChanged("IsWarehouseSelectable");
					this.OnIsWarehouseSelectableChanged();
				}
			}
		}
		
		[Column(Name="default_warehouse_id", Storage="_DefaultWarehouseId", DbType="Int")]
		public System.Nullable<int> DefaultWarehouseId
		{
			get
			{
				return this._DefaultWarehouseId;
			}
			set
			{
				if ((this._DefaultWarehouseId != value))
				{
					this.OnDefaultWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultWarehouseId = value;
					this.SendPropertyChanged("DefaultWarehouseId");
					this.OnDefaultWarehouseIdChanged();
				}
			}
		}
		
		[Column(Name="season_id", Storage="_SeasonId", DbType="Int")]
		public System.Nullable<int> SeasonId
		{
			get
			{
				return this._SeasonId;
			}
			set
			{
				if ((this._SeasonId != value))
				{
					this.OnSeasonIdChanging(value);
					this.SendPropertyChanging();
					this._SeasonId = value;
					this.SendPropertyChanged("SeasonId");
					this.OnSeasonIdChanged();
				}
			}
		}
		
		[Association(Name="Form_Campaign", Storage="_Campaigns", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campaigns;
			}
			set
			{
				this._Campaigns.Assign(value);
			}
		}
		
		[Association(Name="Form_FormPermission", Storage="_FormPermissions", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<FormPermission> FormPermissions
		{
			get
			{
				return this._FormPermissions;
			}
			set
			{
				this._FormPermissions.Assign(value);
			}
		}
		
		[Association(Name="Form_FormPermissionRegion", Storage="_FormPermissionRegions", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<FormPermissionRegion> FormPermissionRegions
		{
			get
			{
				return this._FormPermissionRegions;
			}
			set
			{
				this._FormPermissionRegions.Assign(value);
			}
		}
		
		[Association(Name="Form_FormRequiresForm", Storage="_FormRequiresForms", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<FormRequiresForm> FormRequiresForms
		{
			get
			{
				return this._FormRequiresForms;
			}
			set
			{
				this._FormRequiresForms.Assign(value);
			}
		}
		
		[Association(Name="Form_FormRequiresForm1", Storage="_FormIsRequiredInForms", ThisKey="FormId", OtherKey="RequiredFormId")]
		public EntitySet<FormRequiresForm> FormIsRequiredInForms
		{
			get
			{
				return this._FormIsRequiredInForms;
			}
			set
			{
				this._FormIsRequiredInForms.Assign(value);
			}
		}
		
		[Association(Name="Form_ProgramAgreement", Storage="_ProgramAgreements", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<ProgramAgreement> ProgramAgreements
		{
			get
			{
				return this._ProgramAgreements;
			}
			set
			{
				this._ProgramAgreements.Assign(value);
			}
		}
		
		[Association(Name="Form_FormDeliveryDateType", Storage="_FormDeliveryDateTypes", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<FormDeliveryDateType> FormDeliveryDateTypes
		{
			get
			{
				return this._FormDeliveryDateTypes;
			}
			set
			{
				this._FormDeliveryDateTypes.Assign(value);
			}
		}
		
		[Association(Name="Form_FormSection", Storage="_FormSections", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<FormSection> FormSections
		{
			get
			{
				return this._FormSections;
			}
			set
			{
				this._FormSections.Assign(value);
			}
		}
		
		[Association(Name="Form_BusinessException", Storage="_BusinessExceptions", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<BusinessException> BusinessExceptions
		{
			get
			{
				return this._BusinessExceptions;
			}
			set
			{
				this._BusinessExceptions.Assign(value);
			}
		}
		
		[Association(Name="Form_Order", Storage="_Orders", ThisKey="FormId", OtherKey="FormId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[Association(Name="Form_QCAPOrder", Storage="_QCAPOrders", ThisKey="FormId", OtherKey="form_id")]
		public EntitySet<QCAPOrder> QCAPOrders
		{
			get
			{
				return this._QCAPOrders;
			}
			set
			{
				this._QCAPOrders.Assign(value);
			}
		}
		
		[Association(Name="ProgramType_Form", Storage="_ProgramType", ThisKey="ProgramTypeId", OtherKey="ProgramTypeId", IsForeignKey=true)]
		public ProgramType ProgramType
		{
			get
			{
				return this._ProgramType.Entity;
			}
			set
			{
				ProgramType previousValue = this._ProgramType.Entity;
				if (((previousValue != value) 
							|| (this._ProgramType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramType.Entity = null;
						previousValue.Forms.Remove(this);
					}
					this._ProgramType.Entity = value;
					if ((value != null))
					{
						value.Forms.Add(this);
						this._ProgramTypeId = value.ProgramTypeId;
					}
					else
					{
						this._ProgramTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramType");
				}
			}
		}
		
		[Association(Name="Program_Form", Storage="_Program", ThisKey="ProgramId", OtherKey="ProgramId", IsForeignKey=true)]
		public Program Program
		{
			get
			{
				return this._Program.Entity;
			}
			set
			{
				Program previousValue = this._Program.Entity;
				if (((previousValue != value) 
							|| (this._Program.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Program.Entity = null;
						previousValue.Forms.Remove(this);
					}
					this._Program.Entity = value;
					if ((value != null))
					{
						value.Forms.Add(this);
						this._ProgramId = value.ProgramId;
					}
					else
					{
						this._ProgramId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Program");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_FormPermissions(FormPermission entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_FormPermissions(FormPermission entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_FormPermissionRegions(FormPermissionRegion entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_FormPermissionRegions(FormPermissionRegion entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_FormRequiresForms(FormRequiresForm entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_FormRequiresForms(FormRequiresForm entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_FormIsRequiredInForms(FormRequiresForm entity)
		{
			this.SendPropertyChanging();
			entity.RequiredForm = this;
		}
		
		private void detach_FormIsRequiredInForms(FormRequiresForm entity)
		{
			this.SendPropertyChanging();
			entity.RequiredForm = null;
		}
		
		private void attach_ProgramAgreements(ProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_ProgramAgreements(ProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_FormDeliveryDateTypes(FormDeliveryDateType entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_FormDeliveryDateTypes(FormDeliveryDateType entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_FormSections(FormSection entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_FormSections(FormSection entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_BusinessExceptions(BusinessException entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_BusinessExceptions(BusinessException entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
		
		private void attach_QCAPOrders(QCAPOrder entity)
		{
			this.SendPropertyChanging();
			entity.Form = this;
		}
		
		private void detach_QCAPOrders(QCAPOrder entity)
		{
			this.SendPropertyChanging();
			entity.Form = null;
		}
	}
	
	[Table(Name="dbo.user_role")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRoleId;
		
		private int _UserId;
		
		private int _RoleId;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<User> _User;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRoleIdChanging(int value);
    partial void OnUserRoleIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public UserRole()
		{
			this._User = default(EntityRef<User>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[Column(Name="user_role_id", Storage="_UserRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRoleId
		{
			get
			{
				return this._UserRoleId;
			}
			set
			{
				if ((this._UserRoleId != value))
				{
					this.OnUserRoleIdChanging(value);
					this.SendPropertyChanging();
					this._UserRoleId = value;
					this.SendPropertyChanged("UserRoleId");
					this.OnUserRoleIdChanged();
				}
			}
		}
		
		[Column(Name="user_id", Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Name="role_id", Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="User_UserRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[Association(Name="Role_UserRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_permission")]
	public partial class FormPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormPermissionId;
		
		private System.Nullable<int> _FormId;
		
		private System.Nullable<int> _RoleId;
		
		private bool _AllowRead;
		
		private bool _AllowWrite;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<Form> _Form;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormPermissionIdChanging(int value);
    partial void OnFormPermissionIdChanged();
    partial void OnFormIdChanging(System.Nullable<int> value);
    partial void OnFormIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnAllowReadChanging(bool value);
    partial void OnAllowReadChanged();
    partial void OnAllowWriteChanging(bool value);
    partial void OnAllowWriteChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public FormPermission()
		{
			this._Form = default(EntityRef<Form>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[Column(Name="form_permission_id", Storage="_FormPermissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormPermissionId
		{
			get
			{
				return this._FormPermissionId;
			}
			set
			{
				if ((this._FormPermissionId != value))
				{
					this.OnFormPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._FormPermissionId = value;
					this.SendPropertyChanged("FormPermissionId");
					this.OnFormPermissionIdChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int")]
		public System.Nullable<int> FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="role_id", Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Name="allow_read", Storage="_AllowRead", DbType="Bit NOT NULL")]
		public bool AllowRead
		{
			get
			{
				return this._AllowRead;
			}
			set
			{
				if ((this._AllowRead != value))
				{
					this.OnAllowReadChanging(value);
					this.SendPropertyChanging();
					this._AllowRead = value;
					this.SendPropertyChanged("AllowRead");
					this.OnAllowReadChanged();
				}
			}
		}
		
		[Column(Name="allow_write", Storage="_AllowWrite", DbType="Bit NOT NULL")]
		public bool AllowWrite
		{
			get
			{
				return this._AllowWrite;
			}
			set
			{
				if ((this._AllowWrite != value))
				{
					this.OnAllowWriteChanging(value);
					this.SendPropertyChanging();
					this._AllowWrite = value;
					this.SendPropertyChanged("AllowWrite");
					this.OnAllowWriteChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Form_FormPermission", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.FormPermissions.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.FormPermissions.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		[Association(Name="Role_FormPermission", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.FormPermissions.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.FormPermissions.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_permission_region")]
	public partial class FormPermissionRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormPermissionRegionId;
		
		private System.Nullable<int> _FormId;
		
		private string _Zip;
		
		private string _Description;
		
		private bool _AllowRead;
		
		private bool _AllowWrite;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<Form> _Form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormPermissionRegionIdChanging(int value);
    partial void OnFormPermissionRegionIdChanged();
    partial void OnFormIdChanging(System.Nullable<int> value);
    partial void OnFormIdChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAllowReadChanging(bool value);
    partial void OnAllowReadChanged();
    partial void OnAllowWriteChanging(bool value);
    partial void OnAllowWriteChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public FormPermissionRegion()
		{
			this._Form = default(EntityRef<Form>);
			OnCreated();
		}
		
		[Column(Name="form_permission_region_id", Storage="_FormPermissionRegionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormPermissionRegionId
		{
			get
			{
				return this._FormPermissionRegionId;
			}
			set
			{
				if ((this._FormPermissionRegionId != value))
				{
					this.OnFormPermissionRegionIdChanging(value);
					this.SendPropertyChanging();
					this._FormPermissionRegionId = value;
					this.SendPropertyChanged("FormPermissionRegionId");
					this.OnFormPermissionRegionIdChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int")]
		public System.Nullable<int> FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="zip", Storage="_Zip", DbType="VarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(400)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="allow_read", Storage="_AllowRead", DbType="Bit NOT NULL")]
		public bool AllowRead
		{
			get
			{
				return this._AllowRead;
			}
			set
			{
				if ((this._AllowRead != value))
				{
					this.OnAllowReadChanging(value);
					this.SendPropertyChanging();
					this._AllowRead = value;
					this.SendPropertyChanged("AllowRead");
					this.OnAllowReadChanged();
				}
			}
		}
		
		[Column(Name="allow_write", Storage="_AllowWrite", DbType="Bit NOT NULL")]
		public bool AllowWrite
		{
			get
			{
				return this._AllowWrite;
			}
			set
			{
				if ((this._AllowWrite != value))
				{
					this.OnAllowWriteChanging(value);
					this.SendPropertyChanging();
					this._AllowWrite = value;
					this.SendPropertyChanged("AllowWrite");
					this.OnAllowWriteChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Form_FormPermissionRegion", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.FormPermissionRegions.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.FormPermissionRegions.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.form_requires_form")]
	public partial class FormRequiresForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormRequiresFormId;
		
		private int _FormId;
		
		private int _RequiredFormId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<Form> _Form;
		
		private EntityRef<Form> _RequiredForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormRequiresFormIdChanging(int value);
    partial void OnFormRequiresFormIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnRequiredFormIdChanging(int value);
    partial void OnRequiredFormIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public FormRequiresForm()
		{
			this._Form = default(EntityRef<Form>);
			this._RequiredForm = default(EntityRef<Form>);
			OnCreated();
		}
		
		[Column(Name="form_requires_form_id", Storage="_FormRequiresFormId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormRequiresFormId
		{
			get
			{
				return this._FormRequiresFormId;
			}
			set
			{
				if ((this._FormRequiresFormId != value))
				{
					this.OnFormRequiresFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormRequiresFormId = value;
					this.SendPropertyChanged("FormRequiresFormId");
					this.OnFormRequiresFormIdChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="required_form_id", Storage="_RequiredFormId", DbType="Int NOT NULL")]
		public int RequiredFormId
		{
			get
			{
				return this._RequiredFormId;
			}
			set
			{
				if ((this._RequiredFormId != value))
				{
					this.OnRequiredFormIdChanging(value);
					this.SendPropertyChanging();
					this._RequiredFormId = value;
					this.SendPropertyChanged("RequiredFormId");
					this.OnRequiredFormIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Form_FormRequiresForm", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.FormRequiresForms.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.FormRequiresForms.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		[Association(Name="Form_FormRequiresForm1", Storage="_RequiredForm", ThisKey="RequiredFormId", OtherKey="FormId", IsForeignKey=true)]
		public Form RequiredForm
		{
			get
			{
				return this._RequiredForm.Entity;
			}
			set
			{
				Form previousValue = this._RequiredForm.Entity;
				if (((previousValue != value) 
							|| (this._RequiredForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequiredForm.Entity = null;
						previousValue.FormIsRequiredInForms.Remove(this);
					}
					this._RequiredForm.Entity = value;
					if ((value != null))
					{
						value.FormIsRequiredInForms.Add(this);
						this._RequiredFormId = value.FormId;
					}
					else
					{
						this._RequiredFormId = default(int);
					}
					this.SendPropertyChanged("RequiredForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.program_agreement")]
	public partial class ProgramAgreement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramAgreementId;
		
		private string _FulfProgramAgreementId;
		
		private System.Nullable<int> _FormId;
		
		private int _ProgramAgreementStatusId;
		
		private string _TaxExemptionNumber;
		
		private System.Nullable<System.DateTime> _TaxExemptionExpirationDate;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.Nullable<System.DateTime> _HolidayStartDate;
		
		private System.Nullable<System.DateTime> _HolidayEndDate;
		
		private int _Enrollment;
		
		private decimal _GoalEstimatedGross;
		
		private int _RenewalSignUpTerm;
		
		private decimal _ProfitRate;
		
		private bool _IsPriced;
		
		private string _Comments;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntitySet<ProgramAgreementCampaign> _ProgramAgreementCampaigns;
		
		private EntitySet<PostalAddressProgramAgreement> _PostalAddressProgramAgreements;
		
		private EntitySet<PhoneNumberProgramAgreement> _PhoneNumberProgramAgreements;
		
		private EntitySet<EmailProgramAgreement> _EmailProgramAgreements;
		
		private EntitySet<ProgramAgreementStatusChange> _ProgramAgreementStatusChanges;
		
		private EntitySet<ProgramAgreementCatalog> _ProgramAgreementCatalogs;
		
		private EntitySet<ProgramAgreementOrder> _ProgramAgreementOrders;
		
		private EntityRef<Form> _Form;
		
		private EntityRef<ProgramAgreementStatus> _ProgramAgreementStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramAgreementIdChanging(int value);
    partial void OnProgramAgreementIdChanged();
    partial void OnFulfProgramAgreementIdChanging(string value);
    partial void OnFulfProgramAgreementIdChanged();
    partial void OnFormIdChanging(System.Nullable<int> value);
    partial void OnFormIdChanged();
    partial void OnProgramAgreementStatusIdChanging(int value);
    partial void OnProgramAgreementStatusIdChanged();
    partial void OnTaxExemptionNumberChanging(string value);
    partial void OnTaxExemptionNumberChanged();
    partial void OnTaxExemptionExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaxExemptionExpirationDateChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnHolidayStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHolidayStartDateChanged();
    partial void OnHolidayEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHolidayEndDateChanged();
    partial void OnEnrollmentChanging(int value);
    partial void OnEnrollmentChanged();
    partial void OnGoalEstimatedGrossChanging(decimal value);
    partial void OnGoalEstimatedGrossChanged();
    partial void OnRenewalSignUpTermChanging(int value);
    partial void OnRenewalSignUpTermChanged();
    partial void OnProfitRateChanging(decimal value);
    partial void OnProfitRateChanged();
    partial void OnIsPricedChanging(bool value);
    partial void OnIsPricedChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public ProgramAgreement()
		{
			this._ProgramAgreementCampaigns = new EntitySet<ProgramAgreementCampaign>(new Action<ProgramAgreementCampaign>(this.attach_ProgramAgreementCampaigns), new Action<ProgramAgreementCampaign>(this.detach_ProgramAgreementCampaigns));
			this._PostalAddressProgramAgreements = new EntitySet<PostalAddressProgramAgreement>(new Action<PostalAddressProgramAgreement>(this.attach_PostalAddressProgramAgreements), new Action<PostalAddressProgramAgreement>(this.detach_PostalAddressProgramAgreements));
			this._PhoneNumberProgramAgreements = new EntitySet<PhoneNumberProgramAgreement>(new Action<PhoneNumberProgramAgreement>(this.attach_PhoneNumberProgramAgreements), new Action<PhoneNumberProgramAgreement>(this.detach_PhoneNumberProgramAgreements));
			this._EmailProgramAgreements = new EntitySet<EmailProgramAgreement>(new Action<EmailProgramAgreement>(this.attach_EmailProgramAgreements), new Action<EmailProgramAgreement>(this.detach_EmailProgramAgreements));
			this._ProgramAgreementStatusChanges = new EntitySet<ProgramAgreementStatusChange>(new Action<ProgramAgreementStatusChange>(this.attach_ProgramAgreementStatusChanges), new Action<ProgramAgreementStatusChange>(this.detach_ProgramAgreementStatusChanges));
			this._ProgramAgreementCatalogs = new EntitySet<ProgramAgreementCatalog>(new Action<ProgramAgreementCatalog>(this.attach_ProgramAgreementCatalogs), new Action<ProgramAgreementCatalog>(this.detach_ProgramAgreementCatalogs));
			this._ProgramAgreementOrders = new EntitySet<ProgramAgreementOrder>(new Action<ProgramAgreementOrder>(this.attach_ProgramAgreementOrders), new Action<ProgramAgreementOrder>(this.detach_ProgramAgreementOrders));
			this._Form = default(EntityRef<Form>);
			this._ProgramAgreementStatus = default(EntityRef<ProgramAgreementStatus>);
			OnCreated();
		}
		
		[Column(Name="program_agreement_id", Storage="_ProgramAgreementId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgramAgreementId
		{
			get
			{
				return this._ProgramAgreementId;
			}
			set
			{
				if ((this._ProgramAgreementId != value))
				{
					this.OnProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementId = value;
					this.SendPropertyChanged("ProgramAgreementId");
					this.OnProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="fulf_program_agreement_id", Storage="_FulfProgramAgreementId", DbType="VarChar(6)")]
		public string FulfProgramAgreementId
		{
			get
			{
				return this._FulfProgramAgreementId;
			}
			set
			{
				if ((this._FulfProgramAgreementId != value))
				{
					this.OnFulfProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._FulfProgramAgreementId = value;
					this.SendPropertyChanged("FulfProgramAgreementId");
					this.OnFulfProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int")]
		public System.Nullable<int> FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_status_id", Storage="_ProgramAgreementStatusId", DbType="Int NOT NULL")]
		public int ProgramAgreementStatusId
		{
			get
			{
				return this._ProgramAgreementStatusId;
			}
			set
			{
				if ((this._ProgramAgreementStatusId != value))
				{
					this.OnProgramAgreementStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementStatusId = value;
					this.SendPropertyChanged("ProgramAgreementStatusId");
					this.OnProgramAgreementStatusIdChanged();
				}
			}
		}
		
		[Column(Name="tax_exemption_number", Storage="_TaxExemptionNumber", DbType="VarChar(23)")]
		public string TaxExemptionNumber
		{
			get
			{
				return this._TaxExemptionNumber;
			}
			set
			{
				if ((this._TaxExemptionNumber != value))
				{
					this.OnTaxExemptionNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxExemptionNumber = value;
					this.SendPropertyChanged("TaxExemptionNumber");
					this.OnTaxExemptionNumberChanged();
				}
			}
		}
		
		[Column(Name="tax_exemption_expiration_date", Storage="_TaxExemptionExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaxExemptionExpirationDate
		{
			get
			{
				return this._TaxExemptionExpirationDate;
			}
			set
			{
				if ((this._TaxExemptionExpirationDate != value))
				{
					this.OnTaxExemptionExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._TaxExemptionExpirationDate = value;
					this.SendPropertyChanged("TaxExemptionExpirationDate");
					this.OnTaxExemptionExpirationDateChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Name="holiday_start_date", Storage="_HolidayStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HolidayStartDate
		{
			get
			{
				return this._HolidayStartDate;
			}
			set
			{
				if ((this._HolidayStartDate != value))
				{
					this.OnHolidayStartDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayStartDate = value;
					this.SendPropertyChanged("HolidayStartDate");
					this.OnHolidayStartDateChanged();
				}
			}
		}
		
		[Column(Name="holiday_end_date", Storage="_HolidayEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HolidayEndDate
		{
			get
			{
				return this._HolidayEndDate;
			}
			set
			{
				if ((this._HolidayEndDate != value))
				{
					this.OnHolidayEndDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayEndDate = value;
					this.SendPropertyChanged("HolidayEndDate");
					this.OnHolidayEndDateChanged();
				}
			}
		}
		
		[Column(Name="enrollment", Storage="_Enrollment", DbType="Int NOT NULL")]
		public int Enrollment
		{
			get
			{
				return this._Enrollment;
			}
			set
			{
				if ((this._Enrollment != value))
				{
					this.OnEnrollmentChanging(value);
					this.SendPropertyChanging();
					this._Enrollment = value;
					this.SendPropertyChanged("Enrollment");
					this.OnEnrollmentChanged();
				}
			}
		}
		
		[Column(Name="goal_estimated_gross", Storage="_GoalEstimatedGross", DbType="Money NOT NULL")]
		public decimal GoalEstimatedGross
		{
			get
			{
				return this._GoalEstimatedGross;
			}
			set
			{
				if ((this._GoalEstimatedGross != value))
				{
					this.OnGoalEstimatedGrossChanging(value);
					this.SendPropertyChanging();
					this._GoalEstimatedGross = value;
					this.SendPropertyChanged("GoalEstimatedGross");
					this.OnGoalEstimatedGrossChanged();
				}
			}
		}
		
		[Column(Name="renewal_sign_up_term", Storage="_RenewalSignUpTerm", DbType="Int NOT NULL")]
		public int RenewalSignUpTerm
		{
			get
			{
				return this._RenewalSignUpTerm;
			}
			set
			{
				if ((this._RenewalSignUpTerm != value))
				{
					this.OnRenewalSignUpTermChanging(value);
					this.SendPropertyChanging();
					this._RenewalSignUpTerm = value;
					this.SendPropertyChanged("RenewalSignUpTerm");
					this.OnRenewalSignUpTermChanged();
				}
			}
		}
		
		[Column(Name="profit_rate", Storage="_ProfitRate", DbType="Decimal(2,2) NOT NULL")]
		public decimal ProfitRate
		{
			get
			{
				return this._ProfitRate;
			}
			set
			{
				if ((this._ProfitRate != value))
				{
					this.OnProfitRateChanging(value);
					this.SendPropertyChanging();
					this._ProfitRate = value;
					this.SendPropertyChanged("ProfitRate");
					this.OnProfitRateChanged();
				}
			}
		}
		
		[Column(Name="priced", Storage="_IsPriced", DbType="Bit NOT NULL")]
		public bool IsPriced
		{
			get
			{
				return this._IsPriced;
			}
			set
			{
				if ((this._IsPriced != value))
				{
					this.OnIsPricedChanging(value);
					this.SendPropertyChanging();
					this._IsPriced = value;
					this.SendPropertyChanged("IsPriced");
					this.OnIsPricedChanged();
				}
			}
		}
		
		[Column(Name="comments", Storage="_Comments", DbType="VarChar(4000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="ProgramAgreement_ProgramAgreementCampaign", Storage="_ProgramAgreementCampaigns", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId")]
		public EntitySet<ProgramAgreementCampaign> ProgramAgreementCampaigns
		{
			get
			{
				return this._ProgramAgreementCampaigns;
			}
			set
			{
				this._ProgramAgreementCampaigns.Assign(value);
			}
		}
		
		[Association(Name="ProgramAgreement_PostalAddressProgramAgreement", Storage="_PostalAddressProgramAgreements", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId")]
		public EntitySet<PostalAddressProgramAgreement> PostalAddressProgramAgreements
		{
			get
			{
				return this._PostalAddressProgramAgreements;
			}
			set
			{
				this._PostalAddressProgramAgreements.Assign(value);
			}
		}
		
		[Association(Name="ProgramAgreement_PhoneNumberProgramAgreement", Storage="_PhoneNumberProgramAgreements", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId")]
		public EntitySet<PhoneNumberProgramAgreement> PhoneNumberProgramAgreements
		{
			get
			{
				return this._PhoneNumberProgramAgreements;
			}
			set
			{
				this._PhoneNumberProgramAgreements.Assign(value);
			}
		}
		
		[Association(Name="ProgramAgreement_EmailProgramAgreement", Storage="_EmailProgramAgreements", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId")]
		public EntitySet<EmailProgramAgreement> EmailProgramAgreements
		{
			get
			{
				return this._EmailProgramAgreements;
			}
			set
			{
				this._EmailProgramAgreements.Assign(value);
			}
		}
		
		[Association(Name="ProgramAgreement_ProgramAgreementStatusChange", Storage="_ProgramAgreementStatusChanges", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId")]
		public EntitySet<ProgramAgreementStatusChange> ProgramAgreementStatusChanges
		{
			get
			{
				return this._ProgramAgreementStatusChanges;
			}
			set
			{
				this._ProgramAgreementStatusChanges.Assign(value);
			}
		}
		
		[Association(Name="ProgramAgreement_ProgramAgreementCatalog", Storage="_ProgramAgreementCatalogs", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId")]
		public EntitySet<ProgramAgreementCatalog> ProgramAgreementCatalogs
		{
			get
			{
				return this._ProgramAgreementCatalogs;
			}
			set
			{
				this._ProgramAgreementCatalogs.Assign(value);
			}
		}
		
		[Association(Name="ProgramAgreement_ProgramAgreementOrder", Storage="_ProgramAgreementOrders", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId")]
		public EntitySet<ProgramAgreementOrder> ProgramAgreementOrders
		{
			get
			{
				return this._ProgramAgreementOrders;
			}
			set
			{
				this._ProgramAgreementOrders.Assign(value);
			}
		}
		
		[Association(Name="Form_ProgramAgreement", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.ProgramAgreements.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreements.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		[Association(Name="ProgramAgreementStatus_ProgramAgreement", Storage="_ProgramAgreementStatus", ThisKey="ProgramAgreementStatusId", OtherKey="ProgramAgreementStatusId", IsForeignKey=true)]
		public ProgramAgreementStatus ProgramAgreementStatus
		{
			get
			{
				return this._ProgramAgreementStatus.Entity;
			}
			set
			{
				ProgramAgreementStatus previousValue = this._ProgramAgreementStatus.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreementStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreementStatus.Entity = null;
						previousValue.ProgramAgreements.Remove(this);
					}
					this._ProgramAgreementStatus.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreements.Add(this);
						this._ProgramAgreementStatusId = value.ProgramAgreementStatusId;
					}
					else
					{
						this._ProgramAgreementStatusId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreementStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProgramAgreementCampaigns(ProgramAgreementCampaign entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = this;
		}
		
		private void detach_ProgramAgreementCampaigns(ProgramAgreementCampaign entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = null;
		}
		
		private void attach_PostalAddressProgramAgreements(PostalAddressProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = this;
		}
		
		private void detach_PostalAddressProgramAgreements(PostalAddressProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = null;
		}
		
		private void attach_PhoneNumberProgramAgreements(PhoneNumberProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = this;
		}
		
		private void detach_PhoneNumberProgramAgreements(PhoneNumberProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = null;
		}
		
		private void attach_EmailProgramAgreements(EmailProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = this;
		}
		
		private void detach_EmailProgramAgreements(EmailProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = null;
		}
		
		private void attach_ProgramAgreementStatusChanges(ProgramAgreementStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = this;
		}
		
		private void detach_ProgramAgreementStatusChanges(ProgramAgreementStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = null;
		}
		
		private void attach_ProgramAgreementCatalogs(ProgramAgreementCatalog entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = this;
		}
		
		private void detach_ProgramAgreementCatalogs(ProgramAgreementCatalog entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = null;
		}
		
		private void attach_ProgramAgreementOrders(ProgramAgreementOrder entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = this;
		}
		
		private void detach_ProgramAgreementOrders(ProgramAgreementOrder entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreement = null;
		}
	}
	
	[Table(Name="dbo.program_agreement_campaign")]
	public partial class ProgramAgreementCampaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramAgreementCampaignId;
		
		private int _ProgramAgreementId;
		
		private int _CampaignId;
		
		private int _ProgramId;
		
		private System.Nullable<int> _OrderId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<ProgramAgreement> _ProgramAgreement;
		
		private EntityRef<Program> _Program;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramAgreementCampaignIdChanging(int value);
    partial void OnProgramAgreementCampaignIdChanged();
    partial void OnProgramAgreementIdChanging(int value);
    partial void OnProgramAgreementIdChanged();
    partial void OnCampaignIdChanging(int value);
    partial void OnCampaignIdChanged();
    partial void OnProgramIdChanging(int value);
    partial void OnProgramIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public ProgramAgreementCampaign()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._ProgramAgreement = default(EntityRef<ProgramAgreement>);
			this._Program = default(EntityRef<Program>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[Column(Name="program_agreement_campaign_id", Storage="_ProgramAgreementCampaignId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgramAgreementCampaignId
		{
			get
			{
				return this._ProgramAgreementCampaignId;
			}
			set
			{
				if ((this._ProgramAgreementCampaignId != value))
				{
					this.OnProgramAgreementCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementCampaignId = value;
					this.SendPropertyChanged("ProgramAgreementCampaignId");
					this.OnProgramAgreementCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_id", Storage="_ProgramAgreementId", DbType="Int NOT NULL")]
		public int ProgramAgreementId
		{
			get
			{
				return this._ProgramAgreementId;
			}
			set
			{
				if ((this._ProgramAgreementId != value))
				{
					this.OnProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementId = value;
					this.SendPropertyChanged("ProgramAgreementId");
					this.OnProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="campaign_id", Storage="_CampaignId", DbType="Int NOT NULL")]
		public int CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="program_id", Storage="_ProgramId", DbType="Int NOT NULL")]
		public int ProgramId
		{
			get
			{
				return this._ProgramId;
			}
			set
			{
				if ((this._ProgramId != value))
				{
					this.OnProgramIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramId = value;
					this.SendPropertyChanged("ProgramId");
					this.OnProgramIdChanged();
				}
			}
		}
		
		[Column(Name="order_id", Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Campaign_ProgramAgreementCampaign", Storage="_Campaign", ThisKey="CampaignId", OtherKey="CampaignId", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.ProgramAgreementCampaigns.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementCampaigns.Add(this);
						this._CampaignId = value.CampaignId;
					}
					else
					{
						this._CampaignId = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[Association(Name="ProgramAgreement_ProgramAgreementCampaign", Storage="_ProgramAgreement", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId", IsForeignKey=true)]
		public ProgramAgreement ProgramAgreement
		{
			get
			{
				return this._ProgramAgreement.Entity;
			}
			set
			{
				ProgramAgreement previousValue = this._ProgramAgreement.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreement.Entity = null;
						previousValue.ProgramAgreementCampaigns.Remove(this);
					}
					this._ProgramAgreement.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementCampaigns.Add(this);
						this._ProgramAgreementId = value.ProgramAgreementId;
					}
					else
					{
						this._ProgramAgreementId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreement");
				}
			}
		}
		
		[Association(Name="Program_ProgramAgreementCampaign", Storage="_Program", ThisKey="ProgramId", OtherKey="ProgramId", IsForeignKey=true)]
		public Program Program
		{
			get
			{
				return this._Program.Entity;
			}
			set
			{
				Program previousValue = this._Program.Entity;
				if (((previousValue != value) 
							|| (this._Program.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Program.Entity = null;
						previousValue.ProgramAgreementCampaigns.Remove(this);
					}
					this._Program.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementCampaigns.Add(this);
						this._ProgramId = value.ProgramId;
					}
					else
					{
						this._ProgramId = default(int);
					}
					this.SendPropertyChanged("Program");
				}
			}
		}
		
		[Association(Name="Order_ProgramAgreementCampaign", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.ProgramAgreementCampaigns.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementCampaigns.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.program_agreement_status")]
	public partial class ProgramAgreementStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramAgreementStatusId;
		
		private string _ProgramAgreementStatusName;
		
		private string _ColorCode;
		
		private System.Nullable<int> _StatusCategoryId;
		
		private string _Description;
		
		private string _ShortDescription;
		
		private EntitySet<ProgramAgreement> _ProgramAgreements;
		
		private EntitySet<ProgramAgreementStatusChange> _ProgramAgreementStatusChanges;
		
		private EntityRef<StatusCategory> _StatusCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramAgreementStatusIdChanging(int value);
    partial void OnProgramAgreementStatusIdChanged();
    partial void OnProgramAgreementStatusNameChanging(string value);
    partial void OnProgramAgreementStatusNameChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnStatusCategoryIdChanging(System.Nullable<int> value);
    partial void OnStatusCategoryIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    #endregion
		
		public ProgramAgreementStatus()
		{
			this._ProgramAgreements = new EntitySet<ProgramAgreement>(new Action<ProgramAgreement>(this.attach_ProgramAgreements), new Action<ProgramAgreement>(this.detach_ProgramAgreements));
			this._ProgramAgreementStatusChanges = new EntitySet<ProgramAgreementStatusChange>(new Action<ProgramAgreementStatusChange>(this.attach_ProgramAgreementStatusChanges), new Action<ProgramAgreementStatusChange>(this.detach_ProgramAgreementStatusChanges));
			this._StatusCategory = default(EntityRef<StatusCategory>);
			OnCreated();
		}
		
		[Column(Name="program_agreement_status_id", Storage="_ProgramAgreementStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramAgreementStatusId
		{
			get
			{
				return this._ProgramAgreementStatusId;
			}
			set
			{
				if ((this._ProgramAgreementStatusId != value))
				{
					this.OnProgramAgreementStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementStatusId = value;
					this.SendPropertyChanged("ProgramAgreementStatusId");
					this.OnProgramAgreementStatusIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_status_name", Storage="_ProgramAgreementStatusName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProgramAgreementStatusName
		{
			get
			{
				return this._ProgramAgreementStatusName;
			}
			set
			{
				if ((this._ProgramAgreementStatusName != value))
				{
					this.OnProgramAgreementStatusNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementStatusName = value;
					this.SendPropertyChanged("ProgramAgreementStatusName");
					this.OnProgramAgreementStatusNameChanged();
				}
			}
		}
		
		[Column(Name="color_code", Storage="_ColorCode", DbType="VarChar(50)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Name="status_category_id", Storage="_StatusCategoryId", DbType="Int")]
		public System.Nullable<int> StatusCategoryId
		{
			get
			{
				return this._StatusCategoryId;
			}
			set
			{
				if ((this._StatusCategoryId != value))
				{
					this.OnStatusCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._StatusCategoryId = value;
					this.SendPropertyChanged("StatusCategoryId");
					this.OnStatusCategoryIdChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="short_description", Storage="_ShortDescription", DbType="VarChar(50)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[Association(Name="ProgramAgreementStatus_ProgramAgreement", Storage="_ProgramAgreements", ThisKey="ProgramAgreementStatusId", OtherKey="ProgramAgreementStatusId")]
		public EntitySet<ProgramAgreement> ProgramAgreements
		{
			get
			{
				return this._ProgramAgreements;
			}
			set
			{
				this._ProgramAgreements.Assign(value);
			}
		}
		
		[Association(Name="ProgramAgreementStatus_ProgramAgreementStatusChange", Storage="_ProgramAgreementStatusChanges", ThisKey="ProgramAgreementStatusId", OtherKey="ProgramAgreementStatusId")]
		public EntitySet<ProgramAgreementStatusChange> ProgramAgreementStatusChanges
		{
			get
			{
				return this._ProgramAgreementStatusChanges;
			}
			set
			{
				this._ProgramAgreementStatusChanges.Assign(value);
			}
		}
		
		[Association(Name="StatusCategory_ProgramAgreementStatus", Storage="_StatusCategory", ThisKey="StatusCategoryId", OtherKey="StatusCategoryId", IsForeignKey=true)]
		public StatusCategory StatusCategory
		{
			get
			{
				return this._StatusCategory.Entity;
			}
			set
			{
				StatusCategory previousValue = this._StatusCategory.Entity;
				if (((previousValue != value) 
							|| (this._StatusCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusCategory.Entity = null;
						previousValue.ProgramAgreementStatus.Remove(this);
					}
					this._StatusCategory.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementStatus.Add(this);
						this._StatusCategoryId = value.StatusCategoryId;
					}
					else
					{
						this._StatusCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StatusCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProgramAgreements(ProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreementStatus = this;
		}
		
		private void detach_ProgramAgreements(ProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreementStatus = null;
		}
		
		private void attach_ProgramAgreementStatusChanges(ProgramAgreementStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreementStatus = this;
		}
		
		private void detach_ProgramAgreementStatusChanges(ProgramAgreementStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.ProgramAgreementStatus = null;
		}
	}
	
	[Table(Name="dbo.form_delivery_date_type")]
	public partial class FormDeliveryDateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormDeliveryDateTypeId;
		
		private int _FormId;
		
		private int _DeliveryDateTypeId;
		
		private EntityRef<Form> _Form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormDeliveryDateTypeIdChanging(int value);
    partial void OnFormDeliveryDateTypeIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnDeliveryDateTypeIdChanging(int value);
    partial void OnDeliveryDateTypeIdChanged();
    #endregion
		
		public FormDeliveryDateType()
		{
			this._Form = default(EntityRef<Form>);
			OnCreated();
		}
		
		[Column(Name="form_delivery_date_type_id", Storage="_FormDeliveryDateTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormDeliveryDateTypeId
		{
			get
			{
				return this._FormDeliveryDateTypeId;
			}
			set
			{
				if ((this._FormDeliveryDateTypeId != value))
				{
					this.OnFormDeliveryDateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FormDeliveryDateTypeId = value;
					this.SendPropertyChanged("FormDeliveryDateTypeId");
					this.OnFormDeliveryDateTypeIdChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="delivery_date_type_id", Storage="_DeliveryDateTypeId", DbType="Int NOT NULL")]
		public int DeliveryDateTypeId
		{
			get
			{
				return this._DeliveryDateTypeId;
			}
			set
			{
				if ((this._DeliveryDateTypeId != value))
				{
					this.OnDeliveryDateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDateTypeId = value;
					this.SendPropertyChanged("DeliveryDateTypeId");
					this.OnDeliveryDateTypeIdChanged();
				}
			}
		}
		
		[Association(Name="Form_FormDeliveryDateType", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.FormDeliveryDateTypes.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.FormDeliveryDateTypes.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.postal_address_campaign")]
	public partial class PostalAddressCampaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostalAddressCampaignId;
		
		private int _PostalAddressId;
		
		private int _CampaignId;
		
		private int _PostalAddressTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<PostalAddress> _PostalAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostalAddressCampaignIdChanging(int value);
    partial void OnPostalAddressCampaignIdChanged();
    partial void OnPostalAddressIdChanging(int value);
    partial void OnPostalAddressIdChanged();
    partial void OnCampaignIdChanging(int value);
    partial void OnCampaignIdChanged();
    partial void OnPostalAddressTypeIdChanging(int value);
    partial void OnPostalAddressTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PostalAddressCampaign()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._PostalAddress = default(EntityRef<PostalAddress>);
			OnCreated();
		}
		
		[Column(Name="postal_address_campaign_id", Storage="_PostalAddressCampaignId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PostalAddressCampaignId
		{
			get
			{
				return this._PostalAddressCampaignId;
			}
			set
			{
				if ((this._PostalAddressCampaignId != value))
				{
					this.OnPostalAddressCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressCampaignId = value;
					this.SendPropertyChanged("PostalAddressCampaignId");
					this.OnPostalAddressCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_id", Storage="_PostalAddressId", DbType="Int NOT NULL")]
		public int PostalAddressId
		{
			get
			{
				return this._PostalAddressId;
			}
			set
			{
				if ((this._PostalAddressId != value))
				{
					this.OnPostalAddressIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressId = value;
					this.SendPropertyChanged("PostalAddressId");
					this.OnPostalAddressIdChanged();
				}
			}
		}
		
		[Column(Name="campaign_id", Storage="_CampaignId", DbType="Int NOT NULL")]
		public int CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_type_id", Storage="_PostalAddressTypeId", DbType="Int NOT NULL")]
		public int PostalAddressTypeId
		{
			get
			{
				return this._PostalAddressTypeId;
			}
			set
			{
				if ((this._PostalAddressTypeId != value))
				{
					this.OnPostalAddressTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressTypeId = value;
					this.SendPropertyChanged("PostalAddressTypeId");
					this.OnPostalAddressTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Campaign_PostalAddressCampaign", Storage="_Campaign", ThisKey="CampaignId", OtherKey="CampaignId", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.PostalAddressCampaigns.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.PostalAddressCampaigns.Add(this);
						this._CampaignId = value.CampaignId;
					}
					else
					{
						this._CampaignId = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[Association(Name="PostalAddress_PostalAddressCampaign", Storage="_PostalAddress", ThisKey="PostalAddressId", OtherKey="PostalAddressId", IsForeignKey=true)]
		public PostalAddress PostalAddress
		{
			get
			{
				return this._PostalAddress.Entity;
			}
			set
			{
				PostalAddress previousValue = this._PostalAddress.Entity;
				if (((previousValue != value) 
							|| (this._PostalAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostalAddress.Entity = null;
						previousValue.PostalAddressCampaigns.Remove(this);
					}
					this._PostalAddress.Entity = value;
					if ((value != null))
					{
						value.PostalAddressCampaigns.Add(this);
						this._PostalAddressId = value.PostalAddressId;
					}
					else
					{
						this._PostalAddressId = default(int);
					}
					this.SendPropertyChanged("PostalAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.postal_address_program_agreement")]
	public partial class PostalAddressProgramAgreement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostalAddressProgramAgreementId;
		
		private int _PostalAddressId;
		
		private int _ProgramAgreementId;
		
		private int _PostalAddressTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<ProgramAgreement> _ProgramAgreement;
		
		private EntityRef<PostalAddress> _PostalAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostalAddressProgramAgreementIdChanging(int value);
    partial void OnPostalAddressProgramAgreementIdChanged();
    partial void OnPostalAddressIdChanging(int value);
    partial void OnPostalAddressIdChanged();
    partial void OnProgramAgreementIdChanging(int value);
    partial void OnProgramAgreementIdChanged();
    partial void OnPostalAddressTypeIdChanging(int value);
    partial void OnPostalAddressTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PostalAddressProgramAgreement()
		{
			this._ProgramAgreement = default(EntityRef<ProgramAgreement>);
			this._PostalAddress = default(EntityRef<PostalAddress>);
			OnCreated();
		}
		
		[Column(Name="postal_address_program_agreement_id", Storage="_PostalAddressProgramAgreementId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PostalAddressProgramAgreementId
		{
			get
			{
				return this._PostalAddressProgramAgreementId;
			}
			set
			{
				if ((this._PostalAddressProgramAgreementId != value))
				{
					this.OnPostalAddressProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressProgramAgreementId = value;
					this.SendPropertyChanged("PostalAddressProgramAgreementId");
					this.OnPostalAddressProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_id", Storage="_PostalAddressId", DbType="Int NOT NULL")]
		public int PostalAddressId
		{
			get
			{
				return this._PostalAddressId;
			}
			set
			{
				if ((this._PostalAddressId != value))
				{
					this.OnPostalAddressIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressId = value;
					this.SendPropertyChanged("PostalAddressId");
					this.OnPostalAddressIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_id", Storage="_ProgramAgreementId", DbType="Int NOT NULL")]
		public int ProgramAgreementId
		{
			get
			{
				return this._ProgramAgreementId;
			}
			set
			{
				if ((this._ProgramAgreementId != value))
				{
					this.OnProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementId = value;
					this.SendPropertyChanged("ProgramAgreementId");
					this.OnProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_type_id", Storage="_PostalAddressTypeId", DbType="Int NOT NULL")]
		public int PostalAddressTypeId
		{
			get
			{
				return this._PostalAddressTypeId;
			}
			set
			{
				if ((this._PostalAddressTypeId != value))
				{
					this.OnPostalAddressTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressTypeId = value;
					this.SendPropertyChanged("PostalAddressTypeId");
					this.OnPostalAddressTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="ProgramAgreement_PostalAddressProgramAgreement", Storage="_ProgramAgreement", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId", IsForeignKey=true)]
		public ProgramAgreement ProgramAgreement
		{
			get
			{
				return this._ProgramAgreement.Entity;
			}
			set
			{
				ProgramAgreement previousValue = this._ProgramAgreement.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreement.Entity = null;
						previousValue.PostalAddressProgramAgreements.Remove(this);
					}
					this._ProgramAgreement.Entity = value;
					if ((value != null))
					{
						value.PostalAddressProgramAgreements.Add(this);
						this._ProgramAgreementId = value.ProgramAgreementId;
					}
					else
					{
						this._ProgramAgreementId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreement");
				}
			}
		}
		
		[Association(Name="PostalAddress_PostalAddressProgramAgreement", Storage="_PostalAddress", ThisKey="PostalAddressId", OtherKey="PostalAddressId", IsForeignKey=true)]
		public PostalAddress PostalAddress
		{
			get
			{
				return this._PostalAddress.Entity;
			}
			set
			{
				PostalAddress previousValue = this._PostalAddress.Entity;
				if (((previousValue != value) 
							|| (this._PostalAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostalAddress.Entity = null;
						previousValue.PostalAddressProgramAgreements.Remove(this);
					}
					this._PostalAddress.Entity = value;
					if ((value != null))
					{
						value.PostalAddressProgramAgreements.Add(this);
						this._PostalAddressId = value.PostalAddressId;
					}
					else
					{
						this._PostalAddressId = default(int);
					}
					this.SendPropertyChanged("PostalAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.phone_number_program_agreement")]
	public partial class PhoneNumberProgramAgreement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneNumberProgramAgreementId;
		
		private int _PhoneNumberId;
		
		private int _ProgramAgreementId;
		
		private int _PhoneNumberTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<ProgramAgreement> _ProgramAgreement;
		
		private EntityRef<PhoneNumber> _PhoneNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneNumberProgramAgreementIdChanging(int value);
    partial void OnPhoneNumberProgramAgreementIdChanged();
    partial void OnPhoneNumberIdChanging(int value);
    partial void OnPhoneNumberIdChanged();
    partial void OnProgramAgreementIdChanging(int value);
    partial void OnProgramAgreementIdChanged();
    partial void OnPhoneNumberTypeIdChanging(int value);
    partial void OnPhoneNumberTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PhoneNumberProgramAgreement()
		{
			this._ProgramAgreement = default(EntityRef<ProgramAgreement>);
			this._PhoneNumber = default(EntityRef<PhoneNumber>);
			OnCreated();
		}
		
		[Column(Name="phone_number_program_agreement_id", Storage="_PhoneNumberProgramAgreementId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneNumberProgramAgreementId
		{
			get
			{
				return this._PhoneNumberProgramAgreementId;
			}
			set
			{
				if ((this._PhoneNumberProgramAgreementId != value))
				{
					this.OnPhoneNumberProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberProgramAgreementId = value;
					this.SendPropertyChanged("PhoneNumberProgramAgreementId");
					this.OnPhoneNumberProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_id", Storage="_PhoneNumberId", DbType="Int NOT NULL")]
		public int PhoneNumberId
		{
			get
			{
				return this._PhoneNumberId;
			}
			set
			{
				if ((this._PhoneNumberId != value))
				{
					this.OnPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberId = value;
					this.SendPropertyChanged("PhoneNumberId");
					this.OnPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_id", Storage="_ProgramAgreementId", DbType="Int NOT NULL")]
		public int ProgramAgreementId
		{
			get
			{
				return this._ProgramAgreementId;
			}
			set
			{
				if ((this._ProgramAgreementId != value))
				{
					this.OnProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementId = value;
					this.SendPropertyChanged("ProgramAgreementId");
					this.OnProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_type_id", Storage="_PhoneNumberTypeId", DbType="Int NOT NULL")]
		public int PhoneNumberTypeId
		{
			get
			{
				return this._PhoneNumberTypeId;
			}
			set
			{
				if ((this._PhoneNumberTypeId != value))
				{
					this.OnPhoneNumberTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberTypeId = value;
					this.SendPropertyChanged("PhoneNumberTypeId");
					this.OnPhoneNumberTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="ProgramAgreement_PhoneNumberProgramAgreement", Storage="_ProgramAgreement", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId", IsForeignKey=true)]
		public ProgramAgreement ProgramAgreement
		{
			get
			{
				return this._ProgramAgreement.Entity;
			}
			set
			{
				ProgramAgreement previousValue = this._ProgramAgreement.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreement.Entity = null;
						previousValue.PhoneNumberProgramAgreements.Remove(this);
					}
					this._ProgramAgreement.Entity = value;
					if ((value != null))
					{
						value.PhoneNumberProgramAgreements.Add(this);
						this._ProgramAgreementId = value.ProgramAgreementId;
					}
					else
					{
						this._ProgramAgreementId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreement");
				}
			}
		}
		
		[Association(Name="PhoneNumber_PhoneNumberProgramAgreement", Storage="_PhoneNumber", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber PhoneNumber
		{
			get
			{
				return this._PhoneNumber.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._PhoneNumber.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumber.Entity = null;
						previousValue.PhoneNumberProgramAgreements.Remove(this);
					}
					this._PhoneNumber.Entity = value;
					if ((value != null))
					{
						value.PhoneNumberProgramAgreements.Add(this);
						this._PhoneNumberId = value.PhoneNumberId;
					}
					else
					{
						this._PhoneNumberId = default(int);
					}
					this.SendPropertyChanged("PhoneNumber");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.phone_number_organization")]
	public partial class PhoneNumberOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneNumberOrganizationId;
		
		private int _PhoneNumberId;
		
		private int _OrganizationId;
		
		private int _PhoneNumberTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<PhoneNumber> _PhoneNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneNumberOrganizationIdChanging(int value);
    partial void OnPhoneNumberOrganizationIdChanged();
    partial void OnPhoneNumberIdChanging(int value);
    partial void OnPhoneNumberIdChanged();
    partial void OnOrganizationIdChanging(int value);
    partial void OnOrganizationIdChanged();
    partial void OnPhoneNumberTypeIdChanging(int value);
    partial void OnPhoneNumberTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PhoneNumberOrganization()
		{
			this._Organization = default(EntityRef<Organization>);
			this._PhoneNumber = default(EntityRef<PhoneNumber>);
			OnCreated();
		}
		
		[Column(Name="phone_number_organization_id", Storage="_PhoneNumberOrganizationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneNumberOrganizationId
		{
			get
			{
				return this._PhoneNumberOrganizationId;
			}
			set
			{
				if ((this._PhoneNumberOrganizationId != value))
				{
					this.OnPhoneNumberOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberOrganizationId = value;
					this.SendPropertyChanged("PhoneNumberOrganizationId");
					this.OnPhoneNumberOrganizationIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_id", Storage="_PhoneNumberId", DbType="Int NOT NULL")]
		public int PhoneNumberId
		{
			get
			{
				return this._PhoneNumberId;
			}
			set
			{
				if ((this._PhoneNumberId != value))
				{
					this.OnPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberId = value;
					this.SendPropertyChanged("PhoneNumberId");
					this.OnPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="organization_id", Storage="_OrganizationId", DbType="Int NOT NULL")]
		public int OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_type_id", Storage="_PhoneNumberTypeId", DbType="Int NOT NULL")]
		public int PhoneNumberTypeId
		{
			get
			{
				return this._PhoneNumberTypeId;
			}
			set
			{
				if ((this._PhoneNumberTypeId != value))
				{
					this.OnPhoneNumberTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberTypeId = value;
					this.SendPropertyChanged("PhoneNumberTypeId");
					this.OnPhoneNumberTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Organization_PhoneNumberOrganization", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.PhoneNumberOrganizations.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.PhoneNumberOrganizations.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[Association(Name="PhoneNumber_PhoneNumberOrganization", Storage="_PhoneNumber", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber PhoneNumber
		{
			get
			{
				return this._PhoneNumber.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._PhoneNumber.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumber.Entity = null;
						previousValue.PhoneNumberOrganizations.Remove(this);
					}
					this._PhoneNumber.Entity = value;
					if ((value != null))
					{
						value.PhoneNumberOrganizations.Add(this);
						this._PhoneNumberId = value.PhoneNumberId;
					}
					else
					{
						this._PhoneNumberId = default(int);
					}
					this.SendPropertyChanged("PhoneNumber");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.phone_number_campaign")]
	public partial class PhoneNumberCampaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneNumberCampaignId;
		
		private int _PhoneNumberId;
		
		private int _CampaignId;
		
		private int _PhoneNumberTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<PhoneNumber> _PhoneNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneNumberCampaignIdChanging(int value);
    partial void OnPhoneNumberCampaignIdChanged();
    partial void OnPhoneNumberIdChanging(int value);
    partial void OnPhoneNumberIdChanged();
    partial void OnCampaignIdChanging(int value);
    partial void OnCampaignIdChanged();
    partial void OnPhoneNumberTypeIdChanging(int value);
    partial void OnPhoneNumberTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PhoneNumberCampaign()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._PhoneNumber = default(EntityRef<PhoneNumber>);
			OnCreated();
		}
		
		[Column(Name="phone_number_campaign_id", Storage="_PhoneNumberCampaignId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneNumberCampaignId
		{
			get
			{
				return this._PhoneNumberCampaignId;
			}
			set
			{
				if ((this._PhoneNumberCampaignId != value))
				{
					this.OnPhoneNumberCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberCampaignId = value;
					this.SendPropertyChanged("PhoneNumberCampaignId");
					this.OnPhoneNumberCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_id", Storage="_PhoneNumberId", DbType="Int NOT NULL")]
		public int PhoneNumberId
		{
			get
			{
				return this._PhoneNumberId;
			}
			set
			{
				if ((this._PhoneNumberId != value))
				{
					this.OnPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberId = value;
					this.SendPropertyChanged("PhoneNumberId");
					this.OnPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="campaign_id", Storage="_CampaignId", DbType="Int NOT NULL")]
		public int CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_type_id", Storage="_PhoneNumberTypeId", DbType="Int NOT NULL")]
		public int PhoneNumberTypeId
		{
			get
			{
				return this._PhoneNumberTypeId;
			}
			set
			{
				if ((this._PhoneNumberTypeId != value))
				{
					this.OnPhoneNumberTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberTypeId = value;
					this.SendPropertyChanged("PhoneNumberTypeId");
					this.OnPhoneNumberTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Campaign_PhoneNumberCampaign", Storage="_Campaign", ThisKey="CampaignId", OtherKey="CampaignId", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.PhoneNumberCampaigns.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.PhoneNumberCampaigns.Add(this);
						this._CampaignId = value.CampaignId;
					}
					else
					{
						this._CampaignId = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[Association(Name="PhoneNumber_PhoneNumberCampaign", Storage="_PhoneNumber", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber PhoneNumber
		{
			get
			{
				return this._PhoneNumber.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._PhoneNumber.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumber.Entity = null;
						previousValue.PhoneNumberCampaigns.Remove(this);
					}
					this._PhoneNumber.Entity = value;
					if ((value != null))
					{
						value.PhoneNumberCampaigns.Add(this);
						this._PhoneNumberId = value.PhoneNumberId;
					}
					else
					{
						this._PhoneNumberId = default(int);
					}
					this.SendPropertyChanged("PhoneNumber");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.phone_number_account")]
	public partial class PhoneNumberAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneNumberAccountId;
		
		private int _PhoneNumberId;
		
		private int _AccountId;
		
		private int _PhoneNumberTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<PhoneNumber> _PhoneNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneNumberAccountIdChanging(int value);
    partial void OnPhoneNumberAccountIdChanged();
    partial void OnPhoneNumberIdChanging(int value);
    partial void OnPhoneNumberIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnPhoneNumberTypeIdChanging(int value);
    partial void OnPhoneNumberTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PhoneNumberAccount()
		{
			this._Account = default(EntityRef<Account>);
			this._PhoneNumber = default(EntityRef<PhoneNumber>);
			OnCreated();
		}
		
		[Column(Name="phone_number_account_id", Storage="_PhoneNumberAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneNumberAccountId
		{
			get
			{
				return this._PhoneNumberAccountId;
			}
			set
			{
				if ((this._PhoneNumberAccountId != value))
				{
					this.OnPhoneNumberAccountIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberAccountId = value;
					this.SendPropertyChanged("PhoneNumberAccountId");
					this.OnPhoneNumberAccountIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_id", Storage="_PhoneNumberId", DbType="Int NOT NULL")]
		public int PhoneNumberId
		{
			get
			{
				return this._PhoneNumberId;
			}
			set
			{
				if ((this._PhoneNumberId != value))
				{
					this.OnPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberId = value;
					this.SendPropertyChanged("PhoneNumberId");
					this.OnPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="account_id", Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_type_id", Storage="_PhoneNumberTypeId", DbType="Int NOT NULL")]
		public int PhoneNumberTypeId
		{
			get
			{
				return this._PhoneNumberTypeId;
			}
			set
			{
				if ((this._PhoneNumberTypeId != value))
				{
					this.OnPhoneNumberTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberTypeId = value;
					this.SendPropertyChanged("PhoneNumberTypeId");
					this.OnPhoneNumberTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Account_PhoneNumberAccount", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PhoneNumberAccounts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PhoneNumberAccounts.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[Association(Name="PhoneNumber_PhoneNumberAccount", Storage="_PhoneNumber", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber PhoneNumber
		{
			get
			{
				return this._PhoneNumber.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._PhoneNumber.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumber.Entity = null;
						previousValue.PhoneNumberAccounts.Remove(this);
					}
					this._PhoneNumber.Entity = value;
					if ((value != null))
					{
						value.PhoneNumberAccounts.Add(this);
						this._PhoneNumberId = value.PhoneNumberId;
					}
					else
					{
						this._PhoneNumberId = default(int);
					}
					this.SendPropertyChanged("PhoneNumber");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.phone_number")]
	public partial class PhoneNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneNumberId;
		
		private string _Number;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntitySet<PhoneNumberProgramAgreement> _PhoneNumberProgramAgreements;
		
		private EntitySet<PhoneNumberOrganization> _PhoneNumberOrganizations;
		
		private EntitySet<PhoneNumberCampaign> _PhoneNumberCampaigns;
		
		private EntitySet<PhoneNumberAccount> _PhoneNumberAccounts;
		
		private EntitySet<Warehouse> _warehouses;
		
		private EntitySet<Warehouse> _warehouses1;
		
		private EntitySet<Warehouse> _Warehouses2;
		
		private EntitySet<ShipmentGroup> _shipment_groups;
		
		private EntitySet<ShipmentGroup> _ShipmentGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneNumberIdChanging(int value);
    partial void OnPhoneNumberIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public PhoneNumber()
		{
			this._PhoneNumberProgramAgreements = new EntitySet<PhoneNumberProgramAgreement>(new Action<PhoneNumberProgramAgreement>(this.attach_PhoneNumberProgramAgreements), new Action<PhoneNumberProgramAgreement>(this.detach_PhoneNumberProgramAgreements));
			this._PhoneNumberOrganizations = new EntitySet<PhoneNumberOrganization>(new Action<PhoneNumberOrganization>(this.attach_PhoneNumberOrganizations), new Action<PhoneNumberOrganization>(this.detach_PhoneNumberOrganizations));
			this._PhoneNumberCampaigns = new EntitySet<PhoneNumberCampaign>(new Action<PhoneNumberCampaign>(this.attach_PhoneNumberCampaigns), new Action<PhoneNumberCampaign>(this.detach_PhoneNumberCampaigns));
			this._PhoneNumberAccounts = new EntitySet<PhoneNumberAccount>(new Action<PhoneNumberAccount>(this.attach_PhoneNumberAccounts), new Action<PhoneNumberAccount>(this.detach_PhoneNumberAccounts));
			this._warehouses = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_warehouses), new Action<Warehouse>(this.detach_warehouses));
			this._warehouses1 = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_warehouses1), new Action<Warehouse>(this.detach_warehouses1));
			this._Warehouses2 = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_Warehouses2), new Action<Warehouse>(this.detach_Warehouses2));
			this._shipment_groups = new EntitySet<ShipmentGroup>(new Action<ShipmentGroup>(this.attach_shipment_groups), new Action<ShipmentGroup>(this.detach_shipment_groups));
			this._ShipmentGroups = new EntitySet<ShipmentGroup>(new Action<ShipmentGroup>(this.attach_ShipmentGroups), new Action<ShipmentGroup>(this.detach_ShipmentGroups));
			OnCreated();
		}
		
		[Column(Name="phone_number_id", Storage="_PhoneNumberId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneNumberId
		{
			get
			{
				return this._PhoneNumberId;
			}
			set
			{
				if ((this._PhoneNumberId != value))
				{
					this.OnPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberId = value;
					this.SendPropertyChanged("PhoneNumberId");
					this.OnPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number", Storage="_Number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="PhoneNumber_PhoneNumberProgramAgreement", Storage="_PhoneNumberProgramAgreements", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId")]
		public EntitySet<PhoneNumberProgramAgreement> PhoneNumberProgramAgreements
		{
			get
			{
				return this._PhoneNumberProgramAgreements;
			}
			set
			{
				this._PhoneNumberProgramAgreements.Assign(value);
			}
		}
		
		[Association(Name="PhoneNumber_PhoneNumberOrganization", Storage="_PhoneNumberOrganizations", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId")]
		public EntitySet<PhoneNumberOrganization> PhoneNumberOrganizations
		{
			get
			{
				return this._PhoneNumberOrganizations;
			}
			set
			{
				this._PhoneNumberOrganizations.Assign(value);
			}
		}
		
		[Association(Name="PhoneNumber_PhoneNumberCampaign", Storage="_PhoneNumberCampaigns", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId")]
		public EntitySet<PhoneNumberCampaign> PhoneNumberCampaigns
		{
			get
			{
				return this._PhoneNumberCampaigns;
			}
			set
			{
				this._PhoneNumberCampaigns.Assign(value);
			}
		}
		
		[Association(Name="PhoneNumber_PhoneNumberAccount", Storage="_PhoneNumberAccounts", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId")]
		public EntitySet<PhoneNumberAccount> PhoneNumberAccounts
		{
			get
			{
				return this._PhoneNumberAccounts;
			}
			set
			{
				this._PhoneNumberAccounts.Assign(value);
			}
		}
		
		[Association(Name="PhoneNumber_Warehouse", Storage="_warehouses", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId")]
		public EntitySet<Warehouse> warehouses
		{
			get
			{
				return this._warehouses;
			}
			set
			{
				this._warehouses.Assign(value);
			}
		}
		
		[Association(Name="PhoneNumber_Warehouse1", Storage="_warehouses1", ThisKey="PhoneNumberId", OtherKey="FaxNumberId")]
		public EntitySet<Warehouse> warehouses1
		{
			get
			{
				return this._warehouses1;
			}
			set
			{
				this._warehouses1.Assign(value);
			}
		}
		
		[Association(Name="PhoneNumber_Warehouse2", Storage="_Warehouses2", ThisKey="PhoneNumberId", OtherKey="ReceivingPhoneNumberId")]
		public EntitySet<Warehouse> Warehouses2
		{
			get
			{
				return this._Warehouses2;
			}
			set
			{
				this._Warehouses2.Assign(value);
			}
		}
		
		[Association(Name="PhoneNumber_ShipmentGroup", Storage="_shipment_groups", ThisKey="PhoneNumberId", OtherKey="ShippingPhoneNumberId")]
		public EntitySet<ShipmentGroup> shipment_groups
		{
			get
			{
				return this._shipment_groups;
			}
			set
			{
				this._shipment_groups.Assign(value);
			}
		}
		
		[Association(Name="PhoneNumber_ShipmentGroup1", Storage="_ShipmentGroups", ThisKey="PhoneNumberId", OtherKey="ShippingFaxNumberId")]
		public EntitySet<ShipmentGroup> ShipmentGroups
		{
			get
			{
				return this._ShipmentGroups;
			}
			set
			{
				this._ShipmentGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhoneNumberProgramAgreements(PhoneNumberProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = this;
		}
		
		private void detach_PhoneNumberProgramAgreements(PhoneNumberProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = null;
		}
		
		private void attach_PhoneNumberOrganizations(PhoneNumberOrganization entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = this;
		}
		
		private void detach_PhoneNumberOrganizations(PhoneNumberOrganization entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = null;
		}
		
		private void attach_PhoneNumberCampaigns(PhoneNumberCampaign entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = this;
		}
		
		private void detach_PhoneNumberCampaigns(PhoneNumberCampaign entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = null;
		}
		
		private void attach_PhoneNumberAccounts(PhoneNumberAccount entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = this;
		}
		
		private void detach_PhoneNumberAccounts(PhoneNumberAccount entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = null;
		}
		
		private void attach_warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = this;
		}
		
		private void detach_warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = null;
		}
		
		private void attach_warehouses1(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber1 = this;
		}
		
		private void detach_warehouses1(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber1 = null;
		}
		
		private void attach_Warehouses2(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber2 = this;
		}
		
		private void detach_Warehouses2(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber2 = null;
		}
		
		private void attach_shipment_groups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = this;
		}
		
		private void detach_shipment_groups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumber = null;
		}
		
		private void attach_ShipmentGroups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.FaxNumber = this;
		}
		
		private void detach_ShipmentGroups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.FaxNumber = null;
		}
	}
	
	[Table(Name="dbo.email")]
	public partial class Email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailId;
		
		private string _EmailAddress;
		
		private string _RecipientName;
		
		private int _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntitySet<EmailAccount> _EmailAccounts;
		
		private EntitySet<EmailCampaign> _EmailCampaigns;
		
		private EntitySet<EmailOrganization> _EmailOrganizations;
		
		private EntitySet<EmailProgramAgreement> _EmailProgramAgreements;
		
		private EntitySet<Warehouse> _Warehouses;
		
		private EntitySet<ShipmentGroup> _ShipmentGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailIdChanging(int value);
    partial void OnEmailIdChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnRecipientNameChanging(string value);
    partial void OnRecipientNameChanged();
    partial void OnIsDeletedChanging(int value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public Email()
		{
			this._EmailAccounts = new EntitySet<EmailAccount>(new Action<EmailAccount>(this.attach_EmailAccounts), new Action<EmailAccount>(this.detach_EmailAccounts));
			this._EmailCampaigns = new EntitySet<EmailCampaign>(new Action<EmailCampaign>(this.attach_EmailCampaigns), new Action<EmailCampaign>(this.detach_EmailCampaigns));
			this._EmailOrganizations = new EntitySet<EmailOrganization>(new Action<EmailOrganization>(this.attach_EmailOrganizations), new Action<EmailOrganization>(this.detach_EmailOrganizations));
			this._EmailProgramAgreements = new EntitySet<EmailProgramAgreement>(new Action<EmailProgramAgreement>(this.attach_EmailProgramAgreements), new Action<EmailProgramAgreement>(this.detach_EmailProgramAgreements));
			this._Warehouses = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_Warehouses), new Action<Warehouse>(this.detach_Warehouses));
			this._ShipmentGroups = new EntitySet<ShipmentGroup>(new Action<ShipmentGroup>(this.attach_ShipmentGroups), new Action<ShipmentGroup>(this.detach_ShipmentGroups));
			OnCreated();
		}
		
		[Column(Name="email_id", Storage="_EmailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[Column(Name="email_address", Storage="_EmailAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[Column(Name="recipient_name", Storage="_RecipientName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RecipientName
		{
			get
			{
				return this._RecipientName;
			}
			set
			{
				if ((this._RecipientName != value))
				{
					this.OnRecipientNameChanging(value);
					this.SendPropertyChanging();
					this._RecipientName = value;
					this.SendPropertyChanged("RecipientName");
					this.OnRecipientNameChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Int NOT NULL")]
		public int IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Email_EmailAccount", Storage="_EmailAccounts", ThisKey="EmailId", OtherKey="EmailId")]
		public EntitySet<EmailAccount> EmailAccounts
		{
			get
			{
				return this._EmailAccounts;
			}
			set
			{
				this._EmailAccounts.Assign(value);
			}
		}
		
		[Association(Name="Email_EmailCampaign", Storage="_EmailCampaigns", ThisKey="EmailId", OtherKey="EmailId")]
		public EntitySet<EmailCampaign> EmailCampaigns
		{
			get
			{
				return this._EmailCampaigns;
			}
			set
			{
				this._EmailCampaigns.Assign(value);
			}
		}
		
		[Association(Name="Email_EmailOrganization", Storage="_EmailOrganizations", ThisKey="EmailId", OtherKey="EmailId")]
		public EntitySet<EmailOrganization> EmailOrganizations
		{
			get
			{
				return this._EmailOrganizations;
			}
			set
			{
				this._EmailOrganizations.Assign(value);
			}
		}
		
		[Association(Name="Email_EmailProgramAgreement", Storage="_EmailProgramAgreements", ThisKey="EmailId", OtherKey="EmailId")]
		public EntitySet<EmailProgramAgreement> EmailProgramAgreements
		{
			get
			{
				return this._EmailProgramAgreements;
			}
			set
			{
				this._EmailProgramAgreements.Assign(value);
			}
		}
		
		[Association(Name="Email_Warehouse", Storage="_Warehouses", ThisKey="EmailId", OtherKey="EmailId")]
		public EntitySet<Warehouse> Warehouses
		{
			get
			{
				return this._Warehouses;
			}
			set
			{
				this._Warehouses.Assign(value);
			}
		}
		
		[Association(Name="Email_ShipmentGroup", Storage="_ShipmentGroups", ThisKey="EmailId", OtherKey="ShippingEmailId")]
		public EntitySet<ShipmentGroup> ShipmentGroups
		{
			get
			{
				return this._ShipmentGroups;
			}
			set
			{
				this._ShipmentGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmailAccounts(EmailAccount entity)
		{
			this.SendPropertyChanging();
			entity.Email = this;
		}
		
		private void detach_EmailAccounts(EmailAccount entity)
		{
			this.SendPropertyChanging();
			entity.Email = null;
		}
		
		private void attach_EmailCampaigns(EmailCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Email = this;
		}
		
		private void detach_EmailCampaigns(EmailCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Email = null;
		}
		
		private void attach_EmailOrganizations(EmailOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Email = this;
		}
		
		private void detach_EmailOrganizations(EmailOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Email = null;
		}
		
		private void attach_EmailProgramAgreements(EmailProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.Email = this;
		}
		
		private void detach_EmailProgramAgreements(EmailProgramAgreement entity)
		{
			this.SendPropertyChanging();
			entity.Email = null;
		}
		
		private void attach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.Email = this;
		}
		
		private void detach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.Email = null;
		}
		
		private void attach_ShipmentGroups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.Email = this;
		}
		
		private void detach_ShipmentGroups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.Email = null;
		}
	}
	
	[Table(Name="dbo.email_account")]
	public partial class EmailAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailAccountId;
		
		private int _EmailId;
		
		private int _AccountId;
		
		private int _EmailTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Email> _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailAccountIdChanging(int value);
    partial void OnEmailAccountIdChanged();
    partial void OnEmailIdChanging(int value);
    partial void OnEmailIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnEmailTypeIdChanging(int value);
    partial void OnEmailTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public EmailAccount()
		{
			this._Account = default(EntityRef<Account>);
			this._Email = default(EntityRef<Email>);
			OnCreated();
		}
		
		[Column(Name="email_account_id", Storage="_EmailAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailAccountId
		{
			get
			{
				return this._EmailAccountId;
			}
			set
			{
				if ((this._EmailAccountId != value))
				{
					this.OnEmailAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EmailAccountId = value;
					this.SendPropertyChanged("EmailAccountId");
					this.OnEmailAccountIdChanged();
				}
			}
		}
		
		[Column(Name="email_id", Storage="_EmailId", DbType="Int NOT NULL")]
		public int EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[Column(Name="account_id", Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="email_type_id", Storage="_EmailTypeId", DbType="Int NOT NULL")]
		public int EmailTypeId
		{
			get
			{
				return this._EmailTypeId;
			}
			set
			{
				if ((this._EmailTypeId != value))
				{
					this.OnEmailTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmailTypeId = value;
					this.SendPropertyChanged("EmailTypeId");
					this.OnEmailTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Account_EmailAccount", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.EmailAccounts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.EmailAccounts.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[Association(Name="Email_EmailAccount", Storage="_Email", ThisKey="EmailId", OtherKey="EmailId", IsForeignKey=true)]
		public Email Email
		{
			get
			{
				return this._Email.Entity;
			}
			set
			{
				Email previousValue = this._Email.Entity;
				if (((previousValue != value) 
							|| (this._Email.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Email.Entity = null;
						previousValue.EmailAccounts.Remove(this);
					}
					this._Email.Entity = value;
					if ((value != null))
					{
						value.EmailAccounts.Add(this);
						this._EmailId = value.EmailId;
					}
					else
					{
						this._EmailId = default(int);
					}
					this.SendPropertyChanged("Email");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.email_campaign")]
	public partial class EmailCampaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailCampaignId;
		
		private int _EmailId;
		
		private int _CampaignId;
		
		private int _EmailTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Email> _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailCampaignIdChanging(int value);
    partial void OnEmailCampaignIdChanged();
    partial void OnEmailIdChanging(int value);
    partial void OnEmailIdChanged();
    partial void OnCampaignIdChanging(int value);
    partial void OnCampaignIdChanged();
    partial void OnEmailTypeIdChanging(int value);
    partial void OnEmailTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public EmailCampaign()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._Email = default(EntityRef<Email>);
			OnCreated();
		}
		
		[Column(Name="email_campaign_id", Storage="_EmailCampaignId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailCampaignId
		{
			get
			{
				return this._EmailCampaignId;
			}
			set
			{
				if ((this._EmailCampaignId != value))
				{
					this.OnEmailCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._EmailCampaignId = value;
					this.SendPropertyChanged("EmailCampaignId");
					this.OnEmailCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="email_id", Storage="_EmailId", DbType="Int NOT NULL")]
		public int EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[Column(Name="campaign_id", Storage="_CampaignId", DbType="Int NOT NULL")]
		public int CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="email_type_id", Storage="_EmailTypeId", DbType="Int NOT NULL")]
		public int EmailTypeId
		{
			get
			{
				return this._EmailTypeId;
			}
			set
			{
				if ((this._EmailTypeId != value))
				{
					this.OnEmailTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmailTypeId = value;
					this.SendPropertyChanged("EmailTypeId");
					this.OnEmailTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Campaign_EmailCampaign", Storage="_Campaign", ThisKey="CampaignId", OtherKey="CampaignId", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.EmailCampaigns.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.EmailCampaigns.Add(this);
						this._CampaignId = value.CampaignId;
					}
					else
					{
						this._CampaignId = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[Association(Name="Email_EmailCampaign", Storage="_Email", ThisKey="EmailId", OtherKey="EmailId", IsForeignKey=true)]
		public Email Email
		{
			get
			{
				return this._Email.Entity;
			}
			set
			{
				Email previousValue = this._Email.Entity;
				if (((previousValue != value) 
							|| (this._Email.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Email.Entity = null;
						previousValue.EmailCampaigns.Remove(this);
					}
					this._Email.Entity = value;
					if ((value != null))
					{
						value.EmailCampaigns.Add(this);
						this._EmailId = value.EmailId;
					}
					else
					{
						this._EmailId = default(int);
					}
					this.SendPropertyChanged("Email");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.email_organization")]
	public partial class EmailOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailOrganizationId;
		
		private int _EmailId;
		
		private int _OrganizationId;
		
		private int _EmailTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Email> _Email;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailOrganizationIdChanging(int value);
    partial void OnEmailOrganizationIdChanged();
    partial void OnEmailIdChanging(int value);
    partial void OnEmailIdChanged();
    partial void OnOrganizationIdChanging(int value);
    partial void OnOrganizationIdChanged();
    partial void OnEmailTypeIdChanging(int value);
    partial void OnEmailTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public EmailOrganization()
		{
			this._Email = default(EntityRef<Email>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[Column(Name="email_organization_id", Storage="_EmailOrganizationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailOrganizationId
		{
			get
			{
				return this._EmailOrganizationId;
			}
			set
			{
				if ((this._EmailOrganizationId != value))
				{
					this.OnEmailOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._EmailOrganizationId = value;
					this.SendPropertyChanged("EmailOrganizationId");
					this.OnEmailOrganizationIdChanged();
				}
			}
		}
		
		[Column(Name="email_id", Storage="_EmailId", DbType="Int NOT NULL")]
		public int EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[Column(Name="organization_id", Storage="_OrganizationId", DbType="Int NOT NULL")]
		public int OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[Column(Name="email_type_id", Storage="_EmailTypeId", DbType="Int NOT NULL")]
		public int EmailTypeId
		{
			get
			{
				return this._EmailTypeId;
			}
			set
			{
				if ((this._EmailTypeId != value))
				{
					this.OnEmailTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmailTypeId = value;
					this.SendPropertyChanged("EmailTypeId");
					this.OnEmailTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Email_EmailOrganization", Storage="_Email", ThisKey="EmailId", OtherKey="EmailId", IsForeignKey=true)]
		public Email Email
		{
			get
			{
				return this._Email.Entity;
			}
			set
			{
				Email previousValue = this._Email.Entity;
				if (((previousValue != value) 
							|| (this._Email.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Email.Entity = null;
						previousValue.EmailOrganizations.Remove(this);
					}
					this._Email.Entity = value;
					if ((value != null))
					{
						value.EmailOrganizations.Add(this);
						this._EmailId = value.EmailId;
					}
					else
					{
						this._EmailId = default(int);
					}
					this.SendPropertyChanged("Email");
				}
			}
		}
		
		[Association(Name="Organization_EmailOrganization", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.EmailOrganizations.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.EmailOrganizations.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.email_program_agreement")]
	public partial class EmailProgramAgreement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailProgramAgreementId;
		
		private int _EmailId;
		
		private int _ProgramAgreementId;
		
		private int _EmailTypeId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<ProgramAgreement> _ProgramAgreement;
		
		private EntityRef<Email> _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailProgramAgreementIdChanging(int value);
    partial void OnEmailProgramAgreementIdChanged();
    partial void OnEmailIdChanging(int value);
    partial void OnEmailIdChanged();
    partial void OnProgramAgreementIdChanging(int value);
    partial void OnProgramAgreementIdChanged();
    partial void OnEmailTypeIdChanging(int value);
    partial void OnEmailTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public EmailProgramAgreement()
		{
			this._ProgramAgreement = default(EntityRef<ProgramAgreement>);
			this._Email = default(EntityRef<Email>);
			OnCreated();
		}
		
		[Column(Name="email_program_agreement_id", Storage="_EmailProgramAgreementId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailProgramAgreementId
		{
			get
			{
				return this._EmailProgramAgreementId;
			}
			set
			{
				if ((this._EmailProgramAgreementId != value))
				{
					this.OnEmailProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._EmailProgramAgreementId = value;
					this.SendPropertyChanged("EmailProgramAgreementId");
					this.OnEmailProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="email_id", Storage="_EmailId", DbType="Int NOT NULL")]
		public int EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_id", Storage="_ProgramAgreementId", DbType="Int NOT NULL")]
		public int ProgramAgreementId
		{
			get
			{
				return this._ProgramAgreementId;
			}
			set
			{
				if ((this._ProgramAgreementId != value))
				{
					this.OnProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementId = value;
					this.SendPropertyChanged("ProgramAgreementId");
					this.OnProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="email_type_id", Storage="_EmailTypeId", DbType="Int NOT NULL")]
		public int EmailTypeId
		{
			get
			{
				return this._EmailTypeId;
			}
			set
			{
				if ((this._EmailTypeId != value))
				{
					this.OnEmailTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmailTypeId = value;
					this.SendPropertyChanged("EmailTypeId");
					this.OnEmailTypeIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="ProgramAgreement_EmailProgramAgreement", Storage="_ProgramAgreement", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId", IsForeignKey=true)]
		public ProgramAgreement ProgramAgreement
		{
			get
			{
				return this._ProgramAgreement.Entity;
			}
			set
			{
				ProgramAgreement previousValue = this._ProgramAgreement.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreement.Entity = null;
						previousValue.EmailProgramAgreements.Remove(this);
					}
					this._ProgramAgreement.Entity = value;
					if ((value != null))
					{
						value.EmailProgramAgreements.Add(this);
						this._ProgramAgreementId = value.ProgramAgreementId;
					}
					else
					{
						this._ProgramAgreementId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreement");
				}
			}
		}
		
		[Association(Name="Email_EmailProgramAgreement", Storage="_Email", ThisKey="EmailId", OtherKey="EmailId", IsForeignKey=true)]
		public Email Email
		{
			get
			{
				return this._Email.Entity;
			}
			set
			{
				Email previousValue = this._Email.Entity;
				if (((previousValue != value) 
							|| (this._Email.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Email.Entity = null;
						previousValue.EmailProgramAgreements.Remove(this);
					}
					this._Email.Entity = value;
					if ((value != null))
					{
						value.EmailProgramAgreements.Add(this);
						this._EmailId = value.EmailId;
					}
					else
					{
						this._EmailId = default(int);
					}
					this.SendPropertyChanged("Email");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.organization_level")]
	public partial class OrganizationLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrganizationLevelId;
		
		private string _OrganizationLevelName;
		
		private string _ARSLEV;
		
		private EntitySet<Organization> _Organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationLevelIdChanging(int value);
    partial void OnOrganizationLevelIdChanged();
    partial void OnOrganizationLevelNameChanging(string value);
    partial void OnOrganizationLevelNameChanged();
    partial void OnARSLEVChanging(string value);
    partial void OnARSLEVChanged();
    #endregion
		
		public OrganizationLevel()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			OnCreated();
		}
		
		[Column(Name="organization_level_id", Storage="_OrganizationLevelId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrganizationLevelId
		{
			get
			{
				return this._OrganizationLevelId;
			}
			set
			{
				if ((this._OrganizationLevelId != value))
				{
					this.OnOrganizationLevelIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationLevelId = value;
					this.SendPropertyChanged("OrganizationLevelId");
					this.OnOrganizationLevelIdChanged();
				}
			}
		}
		
		[Column(Name="organization_level_name", Storage="_OrganizationLevelName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrganizationLevelName
		{
			get
			{
				return this._OrganizationLevelName;
			}
			set
			{
				if ((this._OrganizationLevelName != value))
				{
					this.OnOrganizationLevelNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationLevelName = value;
					this.SendPropertyChanged("OrganizationLevelName");
					this.OnOrganizationLevelNameChanged();
				}
			}
		}
		
		[Column(Storage="_ARSLEV", DbType="VarChar(50)")]
		public string ARSLEV
		{
			get
			{
				return this._ARSLEV;
			}
			set
			{
				if ((this._ARSLEV != value))
				{
					this.OnARSLEVChanging(value);
					this.SendPropertyChanging();
					this._ARSLEV = value;
					this.SendPropertyChanged("ARSLEV");
					this.OnARSLEVChanged();
				}
			}
		}
		
		[Association(Name="OrganizationLevel_Organization", Storage="_Organizations", ThisKey="OrganizationLevelId", OtherKey="OrganizationLevelId")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationLevel = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationLevel = null;
		}
	}
	
	[Table(Name="dbo.CM_Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<FormPermission> _FormPermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._FormPermissions = new EntitySet<FormPermission>(new Action<FormPermission>(this.attach_FormPermissions), new Action<FormPermission>(this.detach_FormPermissions));
			OnCreated();
		}
		
		[Column(Name="Role_ID", Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Role_UserRole", Storage="_UserRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[Association(Name="Role_FormPermission", Storage="_FormPermissions", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<FormPermission> FormPermissions
		{
			get
			{
				return this._FormPermissions;
			}
			set
			{
				this._FormPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_FormPermissions(FormPermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_FormPermissions(FormPermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[Table(Name="dbo.subdivision")]
	public partial class Subdivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubdivisionCode;
		
		private string _CountryCode;
		
		private string _SubdivisionName1;
		
		private string _SubdivisionName2;
		
		private string _SubdivisionName3;
		
		private string _RegionalDivision;
		
		private string _SubdivisionCategory;
		
		private EntitySet<PostalAddress> _PostalAddresses;
		
		private EntitySet<TaxCalculationMethod> _TaxCalculationMethods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubdivisionCodeChanging(string value);
    partial void OnSubdivisionCodeChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnSubdivisionName1Changing(string value);
    partial void OnSubdivisionName1Changed();
    partial void OnSubdivisionName2Changing(string value);
    partial void OnSubdivisionName2Changed();
    partial void OnSubdivisionName3Changing(string value);
    partial void OnSubdivisionName3Changed();
    partial void OnRegionalDivisionChanging(string value);
    partial void OnRegionalDivisionChanged();
    partial void OnSubdivisionCategoryChanging(string value);
    partial void OnSubdivisionCategoryChanged();
    #endregion
		
		public Subdivision()
		{
			this._PostalAddresses = new EntitySet<PostalAddress>(new Action<PostalAddress>(this.attach_PostalAddresses), new Action<PostalAddress>(this.detach_PostalAddresses));
			this._TaxCalculationMethods = new EntitySet<TaxCalculationMethod>(new Action<TaxCalculationMethod>(this.attach_TaxCalculationMethods), new Action<TaxCalculationMethod>(this.detach_TaxCalculationMethods));
			OnCreated();
		}
		
		[Column(Name="subdivision_code", Storage="_SubdivisionCode", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubdivisionCode
		{
			get
			{
				return this._SubdivisionCode;
			}
			set
			{
				if ((this._SubdivisionCode != value))
				{
					this.OnSubdivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._SubdivisionCode = value;
					this.SendPropertyChanged("SubdivisionCode");
					this.OnSubdivisionCodeChanged();
				}
			}
		}
		
		[Column(Name="country_code", Storage="_CountryCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[Column(Name="subdivision_name_1", Storage="_SubdivisionName1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubdivisionName1
		{
			get
			{
				return this._SubdivisionName1;
			}
			set
			{
				if ((this._SubdivisionName1 != value))
				{
					this.OnSubdivisionName1Changing(value);
					this.SendPropertyChanging();
					this._SubdivisionName1 = value;
					this.SendPropertyChanged("SubdivisionName1");
					this.OnSubdivisionName1Changed();
				}
			}
		}
		
		[Column(Name="subdivision_name_2", Storage="_SubdivisionName2", DbType="NVarChar(100)")]
		public string SubdivisionName2
		{
			get
			{
				return this._SubdivisionName2;
			}
			set
			{
				if ((this._SubdivisionName2 != value))
				{
					this.OnSubdivisionName2Changing(value);
					this.SendPropertyChanging();
					this._SubdivisionName2 = value;
					this.SendPropertyChanged("SubdivisionName2");
					this.OnSubdivisionName2Changed();
				}
			}
		}
		
		[Column(Name="subdivision_name_3", Storage="_SubdivisionName3", DbType="NVarChar(100)")]
		public string SubdivisionName3
		{
			get
			{
				return this._SubdivisionName3;
			}
			set
			{
				if ((this._SubdivisionName3 != value))
				{
					this.OnSubdivisionName3Changing(value);
					this.SendPropertyChanging();
					this._SubdivisionName3 = value;
					this.SendPropertyChanged("SubdivisionName3");
					this.OnSubdivisionName3Changed();
				}
			}
		}
		
		[Column(Name="regional_division", Storage="_RegionalDivision", DbType="NVarChar(10)")]
		public string RegionalDivision
		{
			get
			{
				return this._RegionalDivision;
			}
			set
			{
				if ((this._RegionalDivision != value))
				{
					this.OnRegionalDivisionChanging(value);
					this.SendPropertyChanging();
					this._RegionalDivision = value;
					this.SendPropertyChanged("RegionalDivision");
					this.OnRegionalDivisionChanged();
				}
			}
		}
		
		[Column(Name="subdivision_category", Storage="_SubdivisionCategory", DbType="NVarChar(50)")]
		public string SubdivisionCategory
		{
			get
			{
				return this._SubdivisionCategory;
			}
			set
			{
				if ((this._SubdivisionCategory != value))
				{
					this.OnSubdivisionCategoryChanging(value);
					this.SendPropertyChanging();
					this._SubdivisionCategory = value;
					this.SendPropertyChanged("SubdivisionCategory");
					this.OnSubdivisionCategoryChanged();
				}
			}
		}
		
		[Association(Name="Subdivision_PostalAddress", Storage="_PostalAddresses", ThisKey="SubdivisionCode", OtherKey="SubdivisionCode")]
		public EntitySet<PostalAddress> PostalAddresses
		{
			get
			{
				return this._PostalAddresses;
			}
			set
			{
				this._PostalAddresses.Assign(value);
			}
		}
		
		[Association(Name="Subdivision_TaxCalculationMethod", Storage="_TaxCalculationMethods", ThisKey="SubdivisionCode", OtherKey="SubdivisionCode")]
		public EntitySet<TaxCalculationMethod> TaxCalculationMethods
		{
			get
			{
				return this._TaxCalculationMethods;
			}
			set
			{
				this._TaxCalculationMethods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostalAddresses(PostalAddress entity)
		{
			this.SendPropertyChanging();
			entity.Subdivision = this;
		}
		
		private void detach_PostalAddresses(PostalAddress entity)
		{
			this.SendPropertyChanging();
			entity.Subdivision = null;
		}
		
		private void attach_TaxCalculationMethods(TaxCalculationMethod entity)
		{
			this.SendPropertyChanging();
			entity.Subdivision = this;
		}
		
		private void detach_TaxCalculationMethods(TaxCalculationMethod entity)
		{
			this.SendPropertyChanging();
			entity.Subdivision = null;
		}
	}
	
	[Table(Name="dbo.form_section")]
	public partial class FormSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormSectionId;
		
		private int _FormId;
		
		private int _FormSectionTypeId;
		
		private System.Nullable<int> _FormSectionNumber;
		
		private string _FormSectionTitle;
		
		private string _Description;
		
		private int _CatalogItemCategoryId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Form> _Form;
		
		private EntityRef<CatalogItemCategory> _CatalogItemCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormSectionIdChanging(int value);
    partial void OnFormSectionIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnFormSectionTypeIdChanging(int value);
    partial void OnFormSectionTypeIdChanged();
    partial void OnFormSectionNumberChanging(System.Nullable<int> value);
    partial void OnFormSectionNumberChanged();
    partial void OnFormSectionTitleChanging(string value);
    partial void OnFormSectionTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCatalogItemCategoryIdChanging(int value);
    partial void OnCatalogItemCategoryIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public FormSection()
		{
			this._Form = default(EntityRef<Form>);
			this._CatalogItemCategory = default(EntityRef<CatalogItemCategory>);
			OnCreated();
		}
		
		[Column(Name="form_section_id", Storage="_FormSectionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormSectionId
		{
			get
			{
				return this._FormSectionId;
			}
			set
			{
				if ((this._FormSectionId != value))
				{
					this.OnFormSectionIdChanging(value);
					this.SendPropertyChanging();
					this._FormSectionId = value;
					this.SendPropertyChanged("FormSectionId");
					this.OnFormSectionIdChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="form_section_type_id", Storage="_FormSectionTypeId", DbType="Int NOT NULL")]
		public int FormSectionTypeId
		{
			get
			{
				return this._FormSectionTypeId;
			}
			set
			{
				if ((this._FormSectionTypeId != value))
				{
					this.OnFormSectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FormSectionTypeId = value;
					this.SendPropertyChanged("FormSectionTypeId");
					this.OnFormSectionTypeIdChanged();
				}
			}
		}
		
		[Column(Name="form_section_number", Storage="_FormSectionNumber", DbType="Int")]
		public System.Nullable<int> FormSectionNumber
		{
			get
			{
				return this._FormSectionNumber;
			}
			set
			{
				if ((this._FormSectionNumber != value))
				{
					this.OnFormSectionNumberChanging(value);
					this.SendPropertyChanging();
					this._FormSectionNumber = value;
					this.SendPropertyChanged("FormSectionNumber");
					this.OnFormSectionNumberChanged();
				}
			}
		}
		
		[Column(Name="form_section_title", Storage="_FormSectionTitle", DbType="VarChar(100)")]
		public string FormSectionTitle
		{
			get
			{
				return this._FormSectionTitle;
			}
			set
			{
				if ((this._FormSectionTitle != value))
				{
					this.OnFormSectionTitleChanging(value);
					this.SendPropertyChanging();
					this._FormSectionTitle = value;
					this.SendPropertyChanged("FormSectionTitle");
					this.OnFormSectionTitleChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_category_id", Storage="_CatalogItemCategoryId", DbType="Int NOT NULL")]
		public int CatalogItemCategoryId
		{
			get
			{
				return this._CatalogItemCategoryId;
			}
			set
			{
				if ((this._CatalogItemCategoryId != value))
				{
					this.OnCatalogItemCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemCategoryId = value;
					this.SendPropertyChanged("CatalogItemCategoryId");
					this.OnCatalogItemCategoryIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Form_FormSection", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.FormSections.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.FormSections.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		[Association(Name="CatalogItemCategory_FormSection", Storage="_CatalogItemCategory", ThisKey="CatalogItemCategoryId", OtherKey="CatalogItemCategoryId", IsForeignKey=true)]
		public CatalogItemCategory CatalogItemCategory
		{
			get
			{
				return this._CatalogItemCategory.Entity;
			}
			set
			{
				CatalogItemCategory previousValue = this._CatalogItemCategory.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItemCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItemCategory.Entity = null;
						previousValue.FormSections.Remove(this);
					}
					this._CatalogItemCategory.Entity = value;
					if ((value != null))
					{
						value.FormSections.Add(this);
						this._CatalogItemCategoryId = value.CatalogItemCategoryId;
					}
					else
					{
						this._CatalogItemCategoryId = default(int);
					}
					this.SendPropertyChanged("CatalogItemCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.catalog_item_category")]
	public partial class CatalogItemCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogItemCategoryId;
		
		private int _CatalogId;
		
		private System.Nullable<int> _ParentCatalogItemCategoryId;
		
		private string _CatalogItemCategoryName;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntitySet<FormSection> _FormSections;
		
		private EntitySet<CatalogItemCategory> _CatalogItemCategories;
		
		private EntityRef<CatalogItemCategory> _catalog_item_category1;
		
		private EntityRef<Catalog> _Catalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogItemCategoryIdChanging(int value);
    partial void OnCatalogItemCategoryIdChanged();
    partial void OnCatalogIdChanging(int value);
    partial void OnCatalogIdChanged();
    partial void OnParentCatalogItemCategoryIdChanging(System.Nullable<int> value);
    partial void OnParentCatalogItemCategoryIdChanged();
    partial void OnCatalogItemCategoryNameChanging(string value);
    partial void OnCatalogItemCategoryNameChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public CatalogItemCategory()
		{
			this._FormSections = new EntitySet<FormSection>(new Action<FormSection>(this.attach_FormSections), new Action<FormSection>(this.detach_FormSections));
			this._CatalogItemCategories = new EntitySet<CatalogItemCategory>(new Action<CatalogItemCategory>(this.attach_CatalogItemCategories), new Action<CatalogItemCategory>(this.detach_CatalogItemCategories));
			this._catalog_item_category1 = default(EntityRef<CatalogItemCategory>);
			this._Catalog = default(EntityRef<Catalog>);
			OnCreated();
		}
		
		[Column(Name="catalog_item_category_id", Storage="_CatalogItemCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogItemCategoryId
		{
			get
			{
				return this._CatalogItemCategoryId;
			}
			set
			{
				if ((this._CatalogItemCategoryId != value))
				{
					this.OnCatalogItemCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemCategoryId = value;
					this.SendPropertyChanged("CatalogItemCategoryId");
					this.OnCatalogItemCategoryIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_id", Storage="_CatalogId", DbType="Int NOT NULL")]
		public int CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this.OnCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogId = value;
					this.SendPropertyChanged("CatalogId");
					this.OnCatalogIdChanged();
				}
			}
		}
		
		[Column(Name="parent_catalog_item_category_id", Storage="_ParentCatalogItemCategoryId", DbType="Int")]
		public System.Nullable<int> ParentCatalogItemCategoryId
		{
			get
			{
				return this._ParentCatalogItemCategoryId;
			}
			set
			{
				if ((this._ParentCatalogItemCategoryId != value))
				{
					this.OnParentCatalogItemCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ParentCatalogItemCategoryId = value;
					this.SendPropertyChanged("ParentCatalogItemCategoryId");
					this.OnParentCatalogItemCategoryIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_category_name", Storage="_CatalogItemCategoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CatalogItemCategoryName
		{
			get
			{
				return this._CatalogItemCategoryName;
			}
			set
			{
				if ((this._CatalogItemCategoryName != value))
				{
					this.OnCatalogItemCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemCategoryName = value;
					this.SendPropertyChanged("CatalogItemCategoryName");
					this.OnCatalogItemCategoryNameChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="CatalogItemCategory_FormSection", Storage="_FormSections", ThisKey="CatalogItemCategoryId", OtherKey="CatalogItemCategoryId")]
		public EntitySet<FormSection> FormSections
		{
			get
			{
				return this._FormSections;
			}
			set
			{
				this._FormSections.Assign(value);
			}
		}
		
		[Association(Name="CatalogItemCategory_CatalogItemCategory", Storage="_CatalogItemCategories", ThisKey="CatalogItemCategoryId", OtherKey="ParentCatalogItemCategoryId")]
		public EntitySet<CatalogItemCategory> CatalogItemCategories
		{
			get
			{
				return this._CatalogItemCategories;
			}
			set
			{
				this._CatalogItemCategories.Assign(value);
			}
		}
		
		[Association(Name="CatalogItemCategory_CatalogItemCategory", Storage="_catalog_item_category1", ThisKey="ParentCatalogItemCategoryId", OtherKey="CatalogItemCategoryId", IsForeignKey=true)]
		public CatalogItemCategory catalog_item_category1
		{
			get
			{
				return this._catalog_item_category1.Entity;
			}
			set
			{
				CatalogItemCategory previousValue = this._catalog_item_category1.Entity;
				if (((previousValue != value) 
							|| (this._catalog_item_category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._catalog_item_category1.Entity = null;
						previousValue.CatalogItemCategories.Remove(this);
					}
					this._catalog_item_category1.Entity = value;
					if ((value != null))
					{
						value.CatalogItemCategories.Add(this);
						this._ParentCatalogItemCategoryId = value.CatalogItemCategoryId;
					}
					else
					{
						this._ParentCatalogItemCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("catalog_item_category1");
				}
			}
		}
		
		[Association(Name="Catalog_CatalogItemCategory", Storage="_Catalog", ThisKey="CatalogId", OtherKey="CatalogId", IsForeignKey=true)]
		public Catalog Catalog
		{
			get
			{
				return this._Catalog.Entity;
			}
			set
			{
				Catalog previousValue = this._Catalog.Entity;
				if (((previousValue != value) 
							|| (this._Catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalog.Entity = null;
						previousValue.CatalogItemCategories.Remove(this);
					}
					this._Catalog.Entity = value;
					if ((value != null))
					{
						value.CatalogItemCategories.Add(this);
						this._CatalogId = value.CatalogId;
					}
					else
					{
						this._CatalogId = default(int);
					}
					this.SendPropertyChanged("Catalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FormSections(FormSection entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItemCategory = this;
		}
		
		private void detach_FormSections(FormSection entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItemCategory = null;
		}
		
		private void attach_CatalogItemCategories(CatalogItemCategory entity)
		{
			this.SendPropertyChanging();
			entity.catalog_item_category1 = this;
		}
		
		private void detach_CatalogItemCategories(CatalogItemCategory entity)
		{
			this.SendPropertyChanging();
			entity.catalog_item_category1 = null;
		}
	}
	
	[Table(Name="dbo.catalog")]
	public partial class Catalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogId;
		
		private int _CatalogGroupId;
		
		private string _CatalogCode;
		
		private string _CatalogName;
		
		private string _Description;
		
		private string _Culture;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private System.Nullable<bool> _IsPriced;
		
		private EntitySet<CatalogItemCategory> _CatalogItemCategories;
		
		private EntitySet<ProgramAgreementCatalog> _ProgramAgreementCatalogs;
		
		private EntitySet<CatalogItem> _CatalogItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogIdChanging(int value);
    partial void OnCatalogIdChanged();
    partial void OnCatalogGroupIdChanging(int value);
    partial void OnCatalogGroupIdChanged();
    partial void OnCatalogCodeChanging(string value);
    partial void OnCatalogCodeChanged();
    partial void OnCatalogNameChanging(string value);
    partial void OnCatalogNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnIsPricedChanging(System.Nullable<bool> value);
    partial void OnIsPricedChanged();
    #endregion
		
		public Catalog()
		{
			this._CatalogItemCategories = new EntitySet<CatalogItemCategory>(new Action<CatalogItemCategory>(this.attach_CatalogItemCategories), new Action<CatalogItemCategory>(this.detach_CatalogItemCategories));
			this._ProgramAgreementCatalogs = new EntitySet<ProgramAgreementCatalog>(new Action<ProgramAgreementCatalog>(this.attach_ProgramAgreementCatalogs), new Action<ProgramAgreementCatalog>(this.detach_ProgramAgreementCatalogs));
			this._CatalogItems = new EntitySet<CatalogItem>(new Action<CatalogItem>(this.attach_CatalogItems), new Action<CatalogItem>(this.detach_CatalogItems));
			OnCreated();
		}
		
		[Column(Name="catalog_id", Storage="_CatalogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this.OnCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogId = value;
					this.SendPropertyChanged("CatalogId");
					this.OnCatalogIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_group_id", Storage="_CatalogGroupId", DbType="Int NOT NULL")]
		public int CatalogGroupId
		{
			get
			{
				return this._CatalogGroupId;
			}
			set
			{
				if ((this._CatalogGroupId != value))
				{
					this.OnCatalogGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogGroupId = value;
					this.SendPropertyChanged("CatalogGroupId");
					this.OnCatalogGroupIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_code", Storage="_CatalogCode", DbType="VarChar(50)")]
		public string CatalogCode
		{
			get
			{
				return this._CatalogCode;
			}
			set
			{
				if ((this._CatalogCode != value))
				{
					this.OnCatalogCodeChanging(value);
					this.SendPropertyChanging();
					this._CatalogCode = value;
					this.SendPropertyChanged("CatalogCode");
					this.OnCatalogCodeChanged();
				}
			}
		}
		
		[Column(Name="catalog_name", Storage="_CatalogName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CatalogName
		{
			get
			{
				return this._CatalogName;
			}
			set
			{
				if ((this._CatalogName != value))
				{
					this.OnCatalogNameChanging(value);
					this.SendPropertyChanging();
					this._CatalogName = value;
					this.SendPropertyChanged("CatalogName");
					this.OnCatalogNameChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="culture", Storage="_Culture", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="is_priced", Storage="_IsPriced", DbType="Bit")]
		public System.Nullable<bool> IsPriced
		{
			get
			{
				return this._IsPriced;
			}
			set
			{
				if ((this._IsPriced != value))
				{
					this.OnIsPricedChanging(value);
					this.SendPropertyChanging();
					this._IsPriced = value;
					this.SendPropertyChanged("IsPriced");
					this.OnIsPricedChanged();
				}
			}
		}
		
		[Association(Name="Catalog_CatalogItemCategory", Storage="_CatalogItemCategories", ThisKey="CatalogId", OtherKey="CatalogId")]
		public EntitySet<CatalogItemCategory> CatalogItemCategories
		{
			get
			{
				return this._CatalogItemCategories;
			}
			set
			{
				this._CatalogItemCategories.Assign(value);
			}
		}
		
		[Association(Name="Catalog_ProgramAgreementCatalog", Storage="_ProgramAgreementCatalogs", ThisKey="CatalogId", OtherKey="CatalogId")]
		public EntitySet<ProgramAgreementCatalog> ProgramAgreementCatalogs
		{
			get
			{
				return this._ProgramAgreementCatalogs;
			}
			set
			{
				this._ProgramAgreementCatalogs.Assign(value);
			}
		}
		
		[Association(Name="Catalog_CatalogItem", Storage="_CatalogItems", ThisKey="CatalogId", OtherKey="CatalogId")]
		public EntitySet<CatalogItem> CatalogItems
		{
			get
			{
				return this._CatalogItems;
			}
			set
			{
				this._CatalogItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatalogItemCategories(CatalogItemCategory entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = this;
		}
		
		private void detach_CatalogItemCategories(CatalogItemCategory entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = null;
		}
		
		private void attach_ProgramAgreementCatalogs(ProgramAgreementCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = this;
		}
		
		private void detach_ProgramAgreementCatalogs(ProgramAgreementCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = null;
		}
		
		private void attach_CatalogItems(CatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = this;
		}
		
		private void detach_CatalogItems(CatalogItem entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = null;
		}
	}
	
	[Table(Name="dbo.business_division")]
	public partial class BusinessDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessDivisionId;
		
		private string _BusinessDivisionName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessDivisionIdChanging(int value);
    partial void OnBusinessDivisionIdChanged();
    partial void OnBusinessDivisionNameChanging(string value);
    partial void OnBusinessDivisionNameChanged();
    #endregion
		
		public BusinessDivision()
		{
			OnCreated();
		}
		
		[Column(Name="business_division_id", Storage="_BusinessDivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BusinessDivisionId
		{
			get
			{
				return this._BusinessDivisionId;
			}
			set
			{
				if ((this._BusinessDivisionId != value))
				{
					this.OnBusinessDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessDivisionId = value;
					this.SendPropertyChanged("BusinessDivisionId");
					this.OnBusinessDivisionIdChanged();
				}
			}
		}
		
		[Column(Name="business_division_name", Storage="_BusinessDivisionName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessDivisionName
		{
			get
			{
				return this._BusinessDivisionName;
			}
			set
			{
				if ((this._BusinessDivisionName != value))
				{
					this.OnBusinessDivisionNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessDivisionName = value;
					this.SendPropertyChanged("BusinessDivisionName");
					this.OnBusinessDivisionNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.program")]
	public partial class Program : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramId;
		
		private string _ProgramName;
		
		private int _ProgramTypeId;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntitySet<Form> _Forms;
		
		private EntitySet<ProgramAgreementCampaign> _ProgramAgreementCampaigns;
		
		private EntityRef<ProgramType> _ProgramType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramIdChanging(int value);
    partial void OnProgramIdChanged();
    partial void OnProgramNameChanging(string value);
    partial void OnProgramNameChanged();
    partial void OnProgramTypeIdChanging(int value);
    partial void OnProgramTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public Program()
		{
			this._Forms = new EntitySet<Form>(new Action<Form>(this.attach_Forms), new Action<Form>(this.detach_Forms));
			this._ProgramAgreementCampaigns = new EntitySet<ProgramAgreementCampaign>(new Action<ProgramAgreementCampaign>(this.attach_ProgramAgreementCampaigns), new Action<ProgramAgreementCampaign>(this.detach_ProgramAgreementCampaigns));
			this._ProgramType = default(EntityRef<ProgramType>);
			OnCreated();
		}
		
		[Column(Name="program_id", Storage="_ProgramId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgramId
		{
			get
			{
				return this._ProgramId;
			}
			set
			{
				if ((this._ProgramId != value))
				{
					this.OnProgramIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramId = value;
					this.SendPropertyChanged("ProgramId");
					this.OnProgramIdChanged();
				}
			}
		}
		
		[Column(Name="program_name", Storage="_ProgramName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProgramName
		{
			get
			{
				return this._ProgramName;
			}
			set
			{
				if ((this._ProgramName != value))
				{
					this.OnProgramNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramName = value;
					this.SendPropertyChanged("ProgramName");
					this.OnProgramNameChanged();
				}
			}
		}
		
		[Column(Name="program_type_id", Storage="_ProgramTypeId", DbType="Int NOT NULL")]
		public int ProgramTypeId
		{
			get
			{
				return this._ProgramTypeId;
			}
			set
			{
				if ((this._ProgramTypeId != value))
				{
					this.OnProgramTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramTypeId = value;
					this.SendPropertyChanged("ProgramTypeId");
					this.OnProgramTypeIdChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Program_Form", Storage="_Forms", ThisKey="ProgramId", OtherKey="ProgramId")]
		public EntitySet<Form> Forms
		{
			get
			{
				return this._Forms;
			}
			set
			{
				this._Forms.Assign(value);
			}
		}
		
		[Association(Name="Program_ProgramAgreementCampaign", Storage="_ProgramAgreementCampaigns", ThisKey="ProgramId", OtherKey="ProgramId")]
		public EntitySet<ProgramAgreementCampaign> ProgramAgreementCampaigns
		{
			get
			{
				return this._ProgramAgreementCampaigns;
			}
			set
			{
				this._ProgramAgreementCampaigns.Assign(value);
			}
		}
		
		[Association(Name="ProgramType_Program", Storage="_ProgramType", ThisKey="ProgramTypeId", OtherKey="ProgramTypeId", IsForeignKey=true)]
		public ProgramType ProgramType
		{
			get
			{
				return this._ProgramType.Entity;
			}
			set
			{
				ProgramType previousValue = this._ProgramType.Entity;
				if (((previousValue != value) 
							|| (this._ProgramType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramType.Entity = null;
						previousValue.Programs.Remove(this);
					}
					this._ProgramType.Entity = value;
					if ((value != null))
					{
						value.Programs.Add(this);
						this._ProgramTypeId = value.ProgramTypeId;
					}
					else
					{
						this._ProgramTypeId = default(int);
					}
					this.SendPropertyChanged("ProgramType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Forms(Form entity)
		{
			this.SendPropertyChanging();
			entity.Program = this;
		}
		
		private void detach_Forms(Form entity)
		{
			this.SendPropertyChanging();
			entity.Program = null;
		}
		
		private void attach_ProgramAgreementCampaigns(ProgramAgreementCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Program = this;
		}
		
		private void detach_ProgramAgreementCampaigns(ProgramAgreementCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Program = null;
		}
	}
	
	[Table(Name="dbo.status_category")]
	public partial class StatusCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusCategoryId;
		
		private string _StatusCategoryName;
		
		private EntitySet<AccountStatus> _AccountStatus;
		
		private EntitySet<ProgramAgreementStatus> _ProgramAgreementStatus;
		
		private EntitySet<OrderStatus> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusCategoryIdChanging(int value);
    partial void OnStatusCategoryIdChanged();
    partial void OnStatusCategoryNameChanging(string value);
    partial void OnStatusCategoryNameChanged();
    #endregion
		
		public StatusCategory()
		{
			this._AccountStatus = new EntitySet<AccountStatus>(new Action<AccountStatus>(this.attach_AccountStatus), new Action<AccountStatus>(this.detach_AccountStatus));
			this._ProgramAgreementStatus = new EntitySet<ProgramAgreementStatus>(new Action<ProgramAgreementStatus>(this.attach_ProgramAgreementStatus), new Action<ProgramAgreementStatus>(this.detach_ProgramAgreementStatus));
			this._OrderStatus = new EntitySet<OrderStatus>(new Action<OrderStatus>(this.attach_OrderStatus), new Action<OrderStatus>(this.detach_OrderStatus));
			OnCreated();
		}
		
		[Column(Name="status_category_id", Storage="_StatusCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusCategoryId
		{
			get
			{
				return this._StatusCategoryId;
			}
			set
			{
				if ((this._StatusCategoryId != value))
				{
					this.OnStatusCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._StatusCategoryId = value;
					this.SendPropertyChanged("StatusCategoryId");
					this.OnStatusCategoryIdChanged();
				}
			}
		}
		
		[Column(Name="status_category_name", Storage="_StatusCategoryName", DbType="VarChar(50)")]
		public string StatusCategoryName
		{
			get
			{
				return this._StatusCategoryName;
			}
			set
			{
				if ((this._StatusCategoryName != value))
				{
					this.OnStatusCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._StatusCategoryName = value;
					this.SendPropertyChanged("StatusCategoryName");
					this.OnStatusCategoryNameChanged();
				}
			}
		}
		
		[Association(Name="StatusCategory_AccountStatus", Storage="_AccountStatus", ThisKey="StatusCategoryId", OtherKey="StatusCategoryId")]
		public EntitySet<AccountStatus> AccountStatus
		{
			get
			{
				return this._AccountStatus;
			}
			set
			{
				this._AccountStatus.Assign(value);
			}
		}
		
		[Association(Name="StatusCategory_ProgramAgreementStatus", Storage="_ProgramAgreementStatus", ThisKey="StatusCategoryId", OtherKey="StatusCategoryId")]
		public EntitySet<ProgramAgreementStatus> ProgramAgreementStatus
		{
			get
			{
				return this._ProgramAgreementStatus;
			}
			set
			{
				this._ProgramAgreementStatus.Assign(value);
			}
		}
		
		[Association(Name="StatusCategory_OrderStatus", Storage="_OrderStatus", ThisKey="StatusCategoryId", OtherKey="StatusCategoryId")]
		public EntitySet<OrderStatus> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				this._OrderStatus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountStatus(AccountStatus entity)
		{
			this.SendPropertyChanging();
			entity.StatusCategory = this;
		}
		
		private void detach_AccountStatus(AccountStatus entity)
		{
			this.SendPropertyChanging();
			entity.StatusCategory = null;
		}
		
		private void attach_ProgramAgreementStatus(ProgramAgreementStatus entity)
		{
			this.SendPropertyChanging();
			entity.StatusCategory = this;
		}
		
		private void detach_ProgramAgreementStatus(ProgramAgreementStatus entity)
		{
			this.SendPropertyChanging();
			entity.StatusCategory = null;
		}
		
		private void attach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.StatusCategory = this;
		}
		
		private void detach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.StatusCategory = null;
		}
	}
	
	[Table(Name="dbo.account_collection")]
	public partial class AccountCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountCollectionId;
		
		private int _AccountId;
		
		private System.DateTime _AccountCollectionDate;
		
		private decimal _AccountCollectionAmount;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountCollectionIdChanging(int value);
    partial void OnAccountCollectionIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAccountCollectionDateChanging(System.DateTime value);
    partial void OnAccountCollectionDateChanged();
    partial void OnAccountCollectionAmountChanging(decimal value);
    partial void OnAccountCollectionAmountChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public AccountCollection()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[Column(Name="account_collection_id", Storage="_AccountCollectionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountCollectionId
		{
			get
			{
				return this._AccountCollectionId;
			}
			set
			{
				if ((this._AccountCollectionId != value))
				{
					this.OnAccountCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._AccountCollectionId = value;
					this.SendPropertyChanged("AccountCollectionId");
					this.OnAccountCollectionIdChanged();
				}
			}
		}
		
		[Column(Name="account_id", Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="account_collection_date", Storage="_AccountCollectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime AccountCollectionDate
		{
			get
			{
				return this._AccountCollectionDate;
			}
			set
			{
				if ((this._AccountCollectionDate != value))
				{
					this.OnAccountCollectionDateChanging(value);
					this.SendPropertyChanging();
					this._AccountCollectionDate = value;
					this.SendPropertyChanged("AccountCollectionDate");
					this.OnAccountCollectionDateChanged();
				}
			}
		}
		
		[Column(Name="account_collection_amount", Storage="_AccountCollectionAmount", DbType="Money NOT NULL")]
		public decimal AccountCollectionAmount
		{
			get
			{
				return this._AccountCollectionAmount;
			}
			set
			{
				if ((this._AccountCollectionAmount != value))
				{
					this.OnAccountCollectionAmountChanging(value);
					this.SendPropertyChanging();
					this._AccountCollectionAmount = value;
					this.SendPropertyChanged("AccountCollectionAmount");
					this.OnAccountCollectionAmountChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Account_AccountCollection", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountCollections.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountCollections.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.business_exception")]
	public partial class BusinessException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessExceptionId;
		
		private string _BusinessExceptionName;
		
		private System.Nullable<int> _ExceptionTypeId;
		
		private System.Nullable<int> _EntityTypeId;
		
		private string _Message;
		
		private string _WarningMessage;
		
		private string _ExceptionExpression;
		
		private string _FeesValueExpression;
		
		private int _FormId;
		
		private System.Nullable<int> _AppItemId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private System.Nullable<int> _FormSectionTypeId;
		
		private System.Nullable<int> _FormSectionNumber;
		
		private System.Nullable<int> _BusinessRuleId;
		
		private EntityRef<Form> _Form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessExceptionIdChanging(int value);
    partial void OnBusinessExceptionIdChanged();
    partial void OnBusinessExceptionNameChanging(string value);
    partial void OnBusinessExceptionNameChanged();
    partial void OnExceptionTypeIdChanging(System.Nullable<int> value);
    partial void OnExceptionTypeIdChanged();
    partial void OnEntityTypeIdChanging(System.Nullable<int> value);
    partial void OnEntityTypeIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnWarningMessageChanging(string value);
    partial void OnWarningMessageChanged();
    partial void OnExceptionExpressionChanging(string value);
    partial void OnExceptionExpressionChanged();
    partial void OnFeesValueExpressionChanging(string value);
    partial void OnFeesValueExpressionChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnAppItemIdChanging(System.Nullable<int> value);
    partial void OnAppItemIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnFormSectionTypeIdChanging(System.Nullable<int> value);
    partial void OnFormSectionTypeIdChanged();
    partial void OnFormSectionNumberChanging(System.Nullable<int> value);
    partial void OnFormSectionNumberChanged();
    partial void OnBusinessRuleIdChanging(System.Nullable<int> value);
    partial void OnBusinessRuleIdChanged();
    #endregion
		
		public BusinessException()
		{
			this._Form = default(EntityRef<Form>);
			OnCreated();
		}
		
		[Column(Name="business_exception_id", Storage="_BusinessExceptionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BusinessExceptionId
		{
			get
			{
				return this._BusinessExceptionId;
			}
			set
			{
				if ((this._BusinessExceptionId != value))
				{
					this.OnBusinessExceptionIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessExceptionId = value;
					this.SendPropertyChanged("BusinessExceptionId");
					this.OnBusinessExceptionIdChanged();
				}
			}
		}
		
		[Column(Name="business_exception_name", Storage="_BusinessExceptionName", DbType="VarChar(100)")]
		public string BusinessExceptionName
		{
			get
			{
				return this._BusinessExceptionName;
			}
			set
			{
				if ((this._BusinessExceptionName != value))
				{
					this.OnBusinessExceptionNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessExceptionName = value;
					this.SendPropertyChanged("BusinessExceptionName");
					this.OnBusinessExceptionNameChanged();
				}
			}
		}
		
		[Column(Name="exception_type_id", Storage="_ExceptionTypeId", DbType="Int")]
		public System.Nullable<int> ExceptionTypeId
		{
			get
			{
				return this._ExceptionTypeId;
			}
			set
			{
				if ((this._ExceptionTypeId != value))
				{
					this.OnExceptionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExceptionTypeId = value;
					this.SendPropertyChanged("ExceptionTypeId");
					this.OnExceptionTypeIdChanged();
				}
			}
		}
		
		[Column(Name="entity_type_id", Storage="_EntityTypeId", DbType="Int")]
		public System.Nullable<int> EntityTypeId
		{
			get
			{
				return this._EntityTypeId;
			}
			set
			{
				if ((this._EntityTypeId != value))
				{
					this.OnEntityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeId = value;
					this.SendPropertyChanged("EntityTypeId");
					this.OnEntityTypeIdChanged();
				}
			}
		}
		
		[Column(Name="message", Storage="_Message", DbType="VarChar(2048)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[Column(Name="warning_message", Storage="_WarningMessage", DbType="VarChar(2048)")]
		public string WarningMessage
		{
			get
			{
				return this._WarningMessage;
			}
			set
			{
				if ((this._WarningMessage != value))
				{
					this.OnWarningMessageChanging(value);
					this.SendPropertyChanging();
					this._WarningMessage = value;
					this.SendPropertyChanged("WarningMessage");
					this.OnWarningMessageChanged();
				}
			}
		}
		
		[Column(Name="exception_expression", Storage="_ExceptionExpression", DbType="VarChar(200)")]
		public string ExceptionExpression
		{
			get
			{
				return this._ExceptionExpression;
			}
			set
			{
				if ((this._ExceptionExpression != value))
				{
					this.OnExceptionExpressionChanging(value);
					this.SendPropertyChanging();
					this._ExceptionExpression = value;
					this.SendPropertyChanged("ExceptionExpression");
					this.OnExceptionExpressionChanged();
				}
			}
		}
		
		[Column(Name="fees_value_expression", Storage="_FeesValueExpression", DbType="VarChar(200)")]
		public string FeesValueExpression
		{
			get
			{
				return this._FeesValueExpression;
			}
			set
			{
				if ((this._FeesValueExpression != value))
				{
					this.OnFeesValueExpressionChanging(value);
					this.SendPropertyChanging();
					this._FeesValueExpression = value;
					this.SendPropertyChanged("FeesValueExpression");
					this.OnFeesValueExpressionChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="app_item_id", Storage="_AppItemId", DbType="Int")]
		public System.Nullable<int> AppItemId
		{
			get
			{
				return this._AppItemId;
			}
			set
			{
				if ((this._AppItemId != value))
				{
					this.OnAppItemIdChanging(value);
					this.SendPropertyChanging();
					this._AppItemId = value;
					this.SendPropertyChanged("AppItemId");
					this.OnAppItemIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="form_section_type_id", Storage="_FormSectionTypeId", DbType="Int")]
		public System.Nullable<int> FormSectionTypeId
		{
			get
			{
				return this._FormSectionTypeId;
			}
			set
			{
				if ((this._FormSectionTypeId != value))
				{
					this.OnFormSectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FormSectionTypeId = value;
					this.SendPropertyChanged("FormSectionTypeId");
					this.OnFormSectionTypeIdChanged();
				}
			}
		}
		
		[Column(Name="form_section_number", Storage="_FormSectionNumber", DbType="Int")]
		public System.Nullable<int> FormSectionNumber
		{
			get
			{
				return this._FormSectionNumber;
			}
			set
			{
				if ((this._FormSectionNumber != value))
				{
					this.OnFormSectionNumberChanging(value);
					this.SendPropertyChanging();
					this._FormSectionNumber = value;
					this.SendPropertyChanged("FormSectionNumber");
					this.OnFormSectionNumberChanged();
				}
			}
		}
		
		[Column(Name="business_rule_id", Storage="_BusinessRuleId", DbType="Int")]
		public System.Nullable<int> BusinessRuleId
		{
			get
			{
				return this._BusinessRuleId;
			}
			set
			{
				if ((this._BusinessRuleId != value))
				{
					this.OnBusinessRuleIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessRuleId = value;
					this.SendPropertyChanged("BusinessRuleId");
					this.OnBusinessRuleIdChanged();
				}
			}
		}
		
		[Association(Name="Form_BusinessException", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.BusinessExceptions.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.BusinessExceptions.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.entity_exception")]
	public partial class EntityException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityExceptionId;
		
		private int _EntityId;
		
		private int _EntityTypeId;
		
		private int _BusinessExceptionId;
		
		private System.Nullable<int> _ExceptionTypeId;
		
		private string _Message;
		
		private string _ExceptionExpression;
		
		private string _FeesValueExpression;
		
		private System.Nullable<decimal> _FeesValueAmount;
		
		private System.Nullable<bool> _IsApproved;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<int> _ApproveUserId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityExceptionIdChanging(int value);
    partial void OnEntityExceptionIdChanged();
    partial void OnEntityIdChanging(int value);
    partial void OnEntityIdChanged();
    partial void OnEntityTypeIdChanging(int value);
    partial void OnEntityTypeIdChanged();
    partial void OnBusinessExceptionIdChanging(int value);
    partial void OnBusinessExceptionIdChanged();
    partial void OnExceptionTypeIdChanging(System.Nullable<int> value);
    partial void OnExceptionTypeIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnExceptionExpressionChanging(string value);
    partial void OnExceptionExpressionChanged();
    partial void OnFeesValueExpressionChanging(string value);
    partial void OnFeesValueExpressionChanged();
    partial void OnFeesValueAmountChanging(System.Nullable<decimal> value);
    partial void OnFeesValueAmountChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnApproveUserIdChanging(System.Nullable<int> value);
    partial void OnApproveUserIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public EntityException()
		{
			OnCreated();
		}
		
		[Column(Name="entity_exception_id", Storage="_EntityExceptionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntityExceptionId
		{
			get
			{
				return this._EntityExceptionId;
			}
			set
			{
				if ((this._EntityExceptionId != value))
				{
					this.OnEntityExceptionIdChanging(value);
					this.SendPropertyChanging();
					this._EntityExceptionId = value;
					this.SendPropertyChanged("EntityExceptionId");
					this.OnEntityExceptionIdChanged();
				}
			}
		}
		
		[Column(Name="entity_id", Storage="_EntityId", DbType="Int NOT NULL")]
		public int EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[Column(Name="entity_type_id", Storage="_EntityTypeId", DbType="Int NOT NULL")]
		public int EntityTypeId
		{
			get
			{
				return this._EntityTypeId;
			}
			set
			{
				if ((this._EntityTypeId != value))
				{
					this.OnEntityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeId = value;
					this.SendPropertyChanged("EntityTypeId");
					this.OnEntityTypeIdChanged();
				}
			}
		}
		
		[Column(Name="business_exception_id", Storage="_BusinessExceptionId", DbType="Int NOT NULL")]
		public int BusinessExceptionId
		{
			get
			{
				return this._BusinessExceptionId;
			}
			set
			{
				if ((this._BusinessExceptionId != value))
				{
					this.OnBusinessExceptionIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessExceptionId = value;
					this.SendPropertyChanged("BusinessExceptionId");
					this.OnBusinessExceptionIdChanged();
				}
			}
		}
		
		[Column(Name="exception_type_id", Storage="_ExceptionTypeId", DbType="Int")]
		public System.Nullable<int> ExceptionTypeId
		{
			get
			{
				return this._ExceptionTypeId;
			}
			set
			{
				if ((this._ExceptionTypeId != value))
				{
					this.OnExceptionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExceptionTypeId = value;
					this.SendPropertyChanged("ExceptionTypeId");
					this.OnExceptionTypeIdChanged();
				}
			}
		}
		
		[Column(Name="message", Storage="_Message", DbType="VarChar(2048)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[Column(Name="exception_expression", Storage="_ExceptionExpression", DbType="VarChar(1024)")]
		public string ExceptionExpression
		{
			get
			{
				return this._ExceptionExpression;
			}
			set
			{
				if ((this._ExceptionExpression != value))
				{
					this.OnExceptionExpressionChanging(value);
					this.SendPropertyChanging();
					this._ExceptionExpression = value;
					this.SendPropertyChanged("ExceptionExpression");
					this.OnExceptionExpressionChanged();
				}
			}
		}
		
		[Column(Name="fees_value_expression", Storage="_FeesValueExpression", DbType="VarChar(1024)")]
		public string FeesValueExpression
		{
			get
			{
				return this._FeesValueExpression;
			}
			set
			{
				if ((this._FeesValueExpression != value))
				{
					this.OnFeesValueExpressionChanging(value);
					this.SendPropertyChanging();
					this._FeesValueExpression = value;
					this.SendPropertyChanged("FeesValueExpression");
					this.OnFeesValueExpressionChanged();
				}
			}
		}
		
		[Column(Name="fees_value_amount", Storage="_FeesValueAmount", DbType="Money")]
		public System.Nullable<decimal> FeesValueAmount
		{
			get
			{
				return this._FeesValueAmount;
			}
			set
			{
				if ((this._FeesValueAmount != value))
				{
					this.OnFeesValueAmountChanging(value);
					this.SendPropertyChanging();
					this._FeesValueAmount = value;
					this.SendPropertyChanged("FeesValueAmount");
					this.OnFeesValueAmountChanged();
				}
			}
		}
		
		[Column(Name="approved", Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[Column(Name="approve_date", Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[Column(Name="approve_user_id", Storage="_ApproveUserId", DbType="Int")]
		public System.Nullable<int> ApproveUserId
		{
			get
			{
				return this._ApproveUserId;
			}
			set
			{
				if ((this._ApproveUserId != value))
				{
					this.OnApproveUserIdChanging(value);
					this.SendPropertyChanging();
					this._ApproveUserId = value;
					this.SendPropertyChanged("ApproveUserId");
					this.OnApproveUserIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.warehouse")]
	public partial class Warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WarehouseId;
		
		private int _PostalAddressId;
		
		private string _WarehouseName;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private int _FulfWarehouseId;
		
		private System.Nullable<int> _VendorId;
		
		private int _WarehouseStatusId;
		
		private System.Nullable<int> _PhoneNumberId;
		
		private System.Nullable<int> _FaxNumberId;
		
		private System.Nullable<int> _ReceivingPhoneNumberId;
		
		private System.Nullable<int> _EmailId;
		
		private string _CompanyName;
		
		private string _ShortDescription;
		
		private bool _IsVendorWarehouse;
		
		private bool _IsPickUp;
		
		private EntitySet<ShipmentGroup> _ShipmentGroups;
		
		private EntityRef<Email> _Email;
		
		private EntityRef<PhoneNumber> _PhoneNumber;
		
		private EntityRef<PhoneNumber> _PhoneNumber1;
		
		private EntityRef<PhoneNumber> _PhoneNumber2;
		
		private EntityRef<PostalAddress> _PostalAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnPostalAddressIdChanging(int value);
    partial void OnPostalAddressIdChanged();
    partial void OnWarehouseNameChanging(string value);
    partial void OnWarehouseNameChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnFulfWarehouseIdChanging(int value);
    partial void OnFulfWarehouseIdChanged();
    partial void OnVendorIdChanging(System.Nullable<int> value);
    partial void OnVendorIdChanged();
    partial void OnWarehouseStatusIdChanging(int value);
    partial void OnWarehouseStatusIdChanged();
    partial void OnPhoneNumberIdChanging(System.Nullable<int> value);
    partial void OnPhoneNumberIdChanged();
    partial void OnFaxNumberIdChanging(System.Nullable<int> value);
    partial void OnFaxNumberIdChanged();
    partial void OnReceivingPhoneNumberIdChanging(System.Nullable<int> value);
    partial void OnReceivingPhoneNumberIdChanged();
    partial void OnEmailIdChanging(System.Nullable<int> value);
    partial void OnEmailIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnIsVendorWarehouseChanging(bool value);
    partial void OnIsVendorWarehouseChanged();
    partial void OnIsPickUpChanging(bool value);
    partial void OnIsPickUpChanged();
    #endregion
		
		public Warehouse()
		{
			this._ShipmentGroups = new EntitySet<ShipmentGroup>(new Action<ShipmentGroup>(this.attach_ShipmentGroups), new Action<ShipmentGroup>(this.detach_ShipmentGroups));
			this._Email = default(EntityRef<Email>);
			this._PhoneNumber = default(EntityRef<PhoneNumber>);
			this._PhoneNumber1 = default(EntityRef<PhoneNumber>);
			this._PhoneNumber2 = default(EntityRef<PhoneNumber>);
			this._PostalAddress = default(EntityRef<PostalAddress>);
			OnCreated();
		}
		
		[Column(Name="warehouse_id", Storage="_WarehouseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[Column(Name="postal_address_id", Storage="_PostalAddressId", DbType="Int NOT NULL")]
		public int PostalAddressId
		{
			get
			{
				return this._PostalAddressId;
			}
			set
			{
				if ((this._PostalAddressId != value))
				{
					this.OnPostalAddressIdChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressId = value;
					this.SendPropertyChanged("PostalAddressId");
					this.OnPostalAddressIdChanged();
				}
			}
		}
		
		[Column(Name="warehouse_name", Storage="_WarehouseName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this.OnWarehouseNameChanging(value);
					this.SendPropertyChanging();
					this._WarehouseName = value;
					this.SendPropertyChanged("WarehouseName");
					this.OnWarehouseNameChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="fulf_warehouse_id", Storage="_FulfWarehouseId", DbType="Int NOT NULL")]
		public int FulfWarehouseId
		{
			get
			{
				return this._FulfWarehouseId;
			}
			set
			{
				if ((this._FulfWarehouseId != value))
				{
					this.OnFulfWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._FulfWarehouseId = value;
					this.SendPropertyChanged("FulfWarehouseId");
					this.OnFulfWarehouseIdChanged();
				}
			}
		}
		
		[Column(Name="vendor_id", Storage="_VendorId", DbType="Int")]
		public System.Nullable<int> VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[Column(Name="warehouse_status_id", Storage="_WarehouseStatusId", DbType="Int NOT NULL")]
		public int WarehouseStatusId
		{
			get
			{
				return this._WarehouseStatusId;
			}
			set
			{
				if ((this._WarehouseStatusId != value))
				{
					this.OnWarehouseStatusIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseStatusId = value;
					this.SendPropertyChanged("WarehouseStatusId");
					this.OnWarehouseStatusIdChanged();
				}
			}
		}
		
		[Column(Name="phone_number_id", Storage="_PhoneNumberId", DbType="Int")]
		public System.Nullable<int> PhoneNumberId
		{
			get
			{
				return this._PhoneNumberId;
			}
			set
			{
				if ((this._PhoneNumberId != value))
				{
					this.OnPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberId = value;
					this.SendPropertyChanged("PhoneNumberId");
					this.OnPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="fax_number_id", Storage="_FaxNumberId", DbType="Int")]
		public System.Nullable<int> FaxNumberId
		{
			get
			{
				return this._FaxNumberId;
			}
			set
			{
				if ((this._FaxNumberId != value))
				{
					this.OnFaxNumberIdChanging(value);
					this.SendPropertyChanging();
					this._FaxNumberId = value;
					this.SendPropertyChanged("FaxNumberId");
					this.OnFaxNumberIdChanged();
				}
			}
		}
		
		[Column(Name="receiving_phone_number_id", Storage="_ReceivingPhoneNumberId", DbType="Int")]
		public System.Nullable<int> ReceivingPhoneNumberId
		{
			get
			{
				return this._ReceivingPhoneNumberId;
			}
			set
			{
				if ((this._ReceivingPhoneNumberId != value))
				{
					this.OnReceivingPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._ReceivingPhoneNumberId = value;
					this.SendPropertyChanged("ReceivingPhoneNumberId");
					this.OnReceivingPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="email_id", Storage="_EmailId", DbType="Int")]
		public System.Nullable<int> EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[Column(Name="company_name", Storage="_CompanyName", DbType="VarChar(100)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Column(Name="short_description", Storage="_ShortDescription", DbType="VarChar(100)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[Column(Name="is_vendor_warehouse", Storage="_IsVendorWarehouse", DbType="Bit NOT NULL")]
		public bool IsVendorWarehouse
		{
			get
			{
				return this._IsVendorWarehouse;
			}
			set
			{
				if ((this._IsVendorWarehouse != value))
				{
					this.OnIsVendorWarehouseChanging(value);
					this.SendPropertyChanging();
					this._IsVendorWarehouse = value;
					this.SendPropertyChanged("IsVendorWarehouse");
					this.OnIsVendorWarehouseChanged();
				}
			}
		}
		
		[Column(Name="pick_up", Storage="_IsPickUp", DbType="Bit NOT NULL")]
		public bool IsPickUp
		{
			get
			{
				return this._IsPickUp;
			}
			set
			{
				if ((this._IsPickUp != value))
				{
					this.OnIsPickUpChanging(value);
					this.SendPropertyChanging();
					this._IsPickUp = value;
					this.SendPropertyChanged("IsPickUp");
					this.OnIsPickUpChanged();
				}
			}
		}
		
		[Association(Name="Warehouse_ShipmentGroup", Storage="_ShipmentGroups", ThisKey="WarehouseId", OtherKey="DeliveryWarehouseId")]
		public EntitySet<ShipmentGroup> ShipmentGroups
		{
			get
			{
				return this._ShipmentGroups;
			}
			set
			{
				this._ShipmentGroups.Assign(value);
			}
		}
		
		[Association(Name="Email_Warehouse", Storage="_Email", ThisKey="EmailId", OtherKey="EmailId", IsForeignKey=true)]
		public Email Email
		{
			get
			{
				return this._Email.Entity;
			}
			set
			{
				Email previousValue = this._Email.Entity;
				if (((previousValue != value) 
							|| (this._Email.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Email.Entity = null;
						previousValue.Warehouses.Remove(this);
					}
					this._Email.Entity = value;
					if ((value != null))
					{
						value.Warehouses.Add(this);
						this._EmailId = value.EmailId;
					}
					else
					{
						this._EmailId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Email");
				}
			}
		}
		
		[Association(Name="PhoneNumber_Warehouse", Storage="_PhoneNumber", ThisKey="PhoneNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber PhoneNumber
		{
			get
			{
				return this._PhoneNumber.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._PhoneNumber.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumber.Entity = null;
						previousValue.warehouses.Remove(this);
					}
					this._PhoneNumber.Entity = value;
					if ((value != null))
					{
						value.warehouses.Add(this);
						this._PhoneNumberId = value.PhoneNumberId;
					}
					else
					{
						this._PhoneNumberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhoneNumber");
				}
			}
		}
		
		[Association(Name="PhoneNumber_Warehouse1", Storage="_PhoneNumber1", ThisKey="FaxNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber PhoneNumber1
		{
			get
			{
				return this._PhoneNumber1.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._PhoneNumber1.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumber1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumber1.Entity = null;
						previousValue.warehouses1.Remove(this);
					}
					this._PhoneNumber1.Entity = value;
					if ((value != null))
					{
						value.warehouses1.Add(this);
						this._FaxNumberId = value.PhoneNumberId;
					}
					else
					{
						this._FaxNumberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhoneNumber1");
				}
			}
		}
		
		[Association(Name="PhoneNumber_Warehouse2", Storage="_PhoneNumber2", ThisKey="ReceivingPhoneNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber PhoneNumber2
		{
			get
			{
				return this._PhoneNumber2.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._PhoneNumber2.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumber2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumber2.Entity = null;
						previousValue.Warehouses2.Remove(this);
					}
					this._PhoneNumber2.Entity = value;
					if ((value != null))
					{
						value.Warehouses2.Add(this);
						this._ReceivingPhoneNumberId = value.PhoneNumberId;
					}
					else
					{
						this._ReceivingPhoneNumberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhoneNumber2");
				}
			}
		}
		
		[Association(Name="PostalAddress_Warehouse", Storage="_PostalAddress", ThisKey="PostalAddressId", OtherKey="PostalAddressId", IsForeignKey=true)]
		public PostalAddress PostalAddress
		{
			get
			{
				return this._PostalAddress.Entity;
			}
			set
			{
				PostalAddress previousValue = this._PostalAddress.Entity;
				if (((previousValue != value) 
							|| (this._PostalAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostalAddress.Entity = null;
						previousValue.Warehouses.Remove(this);
					}
					this._PostalAddress.Entity = value;
					if ((value != null))
					{
						value.Warehouses.Add(this);
						this._PostalAddressId = value.PostalAddressId;
					}
					else
					{
						this._PostalAddressId = default(int);
					}
					this.SendPropertyChanged("PostalAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShipmentGroups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_ShipmentGroups(ShipmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
	}
	
	[Table(Name="dbo.trade_class")]
	public partial class TradeClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TradeClassId;
		
		private string _TradeClassName;
		
		private string _ARTCLS;
		
		private System.Nullable<System.DateTime> _LastImportDate;
		
		private System.Nullable<int> _ImportSourceId;
		
		private EntitySet<Campaign> _Campaigns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTradeClassIdChanging(int value);
    partial void OnTradeClassIdChanged();
    partial void OnTradeClassNameChanging(string value);
    partial void OnTradeClassNameChanged();
    partial void OnARTCLSChanging(string value);
    partial void OnARTCLSChanged();
    partial void OnLastImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastImportDateChanged();
    partial void OnImportSourceIdChanging(System.Nullable<int> value);
    partial void OnImportSourceIdChanged();
    #endregion
		
		public TradeClass()
		{
			this._Campaigns = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns), new Action<Campaign>(this.detach_Campaigns));
			OnCreated();
		}
		
		[Column(Name="trade_class_id", Storage="_TradeClassId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TradeClassId
		{
			get
			{
				return this._TradeClassId;
			}
			set
			{
				if ((this._TradeClassId != value))
				{
					this.OnTradeClassIdChanging(value);
					this.SendPropertyChanging();
					this._TradeClassId = value;
					this.SendPropertyChanged("TradeClassId");
					this.OnTradeClassIdChanged();
				}
			}
		}
		
		[Column(Name="trade_class_name", Storage="_TradeClassName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TradeClassName
		{
			get
			{
				return this._TradeClassName;
			}
			set
			{
				if ((this._TradeClassName != value))
				{
					this.OnTradeClassNameChanging(value);
					this.SendPropertyChanging();
					this._TradeClassName = value;
					this.SendPropertyChanged("TradeClassName");
					this.OnTradeClassNameChanged();
				}
			}
		}
		
		[Column(Storage="_ARTCLS", DbType="VarChar(50)")]
		public string ARTCLS
		{
			get
			{
				return this._ARTCLS;
			}
			set
			{
				if ((this._ARTCLS != value))
				{
					this.OnARTCLSChanging(value);
					this.SendPropertyChanging();
					this._ARTCLS = value;
					this.SendPropertyChanged("ARTCLS");
					this.OnARTCLSChanged();
				}
			}
		}
		
		[Column(Name="last_import_date", Storage="_LastImportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastImportDate
		{
			get
			{
				return this._LastImportDate;
			}
			set
			{
				if ((this._LastImportDate != value))
				{
					this.OnLastImportDateChanging(value);
					this.SendPropertyChanging();
					this._LastImportDate = value;
					this.SendPropertyChanged("LastImportDate");
					this.OnLastImportDateChanged();
				}
			}
		}
		
		[Column(Name="import_source_id", Storage="_ImportSourceId", DbType="Int")]
		public System.Nullable<int> ImportSourceId
		{
			get
			{
				return this._ImportSourceId;
			}
			set
			{
				if ((this._ImportSourceId != value))
				{
					this.OnImportSourceIdChanging(value);
					this.SendPropertyChanging();
					this._ImportSourceId = value;
					this.SendPropertyChanged("ImportSourceId");
					this.OnImportSourceIdChanged();
				}
			}
		}
		
		[Association(Name="TradeClass_Campaign", Storage="_Campaigns", ThisKey="TradeClassId", OtherKey="TradeClassId")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campaigns;
			}
			set
			{
				this._Campaigns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.TradeClass = this;
		}
		
		private void detach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.TradeClass = null;
		}
	}
	
	[Table(Name="dbo.[order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private int _CampaignId;
		
		private System.Nullable<int> _OrderGroupId;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _SourceId;
		
		private int _OrderStatusId;
		
		private System.Nullable<int> _StatusReasonId;
		
		private int _BillingPostalAddressId;
		
		private System.Nullable<int> _BillingPhoneNumberId;
		
		private System.Nullable<int> _BillingFaxNumberId;
		
		private System.Nullable<int> _BillingEmailId;
		
		private System.Nullable<int> _ParticipantId;
		
		private System.Nullable<int> _InstallmentPlanId;
		
		private System.Nullable<int> _FormId;
		
		private int _OrderTypeId;
		
		private string _FmId;
		
		private string _OL_ORD;
		
		private System.DateTime _OrderDate;
		
		private System.Nullable<decimal> _AdjustmentAmount;
		
		private string _Comments;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private string _FulfOrderId;
		
		private decimal _ProfitRate;
		
		private string _CustomerPoNumber;
		
		private bool _IsDsd;
		
		private bool _IsContinuation;
		
		private System.Nullable<short> _IsMailReferred;
		
		private EntitySet<ProgramAgreementCampaign> _ProgramAgreementCampaigns;
		
		private EntitySet<ProgramAgreementOrder> _ProgramAgreementOrders;
		
		private EntitySet<OrderStatusChange> _OrderStatusChanges;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntitySet<OrderCharge> _OrderCharges;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
		private EntityRef<OrderType> _OrderType;
		
		private EntityRef<Form> _Form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnCampaignIdChanging(int value);
    partial void OnCampaignIdChanged();
    partial void OnOrderGroupIdChanging(System.Nullable<int> value);
    partial void OnOrderGroupIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnSourceIdChanging(System.Nullable<int> value);
    partial void OnSourceIdChanged();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnStatusReasonIdChanging(System.Nullable<int> value);
    partial void OnStatusReasonIdChanged();
    partial void OnBillingPostalAddressIdChanging(int value);
    partial void OnBillingPostalAddressIdChanged();
    partial void OnBillingPhoneNumberIdChanging(System.Nullable<int> value);
    partial void OnBillingPhoneNumberIdChanged();
    partial void OnBillingFaxNumberIdChanging(System.Nullable<int> value);
    partial void OnBillingFaxNumberIdChanged();
    partial void OnBillingEmailIdChanging(System.Nullable<int> value);
    partial void OnBillingEmailIdChanged();
    partial void OnParticipantIdChanging(System.Nullable<int> value);
    partial void OnParticipantIdChanged();
    partial void OnInstallmentPlanIdChanging(System.Nullable<int> value);
    partial void OnInstallmentPlanIdChanged();
    partial void OnFormIdChanging(System.Nullable<int> value);
    partial void OnFormIdChanged();
    partial void OnOrderTypeIdChanging(int value);
    partial void OnOrderTypeIdChanged();
    partial void OnFmIdChanging(string value);
    partial void OnFmIdChanged();
    partial void OnOL_ORDChanging(string value);
    partial void OnOL_ORDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnAdjustmentAmountChanging(System.Nullable<decimal> value);
    partial void OnAdjustmentAmountChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnFulfOrderIdChanging(string value);
    partial void OnFulfOrderIdChanged();
    partial void OnProfitRateChanging(decimal value);
    partial void OnProfitRateChanged();
    partial void OnCustomerPoNumberChanging(string value);
    partial void OnCustomerPoNumberChanged();
    partial void OnIsDsdChanging(bool value);
    partial void OnIsDsdChanged();
    partial void OnIsContinuationChanging(bool value);
    partial void OnIsContinuationChanged();
    partial void OnIsMailReferredChanging(System.Nullable<short> value);
    partial void OnIsMailReferredChanged();
    #endregion
		
		public Order()
		{
			this._ProgramAgreementCampaigns = new EntitySet<ProgramAgreementCampaign>(new Action<ProgramAgreementCampaign>(this.attach_ProgramAgreementCampaigns), new Action<ProgramAgreementCampaign>(this.detach_ProgramAgreementCampaigns));
			this._ProgramAgreementOrders = new EntitySet<ProgramAgreementOrder>(new Action<ProgramAgreementOrder>(this.attach_ProgramAgreementOrders), new Action<ProgramAgreementOrder>(this.detach_ProgramAgreementOrders));
			this._OrderStatusChanges = new EntitySet<OrderStatusChange>(new Action<OrderStatusChange>(this.attach_OrderStatusChanges), new Action<OrderStatusChange>(this.detach_OrderStatusChanges));
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._OrderCharges = new EntitySet<OrderCharge>(new Action<OrderCharge>(this.attach_OrderCharges), new Action<OrderCharge>(this.detach_OrderCharges));
			this._Campaign = default(EntityRef<Campaign>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			this._OrderType = default(EntityRef<OrderType>);
			this._Form = default(EntityRef<Form>);
			OnCreated();
		}
		
		[Column(Name="order_id", Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Name="campaign_id", Storage="_CampaignId", DbType="Int NOT NULL")]
		public int CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[Column(Name="order_group_id", Storage="_OrderGroupId", DbType="Int")]
		public System.Nullable<int> OrderGroupId
		{
			get
			{
				return this._OrderGroupId;
			}
			set
			{
				if ((this._OrderGroupId != value))
				{
					this.OnOrderGroupIdChanging(value);
					this.SendPropertyChanging();
					this._OrderGroupId = value;
					this.SendPropertyChanged("OrderGroupId");
					this.OnOrderGroupIdChanged();
				}
			}
		}
		
		[Column(Name="customer_id", Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[Column(Name="source_id", Storage="_SourceId", DbType="Int")]
		public System.Nullable<int> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[Column(Name="order_status_id", Storage="_OrderStatusId", DbType="Int NOT NULL")]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[Column(Name="status_reason_id", Storage="_StatusReasonId", DbType="Int")]
		public System.Nullable<int> StatusReasonId
		{
			get
			{
				return this._StatusReasonId;
			}
			set
			{
				if ((this._StatusReasonId != value))
				{
					this.OnStatusReasonIdChanging(value);
					this.SendPropertyChanging();
					this._StatusReasonId = value;
					this.SendPropertyChanged("StatusReasonId");
					this.OnStatusReasonIdChanged();
				}
			}
		}
		
		[Column(Name="billing_postal_address_id", Storage="_BillingPostalAddressId", DbType="Int NOT NULL")]
		public int BillingPostalAddressId
		{
			get
			{
				return this._BillingPostalAddressId;
			}
			set
			{
				if ((this._BillingPostalAddressId != value))
				{
					this.OnBillingPostalAddressIdChanging(value);
					this.SendPropertyChanging();
					this._BillingPostalAddressId = value;
					this.SendPropertyChanged("BillingPostalAddressId");
					this.OnBillingPostalAddressIdChanged();
				}
			}
		}
		
		[Column(Name="billing_phone_number_id", Storage="_BillingPhoneNumberId", DbType="Int")]
		public System.Nullable<int> BillingPhoneNumberId
		{
			get
			{
				return this._BillingPhoneNumberId;
			}
			set
			{
				if ((this._BillingPhoneNumberId != value))
				{
					this.OnBillingPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._BillingPhoneNumberId = value;
					this.SendPropertyChanged("BillingPhoneNumberId");
					this.OnBillingPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="billing_fax_number_id", Storage="_BillingFaxNumberId", DbType="Int")]
		public System.Nullable<int> BillingFaxNumberId
		{
			get
			{
				return this._BillingFaxNumberId;
			}
			set
			{
				if ((this._BillingFaxNumberId != value))
				{
					this.OnBillingFaxNumberIdChanging(value);
					this.SendPropertyChanging();
					this._BillingFaxNumberId = value;
					this.SendPropertyChanged("BillingFaxNumberId");
					this.OnBillingFaxNumberIdChanged();
				}
			}
		}
		
		[Column(Name="billing_email_id", Storage="_BillingEmailId", DbType="Int")]
		public System.Nullable<int> BillingEmailId
		{
			get
			{
				return this._BillingEmailId;
			}
			set
			{
				if ((this._BillingEmailId != value))
				{
					this.OnBillingEmailIdChanging(value);
					this.SendPropertyChanging();
					this._BillingEmailId = value;
					this.SendPropertyChanged("BillingEmailId");
					this.OnBillingEmailIdChanged();
				}
			}
		}
		
		[Column(Name="participant_id", Storage="_ParticipantId", DbType="Int")]
		public System.Nullable<int> ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[Column(Name="installment_plan_id", Storage="_InstallmentPlanId", DbType="Int")]
		public System.Nullable<int> InstallmentPlanId
		{
			get
			{
				return this._InstallmentPlanId;
			}
			set
			{
				if ((this._InstallmentPlanId != value))
				{
					this.OnInstallmentPlanIdChanging(value);
					this.SendPropertyChanging();
					this._InstallmentPlanId = value;
					this.SendPropertyChanged("InstallmentPlanId");
					this.OnInstallmentPlanIdChanged();
				}
			}
		}
		
		[Column(Name="form_id", Storage="_FormId", DbType="Int")]
		public System.Nullable<int> FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[Column(Name="order_type_id", Storage="_OrderTypeId", DbType="Int NOT NULL")]
		public int OrderTypeId
		{
			get
			{
				return this._OrderTypeId;
			}
			set
			{
				if ((this._OrderTypeId != value))
				{
					this.OnOrderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeId = value;
					this.SendPropertyChanged("OrderTypeId");
					this.OnOrderTypeIdChanged();
				}
			}
		}
		
		[Column(Name="fm_id", Storage="_FmId", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string FmId
		{
			get
			{
				return this._FmId;
			}
			set
			{
				if ((this._FmId != value))
				{
					this.OnFmIdChanging(value);
					this.SendPropertyChanging();
					this._FmId = value;
					this.SendPropertyChanged("FmId");
					this.OnFmIdChanged();
				}
			}
		}
		
		[Column(Name="OL#ORD", Storage="_OL_ORD", DbType="VarChar(50)")]
		public string OL_ORD
		{
			get
			{
				return this._OL_ORD;
			}
			set
			{
				if ((this._OL_ORD != value))
				{
					this.OnOL_ORDChanging(value);
					this.SendPropertyChanging();
					this._OL_ORD = value;
					this.SendPropertyChanged("OL_ORD");
					this.OnOL_ORDChanged();
				}
			}
		}
		
		[Column(Name="order_date", Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[Column(Name="adjustment_amount", Storage="_AdjustmentAmount", DbType="Money")]
		public System.Nullable<decimal> AdjustmentAmount
		{
			get
			{
				return this._AdjustmentAmount;
			}
			set
			{
				if ((this._AdjustmentAmount != value))
				{
					this.OnAdjustmentAmountChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentAmount = value;
					this.SendPropertyChanged("AdjustmentAmount");
					this.OnAdjustmentAmountChanged();
				}
			}
		}
		
		[Column(Name="comments", Storage="_Comments", DbType="VarChar(4000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="fulf_order_id", Storage="_FulfOrderId", DbType="VarChar(50)")]
		public string FulfOrderId
		{
			get
			{
				return this._FulfOrderId;
			}
			set
			{
				if ((this._FulfOrderId != value))
				{
					this.OnFulfOrderIdChanging(value);
					this.SendPropertyChanging();
					this._FulfOrderId = value;
					this.SendPropertyChanged("FulfOrderId");
					this.OnFulfOrderIdChanged();
				}
			}
		}
		
		[Column(Name="profit_rate", Storage="_ProfitRate", DbType="Decimal(2,2) NOT NULL")]
		public decimal ProfitRate
		{
			get
			{
				return this._ProfitRate;
			}
			set
			{
				if ((this._ProfitRate != value))
				{
					this.OnProfitRateChanging(value);
					this.SendPropertyChanging();
					this._ProfitRate = value;
					this.SendPropertyChanged("ProfitRate");
					this.OnProfitRateChanged();
				}
			}
		}
		
		[Column(Name="customer_po_number", Storage="_CustomerPoNumber", DbType="VarChar(10)")]
		public string CustomerPoNumber
		{
			get
			{
				return this._CustomerPoNumber;
			}
			set
			{
				if ((this._CustomerPoNumber != value))
				{
					this.OnCustomerPoNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerPoNumber = value;
					this.SendPropertyChanged("CustomerPoNumber");
					this.OnCustomerPoNumberChanged();
				}
			}
		}
		
		[Column(Name="is_dsd", Storage="_IsDsd", DbType="Bit NOT NULL")]
		public bool IsDsd
		{
			get
			{
				return this._IsDsd;
			}
			set
			{
				if ((this._IsDsd != value))
				{
					this.OnIsDsdChanging(value);
					this.SendPropertyChanging();
					this._IsDsd = value;
					this.SendPropertyChanged("IsDsd");
					this.OnIsDsdChanged();
				}
			}
		}
		
		[Column(Name="is_continuation", Storage="_IsContinuation", DbType="Bit NOT NULL")]
		public bool IsContinuation
		{
			get
			{
				return this._IsContinuation;
			}
			set
			{
				if ((this._IsContinuation != value))
				{
					this.OnIsContinuationChanging(value);
					this.SendPropertyChanging();
					this._IsContinuation = value;
					this.SendPropertyChanged("IsContinuation");
					this.OnIsContinuationChanged();
				}
			}
		}
		
		[Column(Name="isMailReferred", Storage="_IsMailReferred", DbType="SmallInt")]
		public System.Nullable<short> IsMailReferred
		{
			get
			{
				return this._IsMailReferred;
			}
			set
			{
				if ((this._IsMailReferred != value))
				{
					this.OnIsMailReferredChanging(value);
					this.SendPropertyChanging();
					this._IsMailReferred = value;
					this.SendPropertyChanged("IsMailReferred");
					this.OnIsMailReferredChanged();
				}
			}
		}
		
		[Association(Name="Order_ProgramAgreementCampaign", Storage="_ProgramAgreementCampaigns", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<ProgramAgreementCampaign> ProgramAgreementCampaigns
		{
			get
			{
				return this._ProgramAgreementCampaigns;
			}
			set
			{
				this._ProgramAgreementCampaigns.Assign(value);
			}
		}
		
		[Association(Name="Order_ProgramAgreementOrder", Storage="_ProgramAgreementOrders", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<ProgramAgreementOrder> ProgramAgreementOrders
		{
			get
			{
				return this._ProgramAgreementOrders;
			}
			set
			{
				this._ProgramAgreementOrders.Assign(value);
			}
		}
		
		[Association(Name="Order_OrderStatusChange", Storage="_OrderStatusChanges", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderStatusChange> OrderStatusChanges
		{
			get
			{
				return this._OrderStatusChanges;
			}
			set
			{
				this._OrderStatusChanges.Assign(value);
			}
		}
		
		[Association(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[Association(Name="Order_OrderCharge", Storage="_OrderCharges", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderCharge> OrderCharges
		{
			get
			{
				return this._OrderCharges;
			}
			set
			{
				this._OrderCharges.Assign(value);
			}
		}
		
		[Association(Name="Campaign_Order", Storage="_Campaign", ThisKey="CampaignId", OtherKey="CampaignId", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._CampaignId = value.CampaignId;
					}
					else
					{
						this._CampaignId = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[Association(Name="OrderStatus_Order", Storage="_OrderStatus", ThisKey="OrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._OrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._OrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		[Association(Name="OrderType_Order", Storage="_OrderType", ThisKey="OrderTypeId", OtherKey="OrderTypeId", IsForeignKey=true)]
		public OrderType OrderType
		{
			get
			{
				return this._OrderType.Entity;
			}
			set
			{
				OrderType previousValue = this._OrderType.Entity;
				if (((previousValue != value) 
							|| (this._OrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderType.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._OrderType.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._OrderTypeId = value.OrderTypeId;
					}
					else
					{
						this._OrderTypeId = default(int);
					}
					this.SendPropertyChanged("OrderType");
				}
			}
		}
		
		[Association(Name="Form_Order", Storage="_Form", ThisKey="FormId", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._FormId = value.FormId;
					}
					else
					{
						this._FormId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProgramAgreementCampaigns(ProgramAgreementCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_ProgramAgreementCampaigns(ProgramAgreementCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_ProgramAgreementOrders(ProgramAgreementOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_ProgramAgreementOrders(ProgramAgreementOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderStatusChanges(OrderStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderStatusChanges(OrderStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderCharges(OrderCharge entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderCharges(OrderCharge entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[Table(Name="dbo.document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentId;
		
		private string _DocumentName;
		
		private System.Nullable<int> _DocumentTypeId;
		
		private string _Description;
		
		private string _FilePath;
		
		private System.Nullable<bool> _IsApproved;
		
		private System.Nullable<int> _ApprovedUserId;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<System.DateTime> _ReceivedDate;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private string _ExemptionNumber;
		
		private System.Nullable<System.DateTime> _ExemptionStartDate;
		
		private System.Nullable<System.DateTime> _ExemptionEndDate;
		
		private EntitySet<DocumentAccount> _DocumentAccounts;
		
		private EntityRef<DocumentType> _DocumentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIdChanging(int value);
    partial void OnDocumentIdChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnDocumentTypeIdChanging(System.Nullable<int> value);
    partial void OnDocumentTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnApprovedUserIdChanging(System.Nullable<int> value);
    partial void OnApprovedUserIdChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnExemptionNumberChanging(string value);
    partial void OnExemptionNumberChanged();
    partial void OnExemptionStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExemptionStartDateChanged();
    partial void OnExemptionEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExemptionEndDateChanged();
    #endregion
		
		public Document()
		{
			this._DocumentAccounts = new EntitySet<DocumentAccount>(new Action<DocumentAccount>(this.attach_DocumentAccounts), new Action<DocumentAccount>(this.detach_DocumentAccounts));
			this._DocumentType = default(EntityRef<DocumentType>);
			OnCreated();
		}
		
		[Column(Name="document_id", Storage="_DocumentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[Column(Name="document_name", Storage="_DocumentName", DbType="VarChar(100)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[Column(Name="document_type_id", Storage="_DocumentTypeId", DbType="Int")]
		public System.Nullable<int> DocumentTypeId
		{
			get
			{
				return this._DocumentTypeId;
			}
			set
			{
				if ((this._DocumentTypeId != value))
				{
					this.OnDocumentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeId = value;
					this.SendPropertyChanged("DocumentTypeId");
					this.OnDocumentTypeIdChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="file_path", Storage="_FilePath", DbType="VarChar(100)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Name="approved", Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[Column(Name="approved_user_id", Storage="_ApprovedUserId", DbType="Int")]
		public System.Nullable<int> ApprovedUserId
		{
			get
			{
				return this._ApprovedUserId;
			}
			set
			{
				if ((this._ApprovedUserId != value))
				{
					this.OnApprovedUserIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedUserId = value;
					this.SendPropertyChanged("ApprovedUserId");
					this.OnApprovedUserIdChanged();
				}
			}
		}
		
		[Column(Name="approved_date", Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[Column(Name="received_date", Storage="_ReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this.OnReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivedDate = value;
					this.SendPropertyChanged("ReceivedDate");
					this.OnReceivedDateChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="exemption_number", Storage="_ExemptionNumber", DbType="VarChar(50)")]
		public string ExemptionNumber
		{
			get
			{
				return this._ExemptionNumber;
			}
			set
			{
				if ((this._ExemptionNumber != value))
				{
					this.OnExemptionNumberChanging(value);
					this.SendPropertyChanging();
					this._ExemptionNumber = value;
					this.SendPropertyChanged("ExemptionNumber");
					this.OnExemptionNumberChanged();
				}
			}
		}
		
		[Column(Name="exemption_start_date", Storage="_ExemptionStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExemptionStartDate
		{
			get
			{
				return this._ExemptionStartDate;
			}
			set
			{
				if ((this._ExemptionStartDate != value))
				{
					this.OnExemptionStartDateChanging(value);
					this.SendPropertyChanging();
					this._ExemptionStartDate = value;
					this.SendPropertyChanged("ExemptionStartDate");
					this.OnExemptionStartDateChanged();
				}
			}
		}
		
		[Column(Name="exemption_end_date", Storage="_ExemptionEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExemptionEndDate
		{
			get
			{
				return this._ExemptionEndDate;
			}
			set
			{
				if ((this._ExemptionEndDate != value))
				{
					this.OnExemptionEndDateChanging(value);
					this.SendPropertyChanging();
					this._ExemptionEndDate = value;
					this.SendPropertyChanged("ExemptionEndDate");
					this.OnExemptionEndDateChanged();
				}
			}
		}
		
		[Association(Name="Document_DocumentAccount", Storage="_DocumentAccounts", ThisKey="DocumentId", OtherKey="DocumentId")]
		public EntitySet<DocumentAccount> DocumentAccounts
		{
			get
			{
				return this._DocumentAccounts;
			}
			set
			{
				this._DocumentAccounts.Assign(value);
			}
		}
		
		[Association(Name="DocumentType_Document", Storage="_DocumentType", ThisKey="DocumentTypeId", OtherKey="DocumentTypeId", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._DocumentTypeId = value.DocumentTypeId;
					}
					else
					{
						this._DocumentTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentAccounts(DocumentAccount entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_DocumentAccounts(DocumentAccount entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
	}
	
	[Table(Name="dbo.document_account")]
	public partial class DocumentAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentAccountId;
		
		private int _AccountId;
		
		private int _DocumentId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentAccountIdChanging(int value);
    partial void OnDocumentAccountIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnDocumentIdChanging(int value);
    partial void OnDocumentIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public DocumentAccount()
		{
			this._Account = default(EntityRef<Account>);
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[Column(Name="document_account_id", Storage="_DocumentAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentAccountId
		{
			get
			{
				return this._DocumentAccountId;
			}
			set
			{
				if ((this._DocumentAccountId != value))
				{
					this.OnDocumentAccountIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentAccountId = value;
					this.SendPropertyChanged("DocumentAccountId");
					this.OnDocumentAccountIdChanged();
				}
			}
		}
		
		[Column(Name="account_id", Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="document_id", Storage="_DocumentId", DbType="Int NOT NULL")]
		public int DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Account_DocumentAccount", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.DocumentAccounts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.DocumentAccounts.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[Association(Name="Document_DocumentAccount", Storage="_Document", ThisKey="DocumentId", OtherKey="DocumentId", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.DocumentAccounts.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.DocumentAccounts.Add(this);
						this._DocumentId = value.DocumentId;
					}
					else
					{
						this._DocumentId = default(int);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.document_type")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentTypeId;
		
		private string _DocumentTypeName;
		
		private EntitySet<Document> _Documents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentTypeIdChanging(int value);
    partial void OnDocumentTypeIdChanged();
    partial void OnDocumentTypeNameChanging(string value);
    partial void OnDocumentTypeNameChanged();
    #endregion
		
		public DocumentType()
		{
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			OnCreated();
		}
		
		[Column(Name="document_type_id", Storage="_DocumentTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentTypeId
		{
			get
			{
				return this._DocumentTypeId;
			}
			set
			{
				if ((this._DocumentTypeId != value))
				{
					this.OnDocumentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeId = value;
					this.SendPropertyChanged("DocumentTypeId");
					this.OnDocumentTypeIdChanged();
				}
			}
		}
		
		[Column(Name="document_type_name", Storage="_DocumentTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DocumentTypeName
		{
			get
			{
				return this._DocumentTypeName;
			}
			set
			{
				if ((this._DocumentTypeName != value))
				{
					this.OnDocumentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeName = value;
					this.SendPropertyChanged("DocumentTypeName");
					this.OnDocumentTypeNameChanged();
				}
			}
		}
		
		[Association(Name="DocumentType_Document", Storage="_Documents", ThisKey="DocumentTypeId", OtherKey="DocumentTypeId")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
	}
	
	[Table(Name="dbo.order_status")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderStatusId;
		
		private string _OrderStatusName;
		
		private string _ColorCode;
		
		private System.Nullable<int> _StatusCategoryId;
		
		private string _Description;
		
		private string _ShortDescription;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<OrderStatusChange> _OrderStatusChanges;
		
		private EntityRef<StatusCategory> _StatusCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnOrderStatusNameChanging(string value);
    partial void OnOrderStatusNameChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnStatusCategoryIdChanging(System.Nullable<int> value);
    partial void OnStatusCategoryIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    #endregion
		
		public OrderStatus()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._OrderStatusChanges = new EntitySet<OrderStatusChange>(new Action<OrderStatusChange>(this.attach_OrderStatusChanges), new Action<OrderStatusChange>(this.detach_OrderStatusChanges));
			this._StatusCategory = default(EntityRef<StatusCategory>);
			OnCreated();
		}
		
		[Column(Name="order_status_id", Storage="_OrderStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[Column(Name="order_status_name", Storage="_OrderStatusName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderStatusName
		{
			get
			{
				return this._OrderStatusName;
			}
			set
			{
				if ((this._OrderStatusName != value))
				{
					this.OnOrderStatusNameChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusName = value;
					this.SendPropertyChanged("OrderStatusName");
					this.OnOrderStatusNameChanged();
				}
			}
		}
		
		[Column(Name="color_code", Storage="_ColorCode", DbType="VarChar(50)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Name="status_category_id", Storage="_StatusCategoryId", DbType="Int")]
		public System.Nullable<int> StatusCategoryId
		{
			get
			{
				return this._StatusCategoryId;
			}
			set
			{
				if ((this._StatusCategoryId != value))
				{
					this.OnStatusCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._StatusCategoryId = value;
					this.SendPropertyChanged("StatusCategoryId");
					this.OnStatusCategoryIdChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="short_description", Storage="_ShortDescription", DbType="VarChar(50)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[Association(Name="OrderStatus_Order", Storage="_Orders", ThisKey="OrderStatusId", OtherKey="OrderStatusId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[Association(Name="OrderStatus_OrderStatusChange", Storage="_OrderStatusChanges", ThisKey="OrderStatusId", OtherKey="OrderStatusId")]
		public EntitySet<OrderStatusChange> OrderStatusChanges
		{
			get
			{
				return this._OrderStatusChanges;
			}
			set
			{
				this._OrderStatusChanges.Assign(value);
			}
		}
		
		[Association(Name="StatusCategory_OrderStatus", Storage="_StatusCategory", ThisKey="StatusCategoryId", OtherKey="StatusCategoryId", IsForeignKey=true)]
		public StatusCategory StatusCategory
		{
			get
			{
				return this._StatusCategory.Entity;
			}
			set
			{
				StatusCategory previousValue = this._StatusCategory.Entity;
				if (((previousValue != value) 
							|| (this._StatusCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusCategory.Entity = null;
						previousValue.OrderStatus.Remove(this);
					}
					this._StatusCategory.Entity = value;
					if ((value != null))
					{
						value.OrderStatus.Add(this);
						this._StatusCategoryId = value.StatusCategoryId;
					}
					else
					{
						this._StatusCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StatusCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
		
		private void attach_OrderStatusChanges(OrderStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_OrderStatusChanges(OrderStatusChange entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
	}
	
	[Table(Name="dbo.order_type")]
	public partial class OrderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderTypeId;
		
		private string _OrderTypeName;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderTypeIdChanging(int value);
    partial void OnOrderTypeIdChanged();
    partial void OnOrderTypeNameChanging(string value);
    partial void OnOrderTypeNameChanged();
    #endregion
		
		public OrderType()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[Column(Name="order_type_id", Storage="_OrderTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderTypeId
		{
			get
			{
				return this._OrderTypeId;
			}
			set
			{
				if ((this._OrderTypeId != value))
				{
					this.OnOrderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeId = value;
					this.SendPropertyChanged("OrderTypeId");
					this.OnOrderTypeIdChanged();
				}
			}
		}
		
		[Column(Name="order_type_name", Storage="_OrderTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderTypeName
		{
			get
			{
				return this._OrderTypeName;
			}
			set
			{
				if ((this._OrderTypeName != value))
				{
					this.OnOrderTypeNameChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeName = value;
					this.SendPropertyChanged("OrderTypeName");
					this.OnOrderTypeNameChanged();
				}
			}
		}
		
		[Association(Name="OrderType_Order", Storage="_Orders", ThisKey="OrderTypeId", OtherKey="OrderTypeId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = null;
		}
	}
	
	[Table(Name="dbo.source")]
	public partial class Source : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SourceId;
		
		private string _SourceName;
		
		private System.Nullable<int> _SourceGroupId;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSourceIdChanging(int value);
    partial void OnSourceIdChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnSourceGroupIdChanging(System.Nullable<int> value);
    partial void OnSourceGroupIdChanged();
    #endregion
		
		public Source()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			OnCreated();
		}
		
		[Column(Name="source_id", Storage="_SourceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[Column(Name="source_name", Storage="_SourceName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this.OnSourceNameChanging(value);
					this.SendPropertyChanging();
					this._SourceName = value;
					this.SendPropertyChanged("SourceName");
					this.OnSourceNameChanged();
				}
			}
		}
		
		[Column(Name="source_group_id", Storage="_SourceGroupId", DbType="Int")]
		public System.Nullable<int> SourceGroupId
		{
			get
			{
				return this._SourceGroupId;
			}
			set
			{
				if ((this._SourceGroupId != value))
				{
					this.OnSourceGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SourceGroupId = value;
					this.SendPropertyChanged("SourceGroupId");
					this.OnSourceGroupIdChanged();
				}
			}
		}
		
		[Association(Name="Source_OrderDetail", Storage="_OrderDetails", ThisKey="SourceId", OtherKey="SourceId")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Source = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Source = null;
		}
	}
	
	[Table(Name="dbo.account_status_change")]
	public partial class AccountStatusChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountStatusChangeId;
		
		private int _AccountId;
		
		private int _AccountStatusId;
		
		private string _StatusChangeReason;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<AccountStatus> _AccountStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountStatusChangeIdChanging(int value);
    partial void OnAccountStatusChangeIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAccountStatusIdChanging(int value);
    partial void OnAccountStatusIdChanged();
    partial void OnStatusChangeReasonChanging(string value);
    partial void OnStatusChangeReasonChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public AccountStatusChange()
		{
			this._Account = default(EntityRef<Account>);
			this._AccountStatus = default(EntityRef<AccountStatus>);
			OnCreated();
		}
		
		[Column(Name="account_status_change_id", Storage="_AccountStatusChangeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountStatusChangeId
		{
			get
			{
				return this._AccountStatusChangeId;
			}
			set
			{
				if ((this._AccountStatusChangeId != value))
				{
					this.OnAccountStatusChangeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountStatusChangeId = value;
					this.SendPropertyChanged("AccountStatusChangeId");
					this.OnAccountStatusChangeIdChanged();
				}
			}
		}
		
		[Column(Name="account_id", Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="account_status_id", Storage="_AccountStatusId", DbType="Int NOT NULL")]
		public int AccountStatusId
		{
			get
			{
				return this._AccountStatusId;
			}
			set
			{
				if ((this._AccountStatusId != value))
				{
					this.OnAccountStatusIdChanging(value);
					this.SendPropertyChanging();
					this._AccountStatusId = value;
					this.SendPropertyChanged("AccountStatusId");
					this.OnAccountStatusIdChanged();
				}
			}
		}
		
		[Column(Name="status_change_reason", Storage="_StatusChangeReason", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string StatusChangeReason
		{
			get
			{
				return this._StatusChangeReason;
			}
			set
			{
				if ((this._StatusChangeReason != value))
				{
					this.OnStatusChangeReasonChanging(value);
					this.SendPropertyChanging();
					this._StatusChangeReason = value;
					this.SendPropertyChanged("StatusChangeReason");
					this.OnStatusChangeReasonChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Account_AccountStatusChange", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountStatusChanges.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountStatusChanges.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[Association(Name="AccountStatus_AccountStatusChange", Storage="_AccountStatus", ThisKey="AccountStatusId", OtherKey="AccountStatusId", IsForeignKey=true)]
		public AccountStatus AccountStatus
		{
			get
			{
				return this._AccountStatus.Entity;
			}
			set
			{
				AccountStatus previousValue = this._AccountStatus.Entity;
				if (((previousValue != value) 
							|| (this._AccountStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountStatus.Entity = null;
						previousValue.AccountStatusChanges.Remove(this);
					}
					this._AccountStatus.Entity = value;
					if ((value != null))
					{
						value.AccountStatusChanges.Add(this);
						this._AccountStatusId = value.AccountStatusId;
					}
					else
					{
						this._AccountStatusId = default(int);
					}
					this.SendPropertyChanged("AccountStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.program_agreement_status_change")]
	public partial class ProgramAgreementStatusChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramAgreementStatusChangeId;
		
		private int _ProgramAgreementId;
		
		private int _ProgramAgreementStatusId;
		
		private string _StatusChangeReason;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<ProgramAgreement> _ProgramAgreement;
		
		private EntityRef<ProgramAgreementStatus> _ProgramAgreementStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramAgreementStatusChangeIdChanging(int value);
    partial void OnProgramAgreementStatusChangeIdChanged();
    partial void OnProgramAgreementIdChanging(int value);
    partial void OnProgramAgreementIdChanged();
    partial void OnProgramAgreementStatusIdChanging(int value);
    partial void OnProgramAgreementStatusIdChanged();
    partial void OnStatusChangeReasonChanging(string value);
    partial void OnStatusChangeReasonChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public ProgramAgreementStatusChange()
		{
			this._ProgramAgreement = default(EntityRef<ProgramAgreement>);
			this._ProgramAgreementStatus = default(EntityRef<ProgramAgreementStatus>);
			OnCreated();
		}
		
		[Column(Name="program_agreement_status_change_id", Storage="_ProgramAgreementStatusChangeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgramAgreementStatusChangeId
		{
			get
			{
				return this._ProgramAgreementStatusChangeId;
			}
			set
			{
				if ((this._ProgramAgreementStatusChangeId != value))
				{
					this.OnProgramAgreementStatusChangeIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementStatusChangeId = value;
					this.SendPropertyChanged("ProgramAgreementStatusChangeId");
					this.OnProgramAgreementStatusChangeIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_id", Storage="_ProgramAgreementId", DbType="Int NOT NULL")]
		public int ProgramAgreementId
		{
			get
			{
				return this._ProgramAgreementId;
			}
			set
			{
				if ((this._ProgramAgreementId != value))
				{
					this.OnProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementId = value;
					this.SendPropertyChanged("ProgramAgreementId");
					this.OnProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_status_id", Storage="_ProgramAgreementStatusId", DbType="Int NOT NULL")]
		public int ProgramAgreementStatusId
		{
			get
			{
				return this._ProgramAgreementStatusId;
			}
			set
			{
				if ((this._ProgramAgreementStatusId != value))
				{
					this.OnProgramAgreementStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementStatusId = value;
					this.SendPropertyChanged("ProgramAgreementStatusId");
					this.OnProgramAgreementStatusIdChanged();
				}
			}
		}
		
		[Column(Name="status_change_reason", Storage="_StatusChangeReason", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string StatusChangeReason
		{
			get
			{
				return this._StatusChangeReason;
			}
			set
			{
				if ((this._StatusChangeReason != value))
				{
					this.OnStatusChangeReasonChanging(value);
					this.SendPropertyChanging();
					this._StatusChangeReason = value;
					this.SendPropertyChanged("StatusChangeReason");
					this.OnStatusChangeReasonChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="ProgramAgreement_ProgramAgreementStatusChange", Storage="_ProgramAgreement", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId", IsForeignKey=true)]
		public ProgramAgreement ProgramAgreement
		{
			get
			{
				return this._ProgramAgreement.Entity;
			}
			set
			{
				ProgramAgreement previousValue = this._ProgramAgreement.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreement.Entity = null;
						previousValue.ProgramAgreementStatusChanges.Remove(this);
					}
					this._ProgramAgreement.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementStatusChanges.Add(this);
						this._ProgramAgreementId = value.ProgramAgreementId;
					}
					else
					{
						this._ProgramAgreementId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreement");
				}
			}
		}
		
		[Association(Name="ProgramAgreementStatus_ProgramAgreementStatusChange", Storage="_ProgramAgreementStatus", ThisKey="ProgramAgreementStatusId", OtherKey="ProgramAgreementStatusId", IsForeignKey=true)]
		public ProgramAgreementStatus ProgramAgreementStatus
		{
			get
			{
				return this._ProgramAgreementStatus.Entity;
			}
			set
			{
				ProgramAgreementStatus previousValue = this._ProgramAgreementStatus.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreementStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreementStatus.Entity = null;
						previousValue.ProgramAgreementStatusChanges.Remove(this);
					}
					this._ProgramAgreementStatus.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementStatusChanges.Add(this);
						this._ProgramAgreementStatusId = value.ProgramAgreementStatusId;
					}
					else
					{
						this._ProgramAgreementStatusId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreementStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.program_agreement_catalog")]
	public partial class ProgramAgreementCatalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramAgreementCatalogId;
		
		private int _ProgramAgreementId;
		
		private int _CatalogId;
		
		private EntityRef<Catalog> _Catalog;
		
		private EntityRef<ProgramAgreement> _ProgramAgreement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramAgreementCatalogIdChanging(int value);
    partial void OnProgramAgreementCatalogIdChanged();
    partial void OnProgramAgreementIdChanging(int value);
    partial void OnProgramAgreementIdChanged();
    partial void OnCatalogIdChanging(int value);
    partial void OnCatalogIdChanged();
    #endregion
		
		public ProgramAgreementCatalog()
		{
			this._Catalog = default(EntityRef<Catalog>);
			this._ProgramAgreement = default(EntityRef<ProgramAgreement>);
			OnCreated();
		}
		
		[Column(Name="program_agreement_catalog_id", Storage="_ProgramAgreementCatalogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgramAgreementCatalogId
		{
			get
			{
				return this._ProgramAgreementCatalogId;
			}
			set
			{
				if ((this._ProgramAgreementCatalogId != value))
				{
					this.OnProgramAgreementCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementCatalogId = value;
					this.SendPropertyChanged("ProgramAgreementCatalogId");
					this.OnProgramAgreementCatalogIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_id", Storage="_ProgramAgreementId", DbType="Int NOT NULL")]
		public int ProgramAgreementId
		{
			get
			{
				return this._ProgramAgreementId;
			}
			set
			{
				if ((this._ProgramAgreementId != value))
				{
					this.OnProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementId = value;
					this.SendPropertyChanged("ProgramAgreementId");
					this.OnProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_id", Storage="_CatalogId", DbType="Int NOT NULL")]
		public int CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this.OnCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogId = value;
					this.SendPropertyChanged("CatalogId");
					this.OnCatalogIdChanged();
				}
			}
		}
		
		[Association(Name="Catalog_ProgramAgreementCatalog", Storage="_Catalog", ThisKey="CatalogId", OtherKey="CatalogId", IsForeignKey=true)]
		public Catalog Catalog
		{
			get
			{
				return this._Catalog.Entity;
			}
			set
			{
				Catalog previousValue = this._Catalog.Entity;
				if (((previousValue != value) 
							|| (this._Catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalog.Entity = null;
						previousValue.ProgramAgreementCatalogs.Remove(this);
					}
					this._Catalog.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementCatalogs.Add(this);
						this._CatalogId = value.CatalogId;
					}
					else
					{
						this._CatalogId = default(int);
					}
					this.SendPropertyChanged("Catalog");
				}
			}
		}
		
		[Association(Name="ProgramAgreement_ProgramAgreementCatalog", Storage="_ProgramAgreement", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId", IsForeignKey=true)]
		public ProgramAgreement ProgramAgreement
		{
			get
			{
				return this._ProgramAgreement.Entity;
			}
			set
			{
				ProgramAgreement previousValue = this._ProgramAgreement.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreement.Entity = null;
						previousValue.ProgramAgreementCatalogs.Remove(this);
					}
					this._ProgramAgreement.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementCatalogs.Add(this);
						this._ProgramAgreementId = value.ProgramAgreementId;
					}
					else
					{
						this._ProgramAgreementId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.program_agreement_order")]
	public partial class ProgramAgreementOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramAgreementOrderId;
		
		private int _ProgramAgreementId;
		
		private int _OrderId;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<ProgramAgreement> _ProgramAgreement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramAgreementOrderIdChanging(int value);
    partial void OnProgramAgreementOrderIdChanged();
    partial void OnProgramAgreementIdChanging(int value);
    partial void OnProgramAgreementIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public ProgramAgreementOrder()
		{
			this._Order = default(EntityRef<Order>);
			this._ProgramAgreement = default(EntityRef<ProgramAgreement>);
			OnCreated();
		}
		
		[Column(Name="program_agreement_order_id", Storage="_ProgramAgreementOrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgramAgreementOrderId
		{
			get
			{
				return this._ProgramAgreementOrderId;
			}
			set
			{
				if ((this._ProgramAgreementOrderId != value))
				{
					this.OnProgramAgreementOrderIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementOrderId = value;
					this.SendPropertyChanged("ProgramAgreementOrderId");
					this.OnProgramAgreementOrderIdChanged();
				}
			}
		}
		
		[Column(Name="program_agreement_id", Storage="_ProgramAgreementId", DbType="Int NOT NULL")]
		public int ProgramAgreementId
		{
			get
			{
				return this._ProgramAgreementId;
			}
			set
			{
				if ((this._ProgramAgreementId != value))
				{
					this.OnProgramAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramAgreementId = value;
					this.SendPropertyChanged("ProgramAgreementId");
					this.OnProgramAgreementIdChanged();
				}
			}
		}
		
		[Column(Name="order_id", Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Order_ProgramAgreementOrder", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.ProgramAgreementOrders.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementOrders.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[Association(Name="ProgramAgreement_ProgramAgreementOrder", Storage="_ProgramAgreement", ThisKey="ProgramAgreementId", OtherKey="ProgramAgreementId", IsForeignKey=true)]
		public ProgramAgreement ProgramAgreement
		{
			get
			{
				return this._ProgramAgreement.Entity;
			}
			set
			{
				ProgramAgreement previousValue = this._ProgramAgreement.Entity;
				if (((previousValue != value) 
							|| (this._ProgramAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramAgreement.Entity = null;
						previousValue.ProgramAgreementOrders.Remove(this);
					}
					this._ProgramAgreement.Entity = value;
					if ((value != null))
					{
						value.ProgramAgreementOrders.Add(this);
						this._ProgramAgreementId = value.ProgramAgreementId;
					}
					else
					{
						this._ProgramAgreementId = default(int);
					}
					this.SendPropertyChanged("ProgramAgreement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.order_status_change")]
	public partial class OrderStatusChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderStatusChangeId;
		
		private int _OrderId;
		
		private int _OrderStatusId;
		
		private string _StatusChangeReason;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserId;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderStatusChangeIdChanging(int value);
    partial void OnOrderStatusChangeIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnStatusChangeReasonChanging(string value);
    partial void OnStatusChangeReasonChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public OrderStatusChange()
		{
			this._Order = default(EntityRef<Order>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			OnCreated();
		}
		
		[Column(Name="order_status_change_id", Storage="_OrderStatusChangeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderStatusChangeId
		{
			get
			{
				return this._OrderStatusChangeId;
			}
			set
			{
				if ((this._OrderStatusChangeId != value))
				{
					this.OnOrderStatusChangeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusChangeId = value;
					this.SendPropertyChanged("OrderStatusChangeId");
					this.OnOrderStatusChangeIdChanged();
				}
			}
		}
		
		[Column(Name="order_id", Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Name="order_status_id", Storage="_OrderStatusId", DbType="Int NOT NULL")]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[Column(Name="status_change_reason", Storage="_StatusChangeReason", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string StatusChangeReason
		{
			get
			{
				return this._StatusChangeReason;
			}
			set
			{
				if ((this._StatusChangeReason != value))
				{
					this.OnStatusChangeReasonChanging(value);
					this.SendPropertyChanging();
					this._StatusChangeReason = value;
					this.SendPropertyChanged("StatusChangeReason");
					this.OnStatusChangeReasonChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Order_OrderStatusChange", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderStatusChanges.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderStatusChanges.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[Association(Name="OrderStatus_OrderStatusChange", Storage="_OrderStatus", ThisKey="OrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.OrderStatusChanges.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.OrderStatusChanges.Add(this);
						this._OrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._OrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.order_detail")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderDetailId;
		
		private int _OrderId;
		
		private int _CatalogItemDetailId;
		
		private System.Nullable<int> _SourceId;
		
		private int _OrderStatusId;
		
		private System.Nullable<int> _StatusReasonId;
		
		private int _ShipmentGroupId;
		
		private int _Quantity;
		
		private int _AdjustmentQuantity;
		
		private decimal _Price;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private System.Nullable<int> _SyncOEOrd;
		
		private string _SyncOECoup;
		
		private System.Nullable<int> _SyncOEItem;
		
		private System.Nullable<int> _PersonalizationId;
		
		private System.Nullable<bool> _IsRenewal;
		
		private System.Nullable<decimal> _PriceA;
		
		private System.Nullable<decimal> _CommissionPercentage;
		
		private EntitySet<OrderDetailTax> _OrderDetailTaxes;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Source> _Source;
		
		private EntityRef<CatalogItemDetail> _CatalogItemDetail;
		
		private EntityRef<ShipmentGroup> _ShipmentGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderDetailIdChanging(int value);
    partial void OnOrderDetailIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnCatalogItemDetailIdChanging(int value);
    partial void OnCatalogItemDetailIdChanged();
    partial void OnSourceIdChanging(System.Nullable<int> value);
    partial void OnSourceIdChanged();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnStatusReasonIdChanging(System.Nullable<int> value);
    partial void OnStatusReasonIdChanged();
    partial void OnShipmentGroupIdChanging(int value);
    partial void OnShipmentGroupIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnAdjustmentQuantityChanging(int value);
    partial void OnAdjustmentQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnSyncOEOrdChanging(System.Nullable<int> value);
    partial void OnSyncOEOrdChanged();
    partial void OnSyncOECoupChanging(string value);
    partial void OnSyncOECoupChanged();
    partial void OnSyncOEItemChanging(System.Nullable<int> value);
    partial void OnSyncOEItemChanged();
    partial void OnPersonalizationIdChanging(System.Nullable<int> value);
    partial void OnPersonalizationIdChanged();
    partial void OnIsRenewalChanging(System.Nullable<bool> value);
    partial void OnIsRenewalChanged();
    partial void OnPriceAChanging(System.Nullable<decimal> value);
    partial void OnPriceAChanged();
    partial void OnCommissionPercentageChanging(System.Nullable<decimal> value);
    partial void OnCommissionPercentageChanged();
    #endregion
		
		public OrderDetail()
		{
			this._OrderDetailTaxes = new EntitySet<OrderDetailTax>(new Action<OrderDetailTax>(this.attach_OrderDetailTaxes), new Action<OrderDetailTax>(this.detach_OrderDetailTaxes));
			this._Order = default(EntityRef<Order>);
			this._Source = default(EntityRef<Source>);
			this._CatalogItemDetail = default(EntityRef<CatalogItemDetail>);
			this._ShipmentGroup = default(EntityRef<ShipmentGroup>);
			OnCreated();
		}
		
		[Column(Name="order_detail_id", Storage="_OrderDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderDetailId
		{
			get
			{
				return this._OrderDetailId;
			}
			set
			{
				if ((this._OrderDetailId != value))
				{
					this.OnOrderDetailIdChanging(value);
					this.SendPropertyChanging();
					this._OrderDetailId = value;
					this.SendPropertyChanged("OrderDetailId");
					this.OnOrderDetailIdChanged();
				}
			}
		}
		
		[Column(Name="order_id", Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_detail_id", Storage="_CatalogItemDetailId", DbType="Int NOT NULL")]
		public int CatalogItemDetailId
		{
			get
			{
				return this._CatalogItemDetailId;
			}
			set
			{
				if ((this._CatalogItemDetailId != value))
				{
					this.OnCatalogItemDetailIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemDetailId = value;
					this.SendPropertyChanged("CatalogItemDetailId");
					this.OnCatalogItemDetailIdChanged();
				}
			}
		}
		
		[Column(Name="source_id", Storage="_SourceId", DbType="Int")]
		public System.Nullable<int> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[Column(Name="order_status_id", Storage="_OrderStatusId", DbType="Int NOT NULL")]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[Column(Name="status_reason_id", Storage="_StatusReasonId", DbType="Int")]
		public System.Nullable<int> StatusReasonId
		{
			get
			{
				return this._StatusReasonId;
			}
			set
			{
				if ((this._StatusReasonId != value))
				{
					this.OnStatusReasonIdChanging(value);
					this.SendPropertyChanging();
					this._StatusReasonId = value;
					this.SendPropertyChanged("StatusReasonId");
					this.OnStatusReasonIdChanged();
				}
			}
		}
		
		[Column(Name="shipment_group_id", Storage="_ShipmentGroupId", DbType="Int NOT NULL")]
		public int ShipmentGroupId
		{
			get
			{
				return this._ShipmentGroupId;
			}
			set
			{
				if ((this._ShipmentGroupId != value))
				{
					this.OnShipmentGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentGroupId = value;
					this.SendPropertyChanged("ShipmentGroupId");
					this.OnShipmentGroupIdChanged();
				}
			}
		}
		
		[Column(Name="quantity", Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[Column(Name="adjustment_quantity", Storage="_AdjustmentQuantity", DbType="Int NOT NULL")]
		public int AdjustmentQuantity
		{
			get
			{
				return this._AdjustmentQuantity;
			}
			set
			{
				if ((this._AdjustmentQuantity != value))
				{
					this.OnAdjustmentQuantityChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentQuantity = value;
					this.SendPropertyChanged("AdjustmentQuantity");
					this.OnAdjustmentQuantityChanged();
				}
			}
		}
		
		[Column(Name="price", Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="sync_oe#ord", Storage="_SyncOEOrd", DbType="Int")]
		public System.Nullable<int> SyncOEOrd
		{
			get
			{
				return this._SyncOEOrd;
			}
			set
			{
				if ((this._SyncOEOrd != value))
				{
					this.OnSyncOEOrdChanging(value);
					this.SendPropertyChanging();
					this._SyncOEOrd = value;
					this.SendPropertyChanged("SyncOEOrd");
					this.OnSyncOEOrdChanged();
				}
			}
		}
		
		[Column(Name="sync_oecoup", Storage="_SyncOECoup", DbType="VarChar(2)")]
		public string SyncOECoup
		{
			get
			{
				return this._SyncOECoup;
			}
			set
			{
				if ((this._SyncOECoup != value))
				{
					this.OnSyncOECoupChanging(value);
					this.SendPropertyChanging();
					this._SyncOECoup = value;
					this.SendPropertyChanged("SyncOECoup");
					this.OnSyncOECoupChanged();
				}
			}
		}
		
		[Column(Name="sync_oeitem", Storage="_SyncOEItem", DbType="Int")]
		public System.Nullable<int> SyncOEItem
		{
			get
			{
				return this._SyncOEItem;
			}
			set
			{
				if ((this._SyncOEItem != value))
				{
					this.OnSyncOEItemChanging(value);
					this.SendPropertyChanging();
					this._SyncOEItem = value;
					this.SendPropertyChanged("SyncOEItem");
					this.OnSyncOEItemChanged();
				}
			}
		}
		
		[Column(Name="personalization_id", Storage="_PersonalizationId", DbType="Int")]
		public System.Nullable<int> PersonalizationId
		{
			get
			{
				return this._PersonalizationId;
			}
			set
			{
				if ((this._PersonalizationId != value))
				{
					this.OnPersonalizationIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalizationId = value;
					this.SendPropertyChanged("PersonalizationId");
					this.OnPersonalizationIdChanged();
				}
			}
		}
		
		[Column(Name="renewal", Storage="_IsRenewal", DbType="Bit")]
		public System.Nullable<bool> IsRenewal
		{
			get
			{
				return this._IsRenewal;
			}
			set
			{
				if ((this._IsRenewal != value))
				{
					this.OnIsRenewalChanging(value);
					this.SendPropertyChanging();
					this._IsRenewal = value;
					this.SendPropertyChanged("IsRenewal");
					this.OnIsRenewalChanged();
				}
			}
		}
		
		[Column(Name="priceA", Storage="_PriceA", DbType="Money")]
		public System.Nullable<decimal> PriceA
		{
			get
			{
				return this._PriceA;
			}
			set
			{
				if ((this._PriceA != value))
				{
					this.OnPriceAChanging(value);
					this.SendPropertyChanging();
					this._PriceA = value;
					this.SendPropertyChanged("PriceA");
					this.OnPriceAChanged();
				}
			}
		}
		
		[Column(Name="commission_percentage", Storage="_CommissionPercentage", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CommissionPercentage
		{
			get
			{
				return this._CommissionPercentage;
			}
			set
			{
				if ((this._CommissionPercentage != value))
				{
					this.OnCommissionPercentageChanging(value);
					this.SendPropertyChanging();
					this._CommissionPercentage = value;
					this.SendPropertyChanged("CommissionPercentage");
					this.OnCommissionPercentageChanged();
				}
			}
		}
		
		[Association(Name="OrderDetail_OrderDetailTax", Storage="_OrderDetailTaxes", ThisKey="OrderDetailId", OtherKey="OrderDetailId")]
		public EntitySet<OrderDetailTax> OrderDetailTaxes
		{
			get
			{
				return this._OrderDetailTaxes;
			}
			set
			{
				this._OrderDetailTaxes.Assign(value);
			}
		}
		
		[Association(Name="Order_OrderDetail", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[Association(Name="Source_OrderDetail", Storage="_Source", ThisKey="SourceId", OtherKey="SourceId", IsForeignKey=true)]
		public Source Source
		{
			get
			{
				return this._Source.Entity;
			}
			set
			{
				Source previousValue = this._Source.Entity;
				if (((previousValue != value) 
							|| (this._Source.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Source.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Source.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._SourceId = value.SourceId;
					}
					else
					{
						this._SourceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Source");
				}
			}
		}
		
		[Association(Name="CatalogItemDetail_OrderDetail", Storage="_CatalogItemDetail", ThisKey="CatalogItemDetailId", OtherKey="CatalogItemDetailId", IsForeignKey=true)]
		public CatalogItemDetail CatalogItemDetail
		{
			get
			{
				return this._CatalogItemDetail.Entity;
			}
			set
			{
				CatalogItemDetail previousValue = this._CatalogItemDetail.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItemDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItemDetail.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._CatalogItemDetail.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._CatalogItemDetailId = value.CatalogItemDetailId;
					}
					else
					{
						this._CatalogItemDetailId = default(int);
					}
					this.SendPropertyChanged("CatalogItemDetail");
				}
			}
		}
		
		[Association(Name="ShipmentGroup_OrderDetail", Storage="_ShipmentGroup", ThisKey="ShipmentGroupId", OtherKey="ShipmentGroupId", IsForeignKey=true)]
		public ShipmentGroup ShipmentGroup
		{
			get
			{
				return this._ShipmentGroup.Entity;
			}
			set
			{
				ShipmentGroup previousValue = this._ShipmentGroup.Entity;
				if (((previousValue != value) 
							|| (this._ShipmentGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShipmentGroup.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._ShipmentGroup.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._ShipmentGroupId = value.ShipmentGroupId;
					}
					else
					{
						this._ShipmentGroupId = default(int);
					}
					this.SendPropertyChanged("ShipmentGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetailTaxes(OrderDetailTax entity)
		{
			this.SendPropertyChanging();
			entity.OrderDetail = this;
		}
		
		private void detach_OrderDetailTaxes(OrderDetailTax entity)
		{
			this.SendPropertyChanging();
			entity.OrderDetail = null;
		}
	}
	
	[Table(Name="dbo.catalog_item")]
	public partial class CatalogItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogItemId;
		
		private int _CatalogId;
		
		private int _ProductId;
		
		private string _CatalogItemCode;
		
		private string _CatalogItemName;
		
		private string _Description;
		
		private System.Nullable<int> _Units;
		
		private System.Nullable<decimal> _Price;
		
		private string _ImageUrl;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private int _CatalogItemStatusId;
		
		private string _CatalogItemExportName;
		
		private System.Nullable<int> _MustOrderInMultiplesOf;
		
		private EntitySet<CatalogItemDetail> _CatalogItemDetails;
		
		private EntityRef<Catalog> _Catalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogItemIdChanging(int value);
    partial void OnCatalogItemIdChanged();
    partial void OnCatalogIdChanging(int value);
    partial void OnCatalogIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCatalogItemCodeChanging(string value);
    partial void OnCatalogItemCodeChanged();
    partial void OnCatalogItemNameChanging(string value);
    partial void OnCatalogItemNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitsChanging(System.Nullable<int> value);
    partial void OnUnitsChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnCatalogItemStatusIdChanging(int value);
    partial void OnCatalogItemStatusIdChanged();
    partial void OnCatalogItemExportNameChanging(string value);
    partial void OnCatalogItemExportNameChanged();
    partial void OnMustOrderInMultiplesOfChanging(System.Nullable<int> value);
    partial void OnMustOrderInMultiplesOfChanged();
    #endregion
		
		public CatalogItem()
		{
			this._CatalogItemDetails = new EntitySet<CatalogItemDetail>(new Action<CatalogItemDetail>(this.attach_CatalogItemDetails), new Action<CatalogItemDetail>(this.detach_CatalogItemDetails));
			this._Catalog = default(EntityRef<Catalog>);
			OnCreated();
		}
		
		[Column(Name="catalog_item_id", Storage="_CatalogItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogItemId
		{
			get
			{
				return this._CatalogItemId;
			}
			set
			{
				if ((this._CatalogItemId != value))
				{
					this.OnCatalogItemIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemId = value;
					this.SendPropertyChanged("CatalogItemId");
					this.OnCatalogItemIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_id", Storage="_CatalogId", DbType="Int NOT NULL")]
		public int CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this.OnCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogId = value;
					this.SendPropertyChanged("CatalogId");
					this.OnCatalogIdChanged();
				}
			}
		}
		
		[Column(Name="product_id", Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_code", Storage="_CatalogItemCode", DbType="VarChar(50)")]
		public string CatalogItemCode
		{
			get
			{
				return this._CatalogItemCode;
			}
			set
			{
				if ((this._CatalogItemCode != value))
				{
					this.OnCatalogItemCodeChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemCode = value;
					this.SendPropertyChanged("CatalogItemCode");
					this.OnCatalogItemCodeChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_name", Storage="_CatalogItemName", DbType="VarChar(50)")]
		public string CatalogItemName
		{
			get
			{
				return this._CatalogItemName;
			}
			set
			{
				if ((this._CatalogItemName != value))
				{
					this.OnCatalogItemNameChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemName = value;
					this.SendPropertyChanged("CatalogItemName");
					this.OnCatalogItemNameChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="nb_units", Storage="_Units", DbType="Int")]
		public System.Nullable<int> Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this.OnUnitsChanging(value);
					this.SendPropertyChanging();
					this._Units = value;
					this.SendPropertyChanged("Units");
					this.OnUnitsChanged();
				}
			}
		}
		
		[Column(Name="price", Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Name="image_url", Storage="_ImageUrl", DbType="VarChar(255)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_status_id", Storage="_CatalogItemStatusId", DbType="Int NOT NULL")]
		public int CatalogItemStatusId
		{
			get
			{
				return this._CatalogItemStatusId;
			}
			set
			{
				if ((this._CatalogItemStatusId != value))
				{
					this.OnCatalogItemStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemStatusId = value;
					this.SendPropertyChanged("CatalogItemStatusId");
					this.OnCatalogItemStatusIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_export_name", Storage="_CatalogItemExportName", DbType="VarChar(50)")]
		public string CatalogItemExportName
		{
			get
			{
				return this._CatalogItemExportName;
			}
			set
			{
				if ((this._CatalogItemExportName != value))
				{
					this.OnCatalogItemExportNameChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemExportName = value;
					this.SendPropertyChanged("CatalogItemExportName");
					this.OnCatalogItemExportNameChanged();
				}
			}
		}
		
		[Column(Name="must_order_in_multiples_of", Storage="_MustOrderInMultiplesOf", DbType="Int")]
		public System.Nullable<int> MustOrderInMultiplesOf
		{
			get
			{
				return this._MustOrderInMultiplesOf;
			}
			set
			{
				if ((this._MustOrderInMultiplesOf != value))
				{
					this.OnMustOrderInMultiplesOfChanging(value);
					this.SendPropertyChanging();
					this._MustOrderInMultiplesOf = value;
					this.SendPropertyChanged("MustOrderInMultiplesOf");
					this.OnMustOrderInMultiplesOfChanged();
				}
			}
		}
		
		[Association(Name="CatalogItem_CatalogItemDetail", Storage="_CatalogItemDetails", ThisKey="CatalogItemId", OtherKey="CatalogItemId")]
		public EntitySet<CatalogItemDetail> CatalogItemDetails
		{
			get
			{
				return this._CatalogItemDetails;
			}
			set
			{
				this._CatalogItemDetails.Assign(value);
			}
		}
		
		[Association(Name="Catalog_CatalogItem", Storage="_Catalog", ThisKey="CatalogId", OtherKey="CatalogId", IsForeignKey=true)]
		public Catalog Catalog
		{
			get
			{
				return this._Catalog.Entity;
			}
			set
			{
				Catalog previousValue = this._Catalog.Entity;
				if (((previousValue != value) 
							|| (this._Catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalog.Entity = null;
						previousValue.CatalogItems.Remove(this);
					}
					this._Catalog.Entity = value;
					if ((value != null))
					{
						value.CatalogItems.Add(this);
						this._CatalogId = value.CatalogId;
					}
					else
					{
						this._CatalogId = default(int);
					}
					this.SendPropertyChanged("Catalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatalogItemDetails(CatalogItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItem = this;
		}
		
		private void detach_CatalogItemDetails(CatalogItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItem = null;
		}
	}
	
	[Table(Name="dbo.catalog_item_detail")]
	public partial class CatalogItemDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogItemDetailId;
		
		private string _CatalogItemDetailCode;
		
		private string _CatalogItemDetailName;
		
		private int _CatalogItemId;
		
		private string _Description;
		
		private decimal _Price;
		
		private int _Units;
		
		private int _Term;
		
		private System.Nullable<bool> _IsDefault;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private double _ProfitRate;
		
		private int _MustOrderInIncrementsOf;
		
		private string _TermDescription;
		
		private System.Nullable<decimal> _RemitPrice;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntitySet<QCAPOrderDetail> _QCAPOrderDetails;
		
		private EntityRef<CatalogItem> _CatalogItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogItemDetailIdChanging(int value);
    partial void OnCatalogItemDetailIdChanged();
    partial void OnCatalogItemDetailCodeChanging(string value);
    partial void OnCatalogItemDetailCodeChanged();
    partial void OnCatalogItemDetailNameChanging(string value);
    partial void OnCatalogItemDetailNameChanged();
    partial void OnCatalogItemIdChanging(int value);
    partial void OnCatalogItemIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnUnitsChanging(int value);
    partial void OnUnitsChanged();
    partial void OnTermChanging(int value);
    partial void OnTermChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnProfitRateChanging(double value);
    partial void OnProfitRateChanged();
    partial void OnMustOrderInIncrementsOfChanging(int value);
    partial void OnMustOrderInIncrementsOfChanged();
    partial void OnTermDescriptionChanging(string value);
    partial void OnTermDescriptionChanged();
    partial void OnRemitPriceChanging(System.Nullable<decimal> value);
    partial void OnRemitPriceChanged();
    #endregion
		
		public CatalogItemDetail()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._QCAPOrderDetails = new EntitySet<QCAPOrderDetail>(new Action<QCAPOrderDetail>(this.attach_QCAPOrderDetails), new Action<QCAPOrderDetail>(this.detach_QCAPOrderDetails));
			this._CatalogItem = default(EntityRef<CatalogItem>);
			OnCreated();
		}
		
		[Column(Name="catalog_item_detail_id", Storage="_CatalogItemDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogItemDetailId
		{
			get
			{
				return this._CatalogItemDetailId;
			}
			set
			{
				if ((this._CatalogItemDetailId != value))
				{
					this.OnCatalogItemDetailIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemDetailId = value;
					this.SendPropertyChanged("CatalogItemDetailId");
					this.OnCatalogItemDetailIdChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_detail_code", Storage="_CatalogItemDetailCode", DbType="VarChar(50)")]
		public string CatalogItemDetailCode
		{
			get
			{
				return this._CatalogItemDetailCode;
			}
			set
			{
				if ((this._CatalogItemDetailCode != value))
				{
					this.OnCatalogItemDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemDetailCode = value;
					this.SendPropertyChanged("CatalogItemDetailCode");
					this.OnCatalogItemDetailCodeChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_detail_name", Storage="_CatalogItemDetailName", DbType="VarChar(50)")]
		public string CatalogItemDetailName
		{
			get
			{
				return this._CatalogItemDetailName;
			}
			set
			{
				if ((this._CatalogItemDetailName != value))
				{
					this.OnCatalogItemDetailNameChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemDetailName = value;
					this.SendPropertyChanged("CatalogItemDetailName");
					this.OnCatalogItemDetailNameChanged();
				}
			}
		}
		
		[Column(Name="catalog_item_id", Storage="_CatalogItemId", DbType="Int NOT NULL")]
		public int CatalogItemId
		{
			get
			{
				return this._CatalogItemId;
			}
			set
			{
				if ((this._CatalogItemId != value))
				{
					this.OnCatalogItemIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogItemId = value;
					this.SendPropertyChanged("CatalogItemId");
					this.OnCatalogItemIdChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="VarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="price", Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Name="nb_units", Storage="_Units", DbType="Int NOT NULL")]
		public int Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this.OnUnitsChanging(value);
					this.SendPropertyChanging();
					this._Units = value;
					this.SendPropertyChanged("Units");
					this.OnUnitsChanged();
				}
			}
		}
		
		[Column(Name="term", Storage="_Term", DbType="Int NOT NULL")]
		public int Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[Column(Name="is_default", Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="profit_rate", Storage="_ProfitRate", DbType="Float NOT NULL")]
		public double ProfitRate
		{
			get
			{
				return this._ProfitRate;
			}
			set
			{
				if ((this._ProfitRate != value))
				{
					this.OnProfitRateChanging(value);
					this.SendPropertyChanging();
					this._ProfitRate = value;
					this.SendPropertyChanged("ProfitRate");
					this.OnProfitRateChanged();
				}
			}
		}
		
		[Column(Name="must_order_in_increments_of", Storage="_MustOrderInIncrementsOf", DbType="Int NOT NULL")]
		public int MustOrderInIncrementsOf
		{
			get
			{
				return this._MustOrderInIncrementsOf;
			}
			set
			{
				if ((this._MustOrderInIncrementsOf != value))
				{
					this.OnMustOrderInIncrementsOfChanging(value);
					this.SendPropertyChanging();
					this._MustOrderInIncrementsOf = value;
					this.SendPropertyChanged("MustOrderInIncrementsOf");
					this.OnMustOrderInIncrementsOfChanged();
				}
			}
		}
		
		[Column(Name="term_description", Storage="_TermDescription", DbType="VarChar(20)")]
		public string TermDescription
		{
			get
			{
				return this._TermDescription;
			}
			set
			{
				if ((this._TermDescription != value))
				{
					this.OnTermDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TermDescription = value;
					this.SendPropertyChanged("TermDescription");
					this.OnTermDescriptionChanged();
				}
			}
		}
		
		[Column(Name="remit_price", Storage="_RemitPrice", DbType="Money")]
		public System.Nullable<decimal> RemitPrice
		{
			get
			{
				return this._RemitPrice;
			}
			set
			{
				if ((this._RemitPrice != value))
				{
					this.OnRemitPriceChanging(value);
					this.SendPropertyChanging();
					this._RemitPrice = value;
					this.SendPropertyChanged("RemitPrice");
					this.OnRemitPriceChanged();
				}
			}
		}
		
		[Association(Name="CatalogItemDetail_OrderDetail", Storage="_OrderDetails", ThisKey="CatalogItemDetailId", OtherKey="CatalogItemDetailId")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[Association(Name="CatalogItemDetail_QCAPOrderDetail", Storage="_QCAPOrderDetails", ThisKey="CatalogItemDetailId", OtherKey="catalog_item_detail_id")]
		public EntitySet<QCAPOrderDetail> QCAPOrderDetails
		{
			get
			{
				return this._QCAPOrderDetails;
			}
			set
			{
				this._QCAPOrderDetails.Assign(value);
			}
		}
		
		[Association(Name="CatalogItem_CatalogItemDetail", Storage="_CatalogItem", ThisKey="CatalogItemId", OtherKey="CatalogItemId", IsForeignKey=true)]
		public CatalogItem CatalogItem
		{
			get
			{
				return this._CatalogItem.Entity;
			}
			set
			{
				CatalogItem previousValue = this._CatalogItem.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItem.Entity = null;
						previousValue.CatalogItemDetails.Remove(this);
					}
					this._CatalogItem.Entity = value;
					if ((value != null))
					{
						value.CatalogItemDetails.Add(this);
						this._CatalogItemId = value.CatalogItemId;
					}
					else
					{
						this._CatalogItemId = default(int);
					}
					this.SendPropertyChanged("CatalogItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItemDetail = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItemDetail = null;
		}
		
		private void attach_QCAPOrderDetails(QCAPOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItemDetail = this;
		}
		
		private void detach_QCAPOrderDetails(QCAPOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.CatalogItemDetail = null;
		}
	}
	
	[Table(Name="dbo.shipment_group")]
	public partial class ShipmentGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShipmentGroupId;
		
		private System.Nullable<int> _DeliveryWarehouseId;
		
		private System.Nullable<int> _DeliveryMethodId;
		
		private System.Nullable<int> _ShippingPostalAddressId;
		
		private System.Nullable<int> _ShippingPhoneNumberId;
		
		private System.Nullable<int> _ShippingFaxNumberId;
		
		private System.Nullable<int> _ShippingEmailId;
		
		private System.Nullable<System.DateTime> _ShipmentDate;
		
		private System.Nullable<decimal> _ShippingCharges;
		
		private System.Nullable<int> _ShipmentSupplyTo;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private System.Nullable<System.DateTime> _DeliveryNoLaterThan;
		
		private System.Nullable<int> _SyncBatchId;
		
		private System.Nullable<int> _SyncOEOrd;
		
		private System.Nullable<System.DateTime> _RequestedDeliveryDate;
		
		private System.Nullable<int> _ShippingExpeditedChargesCustomerId;
		
		private System.Nullable<decimal> _ShippingExpeditedCharges;
		
		private System.Nullable<decimal> _ShippingExpeditedFreightCharges;
		
		private int _ExpeditedFreightChargePaymentAssignmentTypeId;
		
		private System.Nullable<System.DateTime> _RequestedDeliveryTime;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<Email> _Email;
		
		private EntityRef<PhoneNumber> _PhoneNumber;
		
		private EntityRef<PhoneNumber> _FaxNumber;
		
		private EntityRef<PostalAddress> _PostalAddress;
		
		private EntityRef<Warehouse> _Warehouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipmentGroupIdChanging(int value);
    partial void OnShipmentGroupIdChanged();
    partial void OnDeliveryWarehouseIdChanging(System.Nullable<int> value);
    partial void OnDeliveryWarehouseIdChanged();
    partial void OnDeliveryMethodIdChanging(System.Nullable<int> value);
    partial void OnDeliveryMethodIdChanged();
    partial void OnShippingPostalAddressIdChanging(System.Nullable<int> value);
    partial void OnShippingPostalAddressIdChanged();
    partial void OnShippingPhoneNumberIdChanging(System.Nullable<int> value);
    partial void OnShippingPhoneNumberIdChanged();
    partial void OnShippingFaxNumberIdChanging(System.Nullable<int> value);
    partial void OnShippingFaxNumberIdChanged();
    partial void OnShippingEmailIdChanging(System.Nullable<int> value);
    partial void OnShippingEmailIdChanged();
    partial void OnShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipmentDateChanged();
    partial void OnShippingChargesChanging(System.Nullable<decimal> value);
    partial void OnShippingChargesChanged();
    partial void OnShipmentSupplyToChanging(System.Nullable<int> value);
    partial void OnShipmentSupplyToChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnDeliveryNoLaterThanChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryNoLaterThanChanged();
    partial void OnSyncBatchIdChanging(System.Nullable<int> value);
    partial void OnSyncBatchIdChanged();
    partial void OnSyncOEOrdChanging(System.Nullable<int> value);
    partial void OnSyncOEOrdChanged();
    partial void OnRequestedDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestedDeliveryDateChanged();
    partial void OnShippingExpeditedChargesCustomerIdChanging(System.Nullable<int> value);
    partial void OnShippingExpeditedChargesCustomerIdChanged();
    partial void OnShippingExpeditedChargesChanging(System.Nullable<decimal> value);
    partial void OnShippingExpeditedChargesChanged();
    partial void OnShippingExpeditedFreightChargesChanging(System.Nullable<decimal> value);
    partial void OnShippingExpeditedFreightChargesChanged();
    partial void OnExpeditedFreightChargePaymentAssignmentTypeIdChanging(int value);
    partial void OnExpeditedFreightChargePaymentAssignmentTypeIdChanged();
    partial void OnRequestedDeliveryTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestedDeliveryTimeChanged();
    #endregion
		
		public ShipmentGroup()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Email = default(EntityRef<Email>);
			this._PhoneNumber = default(EntityRef<PhoneNumber>);
			this._FaxNumber = default(EntityRef<PhoneNumber>);
			this._PostalAddress = default(EntityRef<PostalAddress>);
			this._Warehouse = default(EntityRef<Warehouse>);
			OnCreated();
		}
		
		[Column(Name="shipment_group_id", Storage="_ShipmentGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShipmentGroupId
		{
			get
			{
				return this._ShipmentGroupId;
			}
			set
			{
				if ((this._ShipmentGroupId != value))
				{
					this.OnShipmentGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentGroupId = value;
					this.SendPropertyChanged("ShipmentGroupId");
					this.OnShipmentGroupIdChanged();
				}
			}
		}
		
		[Column(Name="delivery_warehouse_id", Storage="_DeliveryWarehouseId", DbType="Int")]
		public System.Nullable<int> DeliveryWarehouseId
		{
			get
			{
				return this._DeliveryWarehouseId;
			}
			set
			{
				if ((this._DeliveryWarehouseId != value))
				{
					this.OnDeliveryWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryWarehouseId = value;
					this.SendPropertyChanged("DeliveryWarehouseId");
					this.OnDeliveryWarehouseIdChanged();
				}
			}
		}
		
		[Column(Name="delivery_method_id", Storage="_DeliveryMethodId", DbType="Int")]
		public System.Nullable<int> DeliveryMethodId
		{
			get
			{
				return this._DeliveryMethodId;
			}
			set
			{
				if ((this._DeliveryMethodId != value))
				{
					this.OnDeliveryMethodIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMethodId = value;
					this.SendPropertyChanged("DeliveryMethodId");
					this.OnDeliveryMethodIdChanged();
				}
			}
		}
		
		[Column(Name="shipping_postal_address_id", Storage="_ShippingPostalAddressId", DbType="Int")]
		public System.Nullable<int> ShippingPostalAddressId
		{
			get
			{
				return this._ShippingPostalAddressId;
			}
			set
			{
				if ((this._ShippingPostalAddressId != value))
				{
					this.OnShippingPostalAddressIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingPostalAddressId = value;
					this.SendPropertyChanged("ShippingPostalAddressId");
					this.OnShippingPostalAddressIdChanged();
				}
			}
		}
		
		[Column(Name="shipping_phone_number_id", Storage="_ShippingPhoneNumberId", DbType="Int")]
		public System.Nullable<int> ShippingPhoneNumberId
		{
			get
			{
				return this._ShippingPhoneNumberId;
			}
			set
			{
				if ((this._ShippingPhoneNumberId != value))
				{
					this.OnShippingPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingPhoneNumberId = value;
					this.SendPropertyChanged("ShippingPhoneNumberId");
					this.OnShippingPhoneNumberIdChanged();
				}
			}
		}
		
		[Column(Name="shipping_fax_number_id", Storage="_ShippingFaxNumberId", DbType="Int")]
		public System.Nullable<int> ShippingFaxNumberId
		{
			get
			{
				return this._ShippingFaxNumberId;
			}
			set
			{
				if ((this._ShippingFaxNumberId != value))
				{
					this.OnShippingFaxNumberIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingFaxNumberId = value;
					this.SendPropertyChanged("ShippingFaxNumberId");
					this.OnShippingFaxNumberIdChanged();
				}
			}
		}
		
		[Column(Name="shipping_email_id", Storage="_ShippingEmailId", DbType="Int")]
		public System.Nullable<int> ShippingEmailId
		{
			get
			{
				return this._ShippingEmailId;
			}
			set
			{
				if ((this._ShippingEmailId != value))
				{
					this.OnShippingEmailIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingEmailId = value;
					this.SendPropertyChanged("ShippingEmailId");
					this.OnShippingEmailIdChanged();
				}
			}
		}
		
		[Column(Name="shipment_date", Storage="_ShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this.OnShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDate = value;
					this.SendPropertyChanged("ShipmentDate");
					this.OnShipmentDateChanged();
				}
			}
		}
		
		[Column(Name="shipping_charges", Storage="_ShippingCharges", DbType="Money")]
		public System.Nullable<decimal> ShippingCharges
		{
			get
			{
				return this._ShippingCharges;
			}
			set
			{
				if ((this._ShippingCharges != value))
				{
					this.OnShippingChargesChanging(value);
					this.SendPropertyChanging();
					this._ShippingCharges = value;
					this.SendPropertyChanged("ShippingCharges");
					this.OnShippingChargesChanged();
				}
			}
		}
		
		[Column(Name="shipment_supply_to", Storage="_ShipmentSupplyTo", DbType="Int")]
		public System.Nullable<int> ShipmentSupplyTo
		{
			get
			{
				return this._ShipmentSupplyTo;
			}
			set
			{
				if ((this._ShipmentSupplyTo != value))
				{
					this.OnShipmentSupplyToChanging(value);
					this.SendPropertyChanging();
					this._ShipmentSupplyTo = value;
					this.SendPropertyChanged("ShipmentSupplyTo");
					this.OnShipmentSupplyToChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="delivery_no_later_than", Storage="_DeliveryNoLaterThan", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryNoLaterThan
		{
			get
			{
				return this._DeliveryNoLaterThan;
			}
			set
			{
				if ((this._DeliveryNoLaterThan != value))
				{
					this.OnDeliveryNoLaterThanChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNoLaterThan = value;
					this.SendPropertyChanged("DeliveryNoLaterThan");
					this.OnDeliveryNoLaterThanChanged();
				}
			}
		}
		
		[Column(Name="sync_batch_id", Storage="_SyncBatchId", DbType="Int")]
		public System.Nullable<int> SyncBatchId
		{
			get
			{
				return this._SyncBatchId;
			}
			set
			{
				if ((this._SyncBatchId != value))
				{
					this.OnSyncBatchIdChanging(value);
					this.SendPropertyChanging();
					this._SyncBatchId = value;
					this.SendPropertyChanged("SyncBatchId");
					this.OnSyncBatchIdChanged();
				}
			}
		}
		
		[Column(Name="sync_oe#ord", Storage="_SyncOEOrd", DbType="Int")]
		public System.Nullable<int> SyncOEOrd
		{
			get
			{
				return this._SyncOEOrd;
			}
			set
			{
				if ((this._SyncOEOrd != value))
				{
					this.OnSyncOEOrdChanging(value);
					this.SendPropertyChanging();
					this._SyncOEOrd = value;
					this.SendPropertyChanged("SyncOEOrd");
					this.OnSyncOEOrdChanged();
				}
			}
		}
		
		[Column(Name="requested_delivery_date", Storage="_RequestedDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestedDeliveryDate
		{
			get
			{
				return this._RequestedDeliveryDate;
			}
			set
			{
				if ((this._RequestedDeliveryDate != value))
				{
					this.OnRequestedDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._RequestedDeliveryDate = value;
					this.SendPropertyChanged("RequestedDeliveryDate");
					this.OnRequestedDeliveryDateChanged();
				}
			}
		}
		
		[Column(Name="shipping_expedited_charges_customer_id", Storage="_ShippingExpeditedChargesCustomerId", DbType="Int")]
		public System.Nullable<int> ShippingExpeditedChargesCustomerId
		{
			get
			{
				return this._ShippingExpeditedChargesCustomerId;
			}
			set
			{
				if ((this._ShippingExpeditedChargesCustomerId != value))
				{
					this.OnShippingExpeditedChargesCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingExpeditedChargesCustomerId = value;
					this.SendPropertyChanged("ShippingExpeditedChargesCustomerId");
					this.OnShippingExpeditedChargesCustomerIdChanged();
				}
			}
		}
		
		[Column(Name="shipping_expedited_charges", Storage="_ShippingExpeditedCharges", DbType="Money")]
		public System.Nullable<decimal> ShippingExpeditedCharges
		{
			get
			{
				return this._ShippingExpeditedCharges;
			}
			set
			{
				if ((this._ShippingExpeditedCharges != value))
				{
					this.OnShippingExpeditedChargesChanging(value);
					this.SendPropertyChanging();
					this._ShippingExpeditedCharges = value;
					this.SendPropertyChanged("ShippingExpeditedCharges");
					this.OnShippingExpeditedChargesChanged();
				}
			}
		}
		
		[Column(Name="shipping_expedited_freight_charges", Storage="_ShippingExpeditedFreightCharges", DbType="Money")]
		public System.Nullable<decimal> ShippingExpeditedFreightCharges
		{
			get
			{
				return this._ShippingExpeditedFreightCharges;
			}
			set
			{
				if ((this._ShippingExpeditedFreightCharges != value))
				{
					this.OnShippingExpeditedFreightChargesChanging(value);
					this.SendPropertyChanging();
					this._ShippingExpeditedFreightCharges = value;
					this.SendPropertyChanged("ShippingExpeditedFreightCharges");
					this.OnShippingExpeditedFreightChargesChanged();
				}
			}
		}
		
		[Column(Name="expedited_freight_charge_payment_assignment_type_id", Storage="_ExpeditedFreightChargePaymentAssignmentTypeId", DbType="Int NOT NULL")]
		public int ExpeditedFreightChargePaymentAssignmentTypeId
		{
			get
			{
				return this._ExpeditedFreightChargePaymentAssignmentTypeId;
			}
			set
			{
				if ((this._ExpeditedFreightChargePaymentAssignmentTypeId != value))
				{
					this.OnExpeditedFreightChargePaymentAssignmentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExpeditedFreightChargePaymentAssignmentTypeId = value;
					this.SendPropertyChanged("ExpeditedFreightChargePaymentAssignmentTypeId");
					this.OnExpeditedFreightChargePaymentAssignmentTypeIdChanged();
				}
			}
		}
		
		[Column(Name="requested_delivery_time", Storage="_RequestedDeliveryTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestedDeliveryTime
		{
			get
			{
				return this._RequestedDeliveryTime;
			}
			set
			{
				if ((this._RequestedDeliveryTime != value))
				{
					this.OnRequestedDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedDeliveryTime = value;
					this.SendPropertyChanged("RequestedDeliveryTime");
					this.OnRequestedDeliveryTimeChanged();
				}
			}
		}
		
		[Association(Name="ShipmentGroup_OrderDetail", Storage="_OrderDetails", ThisKey="ShipmentGroupId", OtherKey="ShipmentGroupId")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[Association(Name="Email_ShipmentGroup", Storage="_Email", ThisKey="ShippingEmailId", OtherKey="EmailId", IsForeignKey=true)]
		public Email Email
		{
			get
			{
				return this._Email.Entity;
			}
			set
			{
				Email previousValue = this._Email.Entity;
				if (((previousValue != value) 
							|| (this._Email.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Email.Entity = null;
						previousValue.ShipmentGroups.Remove(this);
					}
					this._Email.Entity = value;
					if ((value != null))
					{
						value.ShipmentGroups.Add(this);
						this._ShippingEmailId = value.EmailId;
					}
					else
					{
						this._ShippingEmailId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Email");
				}
			}
		}
		
		[Association(Name="PhoneNumber_ShipmentGroup", Storage="_PhoneNumber", ThisKey="ShippingPhoneNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber PhoneNumber
		{
			get
			{
				return this._PhoneNumber.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._PhoneNumber.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumber.Entity = null;
						previousValue.shipment_groups.Remove(this);
					}
					this._PhoneNumber.Entity = value;
					if ((value != null))
					{
						value.shipment_groups.Add(this);
						this._ShippingPhoneNumberId = value.PhoneNumberId;
					}
					else
					{
						this._ShippingPhoneNumberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhoneNumber");
				}
			}
		}
		
		[Association(Name="PhoneNumber_ShipmentGroup1", Storage="_FaxNumber", ThisKey="ShippingFaxNumberId", OtherKey="PhoneNumberId", IsForeignKey=true)]
		public PhoneNumber FaxNumber
		{
			get
			{
				return this._FaxNumber.Entity;
			}
			set
			{
				PhoneNumber previousValue = this._FaxNumber.Entity;
				if (((previousValue != value) 
							|| (this._FaxNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FaxNumber.Entity = null;
						previousValue.ShipmentGroups.Remove(this);
					}
					this._FaxNumber.Entity = value;
					if ((value != null))
					{
						value.ShipmentGroups.Add(this);
						this._ShippingFaxNumberId = value.PhoneNumberId;
					}
					else
					{
						this._ShippingFaxNumberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FaxNumber");
				}
			}
		}
		
		[Association(Name="PostalAddress_ShipmentGroup", Storage="_PostalAddress", ThisKey="ShippingPostalAddressId", OtherKey="PostalAddressId", IsForeignKey=true)]
		public PostalAddress PostalAddress
		{
			get
			{
				return this._PostalAddress.Entity;
			}
			set
			{
				PostalAddress previousValue = this._PostalAddress.Entity;
				if (((previousValue != value) 
							|| (this._PostalAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostalAddress.Entity = null;
						previousValue.ShipmentGroups.Remove(this);
					}
					this._PostalAddress.Entity = value;
					if ((value != null))
					{
						value.ShipmentGroups.Add(this);
						this._ShippingPostalAddressId = value.PostalAddressId;
					}
					else
					{
						this._ShippingPostalAddressId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PostalAddress");
				}
			}
		}
		
		[Association(Name="Warehouse_ShipmentGroup", Storage="_Warehouse", ThisKey="DeliveryWarehouseId", OtherKey="WarehouseId", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.ShipmentGroups.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.ShipmentGroups.Add(this);
						this._DeliveryWarehouseId = value.WarehouseId;
					}
					else
					{
						this._DeliveryWarehouseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ShipmentGroup = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ShipmentGroup = null;
		}
	}
	
	[Table(Name="dbo.delivery_method")]
	public partial class DeliveryMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryMethodId;
		
		private string _DeliveryMethodName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryMethodIdChanging(int value);
    partial void OnDeliveryMethodIdChanged();
    partial void OnDeliveryMethodNameChanging(string value);
    partial void OnDeliveryMethodNameChanged();
    #endregion
		
		public DeliveryMethod()
		{
			OnCreated();
		}
		
		[Column(Name="delivery_method_id", Storage="_DeliveryMethodId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeliveryMethodId
		{
			get
			{
				return this._DeliveryMethodId;
			}
			set
			{
				if ((this._DeliveryMethodId != value))
				{
					this.OnDeliveryMethodIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMethodId = value;
					this.SendPropertyChanged("DeliveryMethodId");
					this.OnDeliveryMethodIdChanged();
				}
			}
		}
		
		[Column(Name="delivery_method_name", Storage="_DeliveryMethodName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DeliveryMethodName
		{
			get
			{
				return this._DeliveryMethodName;
			}
			set
			{
				if ((this._DeliveryMethodName != value))
				{
					this.OnDeliveryMethodNameChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMethodName = value;
					this.SendPropertyChanged("DeliveryMethodName");
					this.OnDeliveryMethodNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.order_charge")]
	public partial class OrderCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderChargeId;
		
		private int _OrderId;
		
		private int _ChargeId;
		
		private char _ChargeToId;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<decimal> _EstimatedAmount;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Comment;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<Charge> _Charge;
		
		private EntityRef<ChargeTo> _ChargeTo;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderChargeIdChanging(int value);
    partial void OnOrderChargeIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnChargeIdChanging(int value);
    partial void OnChargeIdChanged();
    partial void OnChargeToIdChanging(char value);
    partial void OnChargeToIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnEstimatedAmountChanging(System.Nullable<decimal> value);
    partial void OnEstimatedAmountChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public OrderCharge()
		{
			this._Charge = default(EntityRef<Charge>);
			this._ChargeTo = default(EntityRef<ChargeTo>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[Column(Name="order_charge_id", Storage="_OrderChargeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderChargeId
		{
			get
			{
				return this._OrderChargeId;
			}
			set
			{
				if ((this._OrderChargeId != value))
				{
					this.OnOrderChargeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderChargeId = value;
					this.SendPropertyChanged("OrderChargeId");
					this.OnOrderChargeIdChanged();
				}
			}
		}
		
		[Column(Name="order_id", Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Name="charge_id", Storage="_ChargeId", DbType="Int NOT NULL")]
		public int ChargeId
		{
			get
			{
				return this._ChargeId;
			}
			set
			{
				if ((this._ChargeId != value))
				{
					this.OnChargeIdChanging(value);
					this.SendPropertyChanging();
					this._ChargeId = value;
					this.SendPropertyChanged("ChargeId");
					this.OnChargeIdChanged();
				}
			}
		}
		
		[Column(Name="charge_to_id", Storage="_ChargeToId", DbType="Char(1) NOT NULL")]
		public char ChargeToId
		{
			get
			{
				return this._ChargeToId;
			}
			set
			{
				if ((this._ChargeToId != value))
				{
					this.OnChargeToIdChanging(value);
					this.SendPropertyChanging();
					this._ChargeToId = value;
					this.SendPropertyChanged("ChargeToId");
					this.OnChargeToIdChanged();
				}
			}
		}
		
		[Column(Name="account_id", Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Name="estimated_amount", Storage="_EstimatedAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EstimatedAmount
		{
			get
			{
				return this._EstimatedAmount;
			}
			set
			{
				if ((this._EstimatedAmount != value))
				{
					this.OnEstimatedAmountChanging(value);
					this.SendPropertyChanging();
					this._EstimatedAmount = value;
					this.SendPropertyChanged("EstimatedAmount");
					this.OnEstimatedAmountChanged();
				}
			}
		}
		
		[Column(Name="amount", Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Name="comment", Storage="_Comment", DbType="VarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="Charge_OrderCharge", Storage="_Charge", ThisKey="ChargeId", OtherKey="ChargeId", IsForeignKey=true)]
		public Charge Charge
		{
			get
			{
				return this._Charge.Entity;
			}
			set
			{
				Charge previousValue = this._Charge.Entity;
				if (((previousValue != value) 
							|| (this._Charge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Charge.Entity = null;
						previousValue.OrderCharges.Remove(this);
					}
					this._Charge.Entity = value;
					if ((value != null))
					{
						value.OrderCharges.Add(this);
						this._ChargeId = value.ChargeId;
					}
					else
					{
						this._ChargeId = default(int);
					}
					this.SendPropertyChanged("Charge");
				}
			}
		}
		
		[Association(Name="ChargeTo_OrderCharge", Storage="_ChargeTo", ThisKey="ChargeToId", OtherKey="ChargeToId", IsForeignKey=true)]
		public ChargeTo ChargeTo
		{
			get
			{
				return this._ChargeTo.Entity;
			}
			set
			{
				ChargeTo previousValue = this._ChargeTo.Entity;
				if (((previousValue != value) 
							|| (this._ChargeTo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChargeTo.Entity = null;
						previousValue.OrderCharges.Remove(this);
					}
					this._ChargeTo.Entity = value;
					if ((value != null))
					{
						value.OrderCharges.Add(this);
						this._ChargeToId = value.ChargeToId;
					}
					else
					{
						this._ChargeToId = default(char);
					}
					this.SendPropertyChanged("ChargeTo");
				}
			}
		}
		
		[Association(Name="Order_OrderCharge", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderCharges.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderCharges.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.charge")]
	public partial class Charge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChargeId;
		
		private string _Name;
		
		private System.Nullable<decimal> _DefaultAmount;
		
		private bool _IsCredit;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private string _FulfChargeId;
		
		private bool _IsAvailableToEFR;
		
		private EntitySet<OrderCharge> _OrderCharges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChargeIdChanging(int value);
    partial void OnChargeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDefaultAmountChanging(System.Nullable<decimal> value);
    partial void OnDefaultAmountChanged();
    partial void OnIsCreditChanging(bool value);
    partial void OnIsCreditChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    partial void OnFulfChargeIdChanging(string value);
    partial void OnFulfChargeIdChanged();
    partial void OnIsAvailableToEFRChanging(bool value);
    partial void OnIsAvailableToEFRChanged();
    #endregion
		
		public Charge()
		{
			this._OrderCharges = new EntitySet<OrderCharge>(new Action<OrderCharge>(this.attach_OrderCharges), new Action<OrderCharge>(this.detach_OrderCharges));
			OnCreated();
		}
		
		[Column(Name="charge_id", Storage="_ChargeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ChargeId
		{
			get
			{
				return this._ChargeId;
			}
			set
			{
				if ((this._ChargeId != value))
				{
					this.OnChargeIdChanging(value);
					this.SendPropertyChanging();
					this._ChargeId = value;
					this.SendPropertyChanged("ChargeId");
					this.OnChargeIdChanged();
				}
			}
		}
		
		[Column(Name="name", Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Name="default_amount", Storage="_DefaultAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DefaultAmount
		{
			get
			{
				return this._DefaultAmount;
			}
			set
			{
				if ((this._DefaultAmount != value))
				{
					this.OnDefaultAmountChanging(value);
					this.SendPropertyChanging();
					this._DefaultAmount = value;
					this.SendPropertyChanged("DefaultAmount");
					this.OnDefaultAmountChanged();
				}
			}
		}
		
		[Column(Name="is_credit", Storage="_IsCredit", DbType="Bit NOT NULL")]
		public bool IsCredit
		{
			get
			{
				return this._IsCredit;
			}
			set
			{
				if ((this._IsCredit != value))
				{
					this.OnIsCreditChanging(value);
					this.SendPropertyChanging();
					this._IsCredit = value;
					this.SendPropertyChanged("IsCredit");
					this.OnIsCreditChanged();
				}
			}
		}
		
		[Column(Name="is_disabled", Storage="_IsDisabled", DbType="Bit NOT NULL")]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Column(Name="fulf_charge_id", Storage="_FulfChargeId", DbType="VarChar(10)")]
		public string FulfChargeId
		{
			get
			{
				return this._FulfChargeId;
			}
			set
			{
				if ((this._FulfChargeId != value))
				{
					this.OnFulfChargeIdChanging(value);
					this.SendPropertyChanging();
					this._FulfChargeId = value;
					this.SendPropertyChanged("FulfChargeId");
					this.OnFulfChargeIdChanged();
				}
			}
		}
		
		[Column(Name="display_efr", Storage="_IsAvailableToEFR", DbType="Bit NOT NULL")]
		public bool IsAvailableToEFR
		{
			get
			{
				return this._IsAvailableToEFR;
			}
			set
			{
				if ((this._IsAvailableToEFR != value))
				{
					this.OnIsAvailableToEFRChanging(value);
					this.SendPropertyChanging();
					this._IsAvailableToEFR = value;
					this.SendPropertyChanged("IsAvailableToEFR");
					this.OnIsAvailableToEFRChanged();
				}
			}
		}
		
		[Association(Name="Charge_OrderCharge", Storage="_OrderCharges", ThisKey="ChargeId", OtherKey="ChargeId")]
		public EntitySet<OrderCharge> OrderCharges
		{
			get
			{
				return this._OrderCharges;
			}
			set
			{
				this._OrderCharges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderCharges(OrderCharge entity)
		{
			this.SendPropertyChanging();
			entity.Charge = this;
		}
		
		private void detach_OrderCharges(OrderCharge entity)
		{
			this.SendPropertyChanging();
			entity.Charge = null;
		}
	}
	
	[Table(Name="dbo.charge_to")]
	public partial class ChargeTo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _ChargeToId;
		
		private string _Name;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntitySet<OrderCharge> _OrderCharges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChargeToIdChanging(char value);
    partial void OnChargeToIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public ChargeTo()
		{
			this._OrderCharges = new EntitySet<OrderCharge>(new Action<OrderCharge>(this.attach_OrderCharges), new Action<OrderCharge>(this.detach_OrderCharges));
			OnCreated();
		}
		
		[Column(Name="charge_to_id", Storage="_ChargeToId", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char ChargeToId
		{
			get
			{
				return this._ChargeToId;
			}
			set
			{
				if ((this._ChargeToId != value))
				{
					this.OnChargeToIdChanging(value);
					this.SendPropertyChanging();
					this._ChargeToId = value;
					this.SendPropertyChanged("ChargeToId");
					this.OnChargeToIdChanged();
				}
			}
		}
		
		[Column(Name="name", Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="ChargeTo_OrderCharge", Storage="_OrderCharges", ThisKey="ChargeToId", OtherKey="ChargeToId")]
		public EntitySet<OrderCharge> OrderCharges
		{
			get
			{
				return this._OrderCharges;
			}
			set
			{
				this._OrderCharges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderCharges(OrderCharge entity)
		{
			this.SendPropertyChanging();
			entity.ChargeTo = this;
		}
		
		private void detach_OrderCharges(OrderCharge entity)
		{
			this.SendPropertyChanging();
			entity.ChargeTo = null;
		}
	}
	
	[Table(Name="dbo.order_detail_tax")]
	public partial class OrderDetailTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderDetailTaxId;
		
		private System.Nullable<int> _OrderDetailId;
		
		private System.Nullable<int> _TaxCalculationMethodId;
		
		private int _TaxTypeId;
		
		private System.Nullable<double> _TaxRate;
		
		private decimal _TaxAmount;
		
		private bool _IsDeleted;
		
		private System.DateTime _CreateDate;
		
		private int _CreateUserId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _UpdateUserId;
		
		private EntityRef<OrderDetail> _OrderDetail;
		
		private EntityRef<TaxCalculationMethod> _TaxCalculationMethod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderDetailTaxIdChanging(int value);
    partial void OnOrderDetailTaxIdChanged();
    partial void OnOrderDetailIdChanging(System.Nullable<int> value);
    partial void OnOrderDetailIdChanged();
    partial void OnTaxCalculationMethodIdChanging(System.Nullable<int> value);
    partial void OnTaxCalculationMethodIdChanged();
    partial void OnTaxTypeIdChanging(int value);
    partial void OnTaxTypeIdChanged();
    partial void OnTaxRateChanging(System.Nullable<double> value);
    partial void OnTaxRateChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(int value);
    partial void OnCreateUserIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIdChanging(System.Nullable<int> value);
    partial void OnUpdateUserIdChanged();
    #endregion
		
		public OrderDetailTax()
		{
			this._OrderDetail = default(EntityRef<OrderDetail>);
			this._TaxCalculationMethod = default(EntityRef<TaxCalculationMethod>);
			OnCreated();
		}
		
		[Column(Name="order_detail_tax_id", Storage="_OrderDetailTaxId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderDetailTaxId
		{
			get
			{
				return this._OrderDetailTaxId;
			}
			set
			{
				if ((this._OrderDetailTaxId != value))
				{
					this.OnOrderDetailTaxIdChanging(value);
					this.SendPropertyChanging();
					this._OrderDetailTaxId = value;
					this.SendPropertyChanged("OrderDetailTaxId");
					this.OnOrderDetailTaxIdChanged();
				}
			}
		}
		
		[Column(Name="order_detail_id", Storage="_OrderDetailId", DbType="Int")]
		public System.Nullable<int> OrderDetailId
		{
			get
			{
				return this._OrderDetailId;
			}
			set
			{
				if ((this._OrderDetailId != value))
				{
					this.OnOrderDetailIdChanging(value);
					this.SendPropertyChanging();
					this._OrderDetailId = value;
					this.SendPropertyChanged("OrderDetailId");
					this.OnOrderDetailIdChanged();
				}
			}
		}
		
		[Column(Name="tax_calculation_method_id", Storage="_TaxCalculationMethodId", DbType="Int")]
		public System.Nullable<int> TaxCalculationMethodId
		{
			get
			{
				return this._TaxCalculationMethodId;
			}
			set
			{
				if ((this._TaxCalculationMethodId != value))
				{
					this.OnTaxCalculationMethodIdChanging(value);
					this.SendPropertyChanging();
					this._TaxCalculationMethodId = value;
					this.SendPropertyChanged("TaxCalculationMethodId");
					this.OnTaxCalculationMethodIdChanged();
				}
			}
		}
		
		[Column(Name="tax_type_id", Storage="_TaxTypeId", DbType="Int NOT NULL")]
		public int TaxTypeId
		{
			get
			{
				return this._TaxTypeId;
			}
			set
			{
				if ((this._TaxTypeId != value))
				{
					this.OnTaxTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxTypeId = value;
					this.SendPropertyChanged("TaxTypeId");
					this.OnTaxTypeIdChanged();
				}
			}
		}
		
		[Column(Name="tax_rate", Storage="_TaxRate", DbType="Float")]
		public System.Nullable<double> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[Column(Name="tax_amount", Storage="_TaxAmount", DbType="Money NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="deleted", Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Name="create_user_id", Storage="_CreateUserId", DbType="Int NOT NULL")]
		public int CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Name="update_user_id", Storage="_UpdateUserId", DbType="Int")]
		public System.Nullable<int> UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[Association(Name="OrderDetail_OrderDetailTax", Storage="_OrderDetail", ThisKey="OrderDetailId", OtherKey="OrderDetailId", IsForeignKey=true)]
		public OrderDetail OrderDetail
		{
			get
			{
				return this._OrderDetail.Entity;
			}
			set
			{
				OrderDetail previousValue = this._OrderDetail.Entity;
				if (((previousValue != value) 
							|| (this._OrderDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDetail.Entity = null;
						previousValue.OrderDetailTaxes.Remove(this);
					}
					this._OrderDetail.Entity = value;
					if ((value != null))
					{
						value.OrderDetailTaxes.Add(this);
						this._OrderDetailId = value.OrderDetailId;
					}
					else
					{
						this._OrderDetailId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDetail");
				}
			}
		}
		
		[Association(Name="TaxCalculationMethod_OrderDetailTax", Storage="_TaxCalculationMethod", ThisKey="TaxCalculationMethodId", OtherKey="TaxCalculationMethodId", IsForeignKey=true)]
		public TaxCalculationMethod TaxCalculationMethod
		{
			get
			{
				return this._TaxCalculationMethod.Entity;
			}
			set
			{
				TaxCalculationMethod previousValue = this._TaxCalculationMethod.Entity;
				if (((previousValue != value) 
							|| (this._TaxCalculationMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxCalculationMethod.Entity = null;
						previousValue.OrderDetailTaxes.Remove(this);
					}
					this._TaxCalculationMethod.Entity = value;
					if ((value != null))
					{
						value.OrderDetailTaxes.Add(this);
						this._TaxCalculationMethodId = value.TaxCalculationMethodId;
					}
					else
					{
						this._TaxCalculationMethodId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaxCalculationMethod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tax_calculation_method")]
	public partial class TaxCalculationMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaxCalculationMethodId;
		
		private string _SubdivisionCode;
		
		private int _TaxLevelId;
		
		private int _ProductTypeId;
		
		private int _OrganizationTypeId;
		
		private bool _TaxExemptable;
		
		private System.Nullable<decimal> _MinSalesThreshold;
		
		private System.Nullable<decimal> _MinItemThreshold;
		
		private EntitySet<OrderDetailTax> _OrderDetailTaxes;
		
		private EntityRef<OrganizationType> _OrganizationType;
		
		private EntityRef<Subdivision> _Subdivision;
		
		private EntityRef<ProductType> _ProductType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaxCalculationMethodIdChanging(int value);
    partial void OnTaxCalculationMethodIdChanged();
    partial void OnSubdivisionCodeChanging(string value);
    partial void OnSubdivisionCodeChanged();
    partial void OnTaxLevelIdChanging(int value);
    partial void OnTaxLevelIdChanged();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnOrganizationTypeIdChanging(int value);
    partial void OnOrganizationTypeIdChanged();
    partial void OnTaxExemptableChanging(bool value);
    partial void OnTaxExemptableChanged();
    partial void OnMinSalesThresholdChanging(System.Nullable<decimal> value);
    partial void OnMinSalesThresholdChanged();
    partial void OnMinItemThresholdChanging(System.Nullable<decimal> value);
    partial void OnMinItemThresholdChanged();
    #endregion
		
		public TaxCalculationMethod()
		{
			this._OrderDetailTaxes = new EntitySet<OrderDetailTax>(new Action<OrderDetailTax>(this.attach_OrderDetailTaxes), new Action<OrderDetailTax>(this.detach_OrderDetailTaxes));
			this._OrganizationType = default(EntityRef<OrganizationType>);
			this._Subdivision = default(EntityRef<Subdivision>);
			this._ProductType = default(EntityRef<ProductType>);
			OnCreated();
		}
		
		[Column(Name="tax_calculation_method_id", Storage="_TaxCalculationMethodId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TaxCalculationMethodId
		{
			get
			{
				return this._TaxCalculationMethodId;
			}
			set
			{
				if ((this._TaxCalculationMethodId != value))
				{
					this.OnTaxCalculationMethodIdChanging(value);
					this.SendPropertyChanging();
					this._TaxCalculationMethodId = value;
					this.SendPropertyChanged("TaxCalculationMethodId");
					this.OnTaxCalculationMethodIdChanged();
				}
			}
		}
		
		[Column(Name="subdivision_code", Storage="_SubdivisionCode", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string SubdivisionCode
		{
			get
			{
				return this._SubdivisionCode;
			}
			set
			{
				if ((this._SubdivisionCode != value))
				{
					this.OnSubdivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._SubdivisionCode = value;
					this.SendPropertyChanged("SubdivisionCode");
					this.OnSubdivisionCodeChanged();
				}
			}
		}
		
		[Column(Name="tax_level_id", Storage="_TaxLevelId", DbType="Int NOT NULL")]
		public int TaxLevelId
		{
			get
			{
				return this._TaxLevelId;
			}
			set
			{
				if ((this._TaxLevelId != value))
				{
					this.OnTaxLevelIdChanging(value);
					this.SendPropertyChanging();
					this._TaxLevelId = value;
					this.SendPropertyChanged("TaxLevelId");
					this.OnTaxLevelIdChanged();
				}
			}
		}
		
		[Column(Name="product_type_id", Storage="_ProductTypeId", DbType="Int NOT NULL")]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[Column(Name="organization_type_id", Storage="_OrganizationTypeId", DbType="Int NOT NULL")]
		public int OrganizationTypeId
		{
			get
			{
				return this._OrganizationTypeId;
			}
			set
			{
				if ((this._OrganizationTypeId != value))
				{
					this.OnOrganizationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationTypeId = value;
					this.SendPropertyChanged("OrganizationTypeId");
					this.OnOrganizationTypeIdChanged();
				}
			}
		}
		
		[Column(Name="tax_exemptable", Storage="_TaxExemptable", DbType="Bit NOT NULL")]
		public bool TaxExemptable
		{
			get
			{
				return this._TaxExemptable;
			}
			set
			{
				if ((this._TaxExemptable != value))
				{
					this.OnTaxExemptableChanging(value);
					this.SendPropertyChanging();
					this._TaxExemptable = value;
					this.SendPropertyChanged("TaxExemptable");
					this.OnTaxExemptableChanged();
				}
			}
		}
		
		[Column(Name="min_sales_threshold", Storage="_MinSalesThreshold", DbType="Money")]
		public System.Nullable<decimal> MinSalesThreshold
		{
			get
			{
				return this._MinSalesThreshold;
			}
			set
			{
				if ((this._MinSalesThreshold != value))
				{
					this.OnMinSalesThresholdChanging(value);
					this.SendPropertyChanging();
					this._MinSalesThreshold = value;
					this.SendPropertyChanged("MinSalesThreshold");
					this.OnMinSalesThresholdChanged();
				}
			}
		}
		
		[Column(Name="min_item_threshold", Storage="_MinItemThreshold", DbType="Money")]
		public System.Nullable<decimal> MinItemThreshold
		{
			get
			{
				return this._MinItemThreshold;
			}
			set
			{
				if ((this._MinItemThreshold != value))
				{
					this.OnMinItemThresholdChanging(value);
					this.SendPropertyChanging();
					this._MinItemThreshold = value;
					this.SendPropertyChanged("MinItemThreshold");
					this.OnMinItemThresholdChanged();
				}
			}
		}
		
		[Association(Name="TaxCalculationMethod_OrderDetailTax", Storage="_OrderDetailTaxes", ThisKey="TaxCalculationMethodId", OtherKey="TaxCalculationMethodId")]
		public EntitySet<OrderDetailTax> OrderDetailTaxes
		{
			get
			{
				return this._OrderDetailTaxes;
			}
			set
			{
				this._OrderDetailTaxes.Assign(value);
			}
		}
		
		[Association(Name="OrganizationType_TaxCalculationMethod", Storage="_OrganizationType", ThisKey="OrganizationTypeId", OtherKey="OrganizationTypeId", IsForeignKey=true)]
		public OrganizationType OrganizationType
		{
			get
			{
				return this._OrganizationType.Entity;
			}
			set
			{
				OrganizationType previousValue = this._OrganizationType.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationType.Entity = null;
						previousValue.TaxCalculationMethods.Remove(this);
					}
					this._OrganizationType.Entity = value;
					if ((value != null))
					{
						value.TaxCalculationMethods.Add(this);
						this._OrganizationTypeId = value.OrganizationTypeId;
					}
					else
					{
						this._OrganizationTypeId = default(int);
					}
					this.SendPropertyChanged("OrganizationType");
				}
			}
		}
		
		[Association(Name="Subdivision_TaxCalculationMethod", Storage="_Subdivision", ThisKey="SubdivisionCode", OtherKey="SubdivisionCode", IsForeignKey=true)]
		public Subdivision Subdivision
		{
			get
			{
				return this._Subdivision.Entity;
			}
			set
			{
				Subdivision previousValue = this._Subdivision.Entity;
				if (((previousValue != value) 
							|| (this._Subdivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subdivision.Entity = null;
						previousValue.TaxCalculationMethods.Remove(this);
					}
					this._Subdivision.Entity = value;
					if ((value != null))
					{
						value.TaxCalculationMethods.Add(this);
						this._SubdivisionCode = value.SubdivisionCode;
					}
					else
					{
						this._SubdivisionCode = default(string);
					}
					this.SendPropertyChanged("Subdivision");
				}
			}
		}
		
		[Association(Name="ProductType_TaxCalculationMethod", Storage="_ProductType", ThisKey="ProductTypeId", OtherKey="ProductTypeId", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.TaxCalculationMethods.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.TaxCalculationMethods.Add(this);
						this._ProductTypeId = value.ProductTypeId;
					}
					else
					{
						this._ProductTypeId = default(int);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetailTaxes(OrderDetailTax entity)
		{
			this.SendPropertyChanging();
			entity.TaxCalculationMethod = this;
		}
		
		private void detach_OrderDetailTaxes(OrderDetailTax entity)
		{
			this.SendPropertyChanging();
			entity.TaxCalculationMethod = null;
		}
	}
	
	[Table(Name="dbo.product_type_program_type")]
	public partial class ProductTypeProgramType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeId;
		
		private int _ProgramTypeId;
		
		private EntityRef<ProductType> _ProductType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnProgramTypeIdChanging(int value);
    partial void OnProgramTypeIdChanged();
    #endregion
		
		public ProductTypeProgramType()
		{
			this._ProductType = default(EntityRef<ProductType>);
			OnCreated();
		}
		
		[Column(Name="product_type_id", Storage="_ProductTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[Column(Name="program_type_id", Storage="_ProgramTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramTypeId
		{
			get
			{
				return this._ProgramTypeId;
			}
			set
			{
				if ((this._ProgramTypeId != value))
				{
					this.OnProgramTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramTypeId = value;
					this.SendPropertyChanged("ProgramTypeId");
					this.OnProgramTypeIdChanged();
				}
			}
		}
		
		[Association(Name="ProductType_ProductTypeProgramType", Storage="_ProductType", ThisKey="ProductTypeId", OtherKey="ProductTypeId", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.ProductTypeProgramTypes.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.ProductTypeProgramTypes.Add(this);
						this._ProductTypeId = value.ProductTypeId;
					}
					else
					{
						this._ProductTypeId = default(int);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.product_type")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeId;
		
		private int _ProductLineId;
		
		private string _ProductTypeName;
		
		private bool _AdministrationSupply;
		
		private System.Nullable<decimal> _FulfillmentCharge;
		
		private EntitySet<TaxCalculationMethod> _TaxCalculationMethods;
		
		private EntitySet<ProductTypeProgramType> _ProductTypeProgramTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnProductLineIdChanging(int value);
    partial void OnProductLineIdChanged();
    partial void OnProductTypeNameChanging(string value);
    partial void OnProductTypeNameChanged();
    partial void OnAdministrationSupplyChanging(bool value);
    partial void OnAdministrationSupplyChanged();
    partial void OnFulfillmentChargeChanging(System.Nullable<decimal> value);
    partial void OnFulfillmentChargeChanged();
    #endregion
		
		public ProductType()
		{
			this._TaxCalculationMethods = new EntitySet<TaxCalculationMethod>(new Action<TaxCalculationMethod>(this.attach_TaxCalculationMethods), new Action<TaxCalculationMethod>(this.detach_TaxCalculationMethods));
			this._ProductTypeProgramTypes = new EntitySet<ProductTypeProgramType>(new Action<ProductTypeProgramType>(this.attach_ProductTypeProgramTypes), new Action<ProductTypeProgramType>(this.detach_ProductTypeProgramTypes));
			OnCreated();
		}
		
		[Column(Name="product_type_id", Storage="_ProductTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[Column(Name="product_line_id", Storage="_ProductLineId", DbType="Int NOT NULL")]
		public int ProductLineId
		{
			get
			{
				return this._ProductLineId;
			}
			set
			{
				if ((this._ProductLineId != value))
				{
					this.OnProductLineIdChanging(value);
					this.SendPropertyChanging();
					this._ProductLineId = value;
					this.SendPropertyChanged("ProductLineId");
					this.OnProductLineIdChanged();
				}
			}
		}
		
		[Column(Name="product_type_name", Storage="_ProductTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductTypeName
		{
			get
			{
				return this._ProductTypeName;
			}
			set
			{
				if ((this._ProductTypeName != value))
				{
					this.OnProductTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeName = value;
					this.SendPropertyChanged("ProductTypeName");
					this.OnProductTypeNameChanged();
				}
			}
		}
		
		[Column(Name="administration_supply", Storage="_AdministrationSupply", DbType="Bit NOT NULL")]
		public bool AdministrationSupply
		{
			get
			{
				return this._AdministrationSupply;
			}
			set
			{
				if ((this._AdministrationSupply != value))
				{
					this.OnAdministrationSupplyChanging(value);
					this.SendPropertyChanging();
					this._AdministrationSupply = value;
					this.SendPropertyChanged("AdministrationSupply");
					this.OnAdministrationSupplyChanged();
				}
			}
		}
		
		[Column(Name="fulfillment_charge", Storage="_FulfillmentCharge", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FulfillmentCharge
		{
			get
			{
				return this._FulfillmentCharge;
			}
			set
			{
				if ((this._FulfillmentCharge != value))
				{
					this.OnFulfillmentChargeChanging(value);
					this.SendPropertyChanging();
					this._FulfillmentCharge = value;
					this.SendPropertyChanged("FulfillmentCharge");
					this.OnFulfillmentChargeChanged();
				}
			}
		}
		
		[Association(Name="ProductType_TaxCalculationMethod", Storage="_TaxCalculationMethods", ThisKey="ProductTypeId", OtherKey="ProductTypeId")]
		public EntitySet<TaxCalculationMethod> TaxCalculationMethods
		{
			get
			{
				return this._TaxCalculationMethods;
			}
			set
			{
				this._TaxCalculationMethods.Assign(value);
			}
		}
		
		[Association(Name="ProductType_ProductTypeProgramType", Storage="_ProductTypeProgramTypes", ThisKey="ProductTypeId", OtherKey="ProductTypeId")]
		public EntitySet<ProductTypeProgramType> ProductTypeProgramTypes
		{
			get
			{
				return this._ProductTypeProgramTypes;
			}
			set
			{
				this._ProductTypeProgramTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaxCalculationMethods(TaxCalculationMethod entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_TaxCalculationMethods(TaxCalculationMethod entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
		
		private void attach_ProductTypeProgramTypes(ProductTypeProgramType entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_ProductTypeProgramTypes(ProductTypeProgramType entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
	
	[Table(Name="dbo.qcap_order")]
	public partial class QCAPOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _qcap_order_id;
		
		private int _campaign_id;
		
		private int _form_id;
		
		private int _user_id;
		
		private System.DateTime _order_date;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private bool _deleted;
		
		private EntitySet<QCAPOrderDetail> _QCAPOrderDetails;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Form> _Form;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onqcap_order_idChanging(int value);
    partial void Onqcap_order_idChanged();
    partial void Oncampaign_idChanging(int value);
    partial void Oncampaign_idChanged();
    partial void Onform_idChanging(int value);
    partial void Onform_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onorder_dateChanging(System.DateTime value);
    partial void Onorder_dateChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    #endregion
		
		public QCAPOrder()
		{
			this._QCAPOrderDetails = new EntitySet<QCAPOrderDetail>(new Action<QCAPOrderDetail>(this.attach_QCAPOrderDetails), new Action<QCAPOrderDetail>(this.detach_QCAPOrderDetails));
			this._Campaign = default(EntityRef<Campaign>);
			this._Form = default(EntityRef<Form>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[Column(Storage="_qcap_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int qcap_order_id
		{
			get
			{
				return this._qcap_order_id;
			}
			set
			{
				if ((this._qcap_order_id != value))
				{
					this.Onqcap_order_idChanging(value);
					this.SendPropertyChanging();
					this._qcap_order_id = value;
					this.SendPropertyChanged("qcap_order_id");
					this.Onqcap_order_idChanged();
				}
			}
		}
		
		[Column(Storage="_campaign_id", DbType="Int NOT NULL")]
		public int campaign_id
		{
			get
			{
				return this._campaign_id;
			}
			set
			{
				if ((this._campaign_id != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncampaign_idChanging(value);
					this.SendPropertyChanging();
					this._campaign_id = value;
					this.SendPropertyChanged("campaign_id");
					this.Oncampaign_idChanged();
				}
			}
		}
		
		[Column(Storage="_form_id", DbType="Int NOT NULL")]
		public int form_id
		{
			get
			{
				return this._form_id;
			}
			set
			{
				if ((this._form_id != value))
				{
					if (this._Form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onform_idChanging(value);
					this.SendPropertyChanging();
					this._form_id = value;
					this.SendPropertyChanged("form_id");
					this.Onform_idChanged();
				}
			}
		}
		
		[Column(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_order_date", DbType="DateTime NOT NULL")]
		public System.DateTime order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Association(Name="QCAPOrder_QCAPOrderDetail", Storage="_QCAPOrderDetails", ThisKey="qcap_order_id", OtherKey="qcap_order_id")]
		public EntitySet<QCAPOrderDetail> QCAPOrderDetails
		{
			get
			{
				return this._QCAPOrderDetails;
			}
			set
			{
				this._QCAPOrderDetails.Assign(value);
			}
		}
		
		[Association(Name="Campaign_QCAPOrder", Storage="_Campaign", ThisKey="campaign_id", OtherKey="CampaignId", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.QCAPOrders.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.QCAPOrders.Add(this);
						this._campaign_id = value.CampaignId;
					}
					else
					{
						this._campaign_id = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[Association(Name="Form_QCAPOrder", Storage="_Form", ThisKey="form_id", OtherKey="FormId", IsForeignKey=true)]
		public Form Form
		{
			get
			{
				return this._Form.Entity;
			}
			set
			{
				Form previousValue = this._Form.Entity;
				if (((previousValue != value) 
							|| (this._Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form.Entity = null;
						previousValue.QCAPOrders.Remove(this);
					}
					this._Form.Entity = value;
					if ((value != null))
					{
						value.QCAPOrders.Add(this);
						this._form_id = value.FormId;
					}
					else
					{
						this._form_id = default(int);
					}
					this.SendPropertyChanged("Form");
				}
			}
		}
		
		[Association(Name="User_QCAPOrder", Storage="_User", ThisKey="user_id", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.QCAPOrders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.QCAPOrders.Add(this);
						this._user_id = value.UserId;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QCAPOrderDetails(QCAPOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.QCAPOrder = this;
		}
		
		private void detach_QCAPOrderDetails(QCAPOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.QCAPOrder = null;
		}
	}
	
	[Table(Name="dbo.qcap_order_detail")]
	public partial class QCAPOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _qcap_order_detail_id;
		
		private int _qcap_order_id;
		
		private int _catalog_item_detail_id;
		
		private int _quantity;
		
		private System.DateTime _create_date;
		
		private int _create_user_id;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_user_id;
		
		private bool _deleted;
		
		private EntityRef<CatalogItemDetail> _CatalogItemDetail;
		
		private EntityRef<QCAPOrder> _QCAPOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onqcap_order_detail_idChanging(int value);
    partial void Onqcap_order_detail_idChanged();
    partial void Onqcap_order_idChanging(int value);
    partial void Onqcap_order_idChanged();
    partial void Oncatalog_item_detail_idChanging(int value);
    partial void Oncatalog_item_detail_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    partial void Oncreate_user_idChanging(int value);
    partial void Oncreate_user_idChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_user_idChanging(System.Nullable<int> value);
    partial void Onupdate_user_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    #endregion
		
		public QCAPOrderDetail()
		{
			this._CatalogItemDetail = default(EntityRef<CatalogItemDetail>);
			this._QCAPOrder = default(EntityRef<QCAPOrder>);
			OnCreated();
		}
		
		[Column(Storage="_qcap_order_detail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int qcap_order_detail_id
		{
			get
			{
				return this._qcap_order_detail_id;
			}
			set
			{
				if ((this._qcap_order_detail_id != value))
				{
					this.Onqcap_order_detail_idChanging(value);
					this.SendPropertyChanging();
					this._qcap_order_detail_id = value;
					this.SendPropertyChanged("qcap_order_detail_id");
					this.Onqcap_order_detail_idChanged();
				}
			}
		}
		
		[Column(Storage="_qcap_order_id", DbType="Int NOT NULL")]
		public int qcap_order_id
		{
			get
			{
				return this._qcap_order_id;
			}
			set
			{
				if ((this._qcap_order_id != value))
				{
					if (this._QCAPOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onqcap_order_idChanging(value);
					this.SendPropertyChanging();
					this._qcap_order_id = value;
					this.SendPropertyChanged("qcap_order_id");
					this.Onqcap_order_idChanged();
				}
			}
		}
		
		[Column(Storage="_catalog_item_detail_id", DbType="Int NOT NULL")]
		public int catalog_item_detail_id
		{
			get
			{
				return this._catalog_item_detail_id;
			}
			set
			{
				if ((this._catalog_item_detail_id != value))
				{
					if (this._CatalogItemDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncatalog_item_detail_idChanging(value);
					this.SendPropertyChanging();
					this._catalog_item_detail_id = value;
					this.SendPropertyChanged("catalog_item_detail_id");
					this.Oncatalog_item_detail_idChanged();
				}
			}
		}
		
		[Column(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[Column(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_create_user_id", DbType="Int NOT NULL")]
		public int create_user_id
		{
			get
			{
				return this._create_user_id;
			}
			set
			{
				if ((this._create_user_id != value))
				{
					this.Oncreate_user_idChanging(value);
					this.SendPropertyChanging();
					this._create_user_id = value;
					this.SendPropertyChanged("create_user_id");
					this.Oncreate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[Column(Storage="_update_user_id", DbType="Int")]
		public System.Nullable<int> update_user_id
		{
			get
			{
				return this._update_user_id;
			}
			set
			{
				if ((this._update_user_id != value))
				{
					this.Onupdate_user_idChanging(value);
					this.SendPropertyChanging();
					this._update_user_id = value;
					this.SendPropertyChanged("update_user_id");
					this.Onupdate_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Association(Name="CatalogItemDetail_QCAPOrderDetail", Storage="_CatalogItemDetail", ThisKey="catalog_item_detail_id", OtherKey="CatalogItemDetailId", IsForeignKey=true)]
		public CatalogItemDetail CatalogItemDetail
		{
			get
			{
				return this._CatalogItemDetail.Entity;
			}
			set
			{
				CatalogItemDetail previousValue = this._CatalogItemDetail.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItemDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItemDetail.Entity = null;
						previousValue.QCAPOrderDetails.Remove(this);
					}
					this._CatalogItemDetail.Entity = value;
					if ((value != null))
					{
						value.QCAPOrderDetails.Add(this);
						this._catalog_item_detail_id = value.CatalogItemDetailId;
					}
					else
					{
						this._catalog_item_detail_id = default(int);
					}
					this.SendPropertyChanged("CatalogItemDetail");
				}
			}
		}
		
		[Association(Name="QCAPOrder_QCAPOrderDetail", Storage="_QCAPOrder", ThisKey="qcap_order_id", OtherKey="qcap_order_id", IsForeignKey=true)]
		public QCAPOrder QCAPOrder
		{
			get
			{
				return this._QCAPOrder.Entity;
			}
			set
			{
				QCAPOrder previousValue = this._QCAPOrder.Entity;
				if (((previousValue != value) 
							|| (this._QCAPOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QCAPOrder.Entity = null;
						previousValue.QCAPOrderDetails.Remove(this);
					}
					this._QCAPOrder.Entity = value;
					if ((value != null))
					{
						value.QCAPOrderDetails.Add(this);
						this._qcap_order_id = value.qcap_order_id;
					}
					else
					{
						this._qcap_order_id = default(int);
					}
					this.SendPropertyChanged("QCAPOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
