////////////////////////////////////////////////////////////////////////////////////////////
// Class generated by SqlCodeGen 1.1.0.0.
// Do not edit this file directly. Changes will be lost when this file is regenerated.
// Extensions should be added in a separate file using partial classes.
////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Data;
using System.Text;
using NHibernate;
using NHibernate.Criterion;
using NHibernate.Mapping.Attributes;

namespace QSP.Business.Fulfillment
{
    [Serializable]
    [Class(Schema = "`dbo`", Table = "`shipment_group`")]
    public partial class ShipmentGroup
    {
        #region Constants
        public const string ShipmentGroupEntity = "ShipmentGroup";
        public const string ShipmentGroupIdProperty = "ShipmentGroupId";
        public const string DeliveryWarehouseIdProperty = "DeliveryWarehouseId";
        public const string DeliveryMethodIdProperty = "DeliveryMethodId";
        public const string ShippingPostalAddressIdProperty = "ShippingPostalAddressId";
        public const string ShippingPhoneNumberIdProperty = "ShippingPhoneNumberId";
        public const string ShippingFaxNumberIdProperty = "ShippingFaxNumberId";
        public const string ShippingEmailIdProperty = "ShippingEmailId";
        public const string ShipmentDateProperty = "ShipmentDate";
        public const string ShippingChargesProperty = "ShippingCharges";
        public const string ShipmentSupplyToProperty = "ShipmentSupplyTo";
        public const string DeletedProperty = "Deleted";
        public const string CreateDateProperty = "CreateDate";
        public const string CreateUserIdProperty = "CreateUserId";
        public const string UpdateDateProperty = "UpdateDate";
        public const string UpdateUserIdProperty = "UpdateUserId";
        public const string DeliveryNoLaterThanProperty = "DeliveryNoLaterThan";
        public const string SyncBatchIdProperty = "SyncBatchId";
        public const string SyncOeOrdProperty = "SyncOeOrd";
        public const string RequestedDeliveryDateProperty = "RequestedDeliveryDate";
        public const string ShippingExpeditedChargesCustomerIdProperty = "ShippingExpeditedChargesCustomerId";
        public const string ShippingExpeditedChargesProperty = "ShippingExpeditedCharges";
        public const string ShippingExpeditedFreightChargesProperty = "ShippingExpeditedFreightCharges";
        public const string ExpeditedFreightChargePaymentAssignmentTypeIdProperty = "ExpeditedFreightChargePaymentAssignmentTypeId";
        public const string RequestedDeliveryTimeProperty = "RequestedDeliveryTime";
        public const string FulfShipmentTrackingProperty = "FulfShipmentTracking";
        #endregion

        #region Fields
        protected int shipmentGroupId = 0;
        protected int? deliveryWarehouseId = null;
        protected int? deliveryMethodId = null;
        protected int? shippingPostalAddressId = null;
        protected int? shippingPhoneNumberId = null;
        protected int? shippingFaxNumberId = null;
        protected int? shippingEmailId = null;
        protected DateTime? shipmentDate = null;
        protected decimal? shippingCharges = 0;
        protected int? shipmentSupplyTo = null;
        protected bool deleted = false;
        protected DateTime createDate = DateTime.Now;
        protected int createUserId = 0;
        protected DateTime? updateDate = DateTime.Now;
        protected int? updateUserId = null;
        protected DateTime? deliveryNoLaterThan = null;
        protected int? syncBatchId = null;
        protected int? syncOeOrd = null;
        protected DateTime? requestedDeliveryDate = null;
        protected int? shippingExpeditedChargesCustomerId = null;
        protected decimal? shippingExpeditedCharges = null;
        protected decimal? shippingExpeditedFreightCharges = null;
        protected int expeditedFreightChargePaymentAssignmentTypeId = 0;
        protected DateTime? requestedDeliveryTime = null;
        protected string fulfShipmentTracking = String.Empty;
        #endregion

        #region Constructors
        public ShipmentGroup()
        {
        }
        #endregion

        #region Properties
        [RawXml(Content = @"
		<id name=""ShipmentGroupId"" column=""`shipment_group_id`"">
			<generator class=""native"">
			</generator>
		</id>")]

        public virtual int ShipmentGroupId
        {
            get { return this.shipmentGroupId; }
            set { this.shipmentGroupId = value; }
        }

        [Property(Column = "`delivery_warehouse_id`")]
        public virtual int? DeliveryWarehouseId
        {
            get { return this.deliveryWarehouseId; }
            set { this.deliveryWarehouseId = value; }
        }

        [Property(Column = "`delivery_method_id`")]
        public virtual int? DeliveryMethodId
        {
            get { return this.deliveryMethodId; }
            set { this.deliveryMethodId = value; }
        }

        [Property(Column = "`shipping_postal_address_id`")]
        public virtual int? ShippingPostalAddressId
        {
            get { return this.shippingPostalAddressId; }
            set { this.shippingPostalAddressId = value; }
        }

        [Property(Column = "`shipping_phone_number_id`")]
        public virtual int? ShippingPhoneNumberId
        {
            get { return this.shippingPhoneNumberId; }
            set { this.shippingPhoneNumberId = value; }
        }

        [Property(Column = "`shipping_fax_number_id`")]
        public virtual int? ShippingFaxNumberId
        {
            get { return this.shippingFaxNumberId; }
            set { this.shippingFaxNumberId = value; }
        }

        [Property(Column = "`shipping_email_id`")]
        public virtual int? ShippingEmailId
        {
            get { return this.shippingEmailId; }
            set { this.shippingEmailId = value; }
        }

        [Property(Column = "`shipment_date`")]
        public virtual DateTime? ShipmentDate
        {
            get { return this.shipmentDate; }
            set { this.shipmentDate = value; }
        }

        [Property(Column = "`shipping_charges`")]
        public virtual decimal? ShippingCharges
        {
            get { return this.shippingCharges; }
            set { this.shippingCharges = value; }
        }

        [Property(Column = "`shipment_supply_to`")]
        public virtual int? ShipmentSupplyTo
        {
            get { return this.shipmentSupplyTo; }
            set { this.shipmentSupplyTo = value; }
        }

        [Property(Column = "`deleted`")]
        public virtual bool Deleted
        {
            get { return this.deleted; }
            set { this.deleted = value; }
        }

        [Property(Column = "`create_date`")]
        public virtual DateTime CreateDate
        {
            get { return this.createDate; }
            set { this.createDate = value; }
        }

        [Property(Column = "`create_user_id`")]
        public virtual int CreateUserId
        {
            get { return this.createUserId; }
            set { this.createUserId = value; }
        }

        [Property(Column = "`update_date`")]
        public virtual DateTime? UpdateDate
        {
            get { return this.updateDate; }
            set { this.updateDate = value; }
        }

        [Property(Column = "`update_user_id`")]
        public virtual int? UpdateUserId
        {
            get { return this.updateUserId; }
            set { this.updateUserId = value; }
        }

        [Property(Column = "`delivery_no_later_than`")]
        public virtual DateTime? DeliveryNoLaterThan
        {
            get { return this.deliveryNoLaterThan; }
            set { this.deliveryNoLaterThan = value; }
        }

        [Property(Column = "`sync_batch_id`")]
        public virtual int? SyncBatchId
        {
            get { return this.syncBatchId; }
            set { this.syncBatchId = value; }
        }

        [Property(Column = "`sync_oe#ord`")]
        public virtual int? SyncOeOrd
        {
            get { return this.syncOeOrd; }
            set { this.syncOeOrd = value; }
        }

        [Property(Column = "`requested_delivery_date`")]
        public virtual DateTime? RequestedDeliveryDate
        {
            get { return this.requestedDeliveryDate; }
            set { this.requestedDeliveryDate = value; }
        }

        [Property(Column = "`shipping_expedited_charges_customer_id`")]
        public virtual int? ShippingExpeditedChargesCustomerId
        {
            get { return this.shippingExpeditedChargesCustomerId; }
            set { this.shippingExpeditedChargesCustomerId = value; }
        }

        [Property(Column = "`shipping_expedited_charges`")]
        public virtual decimal? ShippingExpeditedCharges
        {
            get { return this.shippingExpeditedCharges; }
            set { this.shippingExpeditedCharges = value; }
        }

        [Property(Column = "`shipping_expedited_freight_charges`")]
        public virtual decimal? ShippingExpeditedFreightCharges
        {
            get { return this.shippingExpeditedFreightCharges; }
            set { this.shippingExpeditedFreightCharges = value; }
        }

        [Property(Column = "`expedited_freight_charge_payment_assignment_type_id`")]
        public virtual int ExpeditedFreightChargePaymentAssignmentTypeId
        {
            get { return this.expeditedFreightChargePaymentAssignmentTypeId; }
            set { this.expeditedFreightChargePaymentAssignmentTypeId = value; }
        }

        [Property(Column = "`requested_delivery_time`")]
        public virtual DateTime? RequestedDeliveryTime
        {
            get { return this.requestedDeliveryTime; }
            set { this.requestedDeliveryTime = value; }
        }

        [Property(Column = "`fulf_shipment_tracking`")]
        public virtual string FulfShipmentTracking
        {
            get { return this.fulfShipmentTracking; }
            set { this.fulfShipmentTracking = value; }
        }
        #endregion

        #region Methods
        public static ICriteria CreateCriteria()
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ICriteria c = session.CreateCriteria(typeof(ShipmentGroup));
                return c;
            }
        }

        public static ShipmentGroup GetShipmentGroup(int shipmentGroupId)
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                return session.Get<ShipmentGroup>(shipmentGroupId);
            }
        }

        public static List<ShipmentGroup> GetShipmentGroupList(ICriteria criteria)
        {
            return (List<ShipmentGroup>)criteria.List<ShipmentGroup>();
        }

        public static List<ShipmentGroup> GetShipmentGroupList()
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ICriteria c = session.CreateCriteria(typeof(ShipmentGroup));
                return (List<ShipmentGroup>)c.List<ShipmentGroup>();
            }
        }

        public static List<ShipmentGroup> GetShipmentGroupList(string sortExpression, int maximumRows, int startRowIndex)
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ICriteria c = session.CreateCriteria(typeof(ShipmentGroup));
                if (sortExpression != null && sortExpression != "")
                {
                    // Get ascending or descending order
                    bool descending = sortExpression.Contains(" DESC");

                    // Strip off ASC or DESC ordering
                    sortExpression = sortExpression.Replace(" ASC", "");
                    sortExpression = sortExpression.Replace(" DESC", "");
                    sortExpression = sortExpression.Trim();

                    // Get multi column sort from the comma delimited string
                    List<String> expressions = new List<String>();
                    if (sortExpression.Contains(","))
                    {
                        string[] tokens = sortExpression.Split(",".ToCharArray());
                        for (int i = 0; i < tokens.Length; i++)
                        {
                            tokens[i] = tokens[i].Trim();
                            if (tokens[i] != "")
                                expressions.Add(tokens[i]);
                        }
                    }
                    else if (sortExpression != "")
                    {
                        expressions.Add(sortExpression);
                    }

                    // Create the order
                    for (int i = 0; i < expressions.Count; i++)
                    {
                        if (descending)
                            c.AddOrder(NHibernate.Criterion.Order.Desc(expressions[i]));
                        else
                            c.AddOrder(NHibernate.Criterion.Order.Asc(expressions[i]));
                    }
                }

                // Set offset and limit
                if (startRowIndex >= 0)
                    c.SetFirstResult(startRowIndex);

                if (maximumRows >= 0)
                    c.SetMaxResults(maximumRows);

                return (List<ShipmentGroup>)c.List<ShipmentGroup>();
            }
        }

        public static List<ShipmentGroup> GetShipmentGroupList(string sortExpression)
        {
            return GetShipmentGroupList(sortExpression, -1, -1);
        }

        public static void InsertShipmentGroup(ShipmentGroup obj)
        {
            if (obj != null)
                obj.Insert();
        }

        public static void UpdateShipmentGroup(ShipmentGroup obj)
        {
            if (obj != null)
                obj.Update();
        }

        public static void DeleteShipmentGroup(ShipmentGroup obj)
        {
            if (obj != null)
                obj.Delete();
        }

        protected static ShipmentGroup PopulateShipmentGroup(IDataReader r)
        {
            ShipmentGroup obj = new ShipmentGroup();
            obj.ShipmentGroupId = (int)r["shipment_group_id"];
            obj.DeliveryWarehouseId = (r["delivery_warehouse_id"] == DBNull.Value) ? null : (int?)r["delivery_warehouse_id"];
            obj.DeliveryMethodId = (r["delivery_method_id"] == DBNull.Value) ? null : (int?)r["delivery_method_id"];
            obj.ShippingPostalAddressId = (r["shipping_postal_address_id"] == DBNull.Value) ? null : (int?)r["shipping_postal_address_id"];
            obj.ShippingPhoneNumberId = (r["shipping_phone_number_id"] == DBNull.Value) ? null : (int?)r["shipping_phone_number_id"];
            obj.ShippingFaxNumberId = (r["shipping_fax_number_id"] == DBNull.Value) ? null : (int?)r["shipping_fax_number_id"];
            obj.ShippingEmailId = (r["shipping_email_id"] == DBNull.Value) ? null : (int?)r["shipping_email_id"];
            obj.ShipmentDate = (r["shipment_date"] == DBNull.Value) ? null : (DateTime?)r["shipment_date"];
            obj.ShippingCharges = (r["shipping_charges"] == DBNull.Value) ? null : (decimal?)r["shipping_charges"];
            obj.ShipmentSupplyTo = (r["shipment_supply_to"] == DBNull.Value) ? null : (int?)r["shipment_supply_to"];
            obj.Deleted = (bool)r["deleted"];
            obj.CreateDate = (DateTime)r["create_date"];
            obj.CreateUserId = (int)r["create_user_id"];
            obj.UpdateDate = (r["update_date"] == DBNull.Value) ? null : (DateTime?)r["update_date"];
            obj.UpdateUserId = (r["update_user_id"] == DBNull.Value) ? null : (int?)r["update_user_id"];
            obj.DeliveryNoLaterThan = (r["delivery_no_later_than"] == DBNull.Value) ? null : (DateTime?)r["delivery_no_later_than"];
            obj.SyncBatchId = (r["sync_batch_id"] == DBNull.Value) ? null : (int?)r["sync_batch_id"];
            obj.SyncOeOrd = (r["sync_oe#ord"] == DBNull.Value) ? null : (int?)r["sync_oe#ord"];
            obj.RequestedDeliveryDate = (r["requested_delivery_date"] == DBNull.Value) ? null : (DateTime?)r["requested_delivery_date"];
            obj.ShippingExpeditedChargesCustomerId = (r["shipping_expedited_charges_customer_id"] == DBNull.Value) ? null : (int?)r["shipping_expedited_charges_customer_id"];
            obj.ShippingExpeditedCharges = (r["shipping_expedited_charges"] == DBNull.Value) ? null : (decimal?)r["shipping_expedited_charges"];
            obj.ShippingExpeditedFreightCharges = (r["shipping_expedited_freight_charges"] == DBNull.Value) ? null : (decimal?)r["shipping_expedited_freight_charges"];
            obj.ExpeditedFreightChargePaymentAssignmentTypeId = (int)r["expedited_freight_charge_payment_assignment_type_id"];
            obj.RequestedDeliveryTime = (r["requested_delivery_time"] == DBNull.Value) ? null : (DateTime?)r["requested_delivery_time"];
            obj.FulfShipmentTracking = (r["fulf_shipment_tracking"] == DBNull.Value) ? null : (string)r["fulf_shipment_tracking"];

            return obj;
        }

        public static int GetCount()
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ICriteria c = session.CreateCriteria(typeof(ShipmentGroup));
                c.SetProjection(Projections.RowCount());
                return (int)c.UniqueResult();
            }
        }

        /// <summary>
        /// Insert the entity to database.
        /// </summary>
        public virtual void Insert()
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ITransaction trans = session.BeginTransaction();
                try
                {
                    session.Save(this);
                    trans.Commit();
                }
                catch
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// Update the entity to database.
        /// </summary>
        public virtual void Update()
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ITransaction trans = session.BeginTransaction();
                try
                {
                    session.Update(this);
                    trans.Commit();
                }
                catch
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// Persist the entity back to database.
        /// </summary>
        public virtual void Save()
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ITransaction trans = session.BeginTransaction();
                try
                {
                    session.SaveOrUpdate(this);
                    trans.Commit();
                }
                catch
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// Delete entity in database.
        /// </summary>
        public virtual void Delete()
        {
            using (ISession session = SqlSessionManager.OpenSession())
            {
                ITransaction trans = session.BeginTransaction();
                try
                {
                    session.Delete(this);
                    trans.Commit();
                }
                catch
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// Local implementation of Equals based on unique value members
        /// </summary>
        public override bool Equals(object obj)
        {
            if (this == obj)
                return true;

            if ((obj == null) || (obj.GetType() != this.GetType()))
                return false;

            ShipmentGroup castObj = (ShipmentGroup)obj;
            return (castObj != null && this.shipmentGroupId == castObj.ShipmentGroupId);
        }

        /// <summary>
        /// Local implementation of GetHashCode based on unique value members
        /// </summary>
        public override int GetHashCode()
        {
            return 29 * (1 + this.shipmentGroupId.GetHashCode());
        }
        #endregion
    }
}
