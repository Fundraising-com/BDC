//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: ProgramDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ProgramDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableProgram
        /// </summary>
        protected ProgramDataTable tableProgram;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public ProgramDataSet() {
            this.tableProgram = this.CreateProgramDataTable();
            this.Tables.Add(this.tableProgram);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected ProgramDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Program"] != null)) {
                    this.Tables.Add(this.CreateProgramDataTable(ds.Tables["Program"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: Program
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual ProgramDataTable Program {
            get {
                return this.tableProgram;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            ProgramDataSet cln = ((ProgramDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Program"] != null)) {
                this.Tables.Add(this.CreateProgramDataTable(ds.Tables["Program"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableProgram = ((ProgramDataTable)(this.Tables["Program"]));
            if ((this.tableProgram != null)) {
                this.tableProgram.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "ProgramDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProgramDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableProgram = this.CreateProgramDataTable();
            this.Tables.Add(this.tableProgram);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeProgram
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeProgram
        /// </summary>
        protected virtual bool ShouldSerializeProgram() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateProgramDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateProgramDataTable
        /// </summary>
        protected virtual ProgramDataTable CreateProgramDataTable() {
            return new ProgramDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateProgramDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateProgramDataTable
        /// </summary>
        protected virtual ProgramDataTable CreateProgramDataTable(DataTable table) {
            return new ProgramDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: ProgramRowChangeEventHandler
        /// </summary>
        public delegate void ProgramRowChangeEventHandler(object sender, ProgramRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: ProgramDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProgramDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCountry
            /// </summary>
            protected DataColumn columnCountry;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnFundraisingProcedureID
            /// </summary>
            protected DataColumn columnFundraisingProcedureID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnProgramTypeID
            /// </summary>
            protected DataColumn columnProgramTypeID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnName
            /// </summary>
            protected DataColumn columnName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnMajorProductLineID
            /// </summary>
            protected DataColumn columnMajorProductLineID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDefaultProfit
            /// </summary>
            protected DataColumn columnDefaultProfit;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnMinProfit
            /// </summary>
            protected DataColumn columnMinProfit;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnMaxProfit
            /// </summary>
            protected DataColumn columnMaxProfit;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnOrdefuPrintInAR
            /// </summary>
            protected DataColumn columnOrdefuPrintInAR;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnActiveForFiscal_TF
            /// </summary>
            protected DataColumn columnActiveForFiscal_TF;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnAbr
            /// </summary>
            protected DataColumn columnAbr;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ProgramDataTable() : 
                    base("Program") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ProgramDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CountryColumn
            /// </summary>
            public virtual DataColumnExtended CountryColumn {
                get {
                    return ((DataColumnExtended)(this.columnCountry));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FundraisingProcedureIDColumn
            /// </summary>
            public virtual DataColumnExtended FundraisingProcedureIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnFundraisingProcedureID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ProgramTypeIDColumn
            /// </summary>
            public virtual DataColumnExtended ProgramTypeIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnProgramTypeID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NameColumn
            /// </summary>
            public virtual DataColumnExtended NameColumn {
                get {
                    return ((DataColumnExtended)(this.columnName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MajorProductLineIDColumn
            /// </summary>
            public virtual DataColumnExtended MajorProductLineIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnMajorProductLineID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DefaultProfitColumn
            /// </summary>
            public virtual DataColumnExtended DefaultProfitColumn {
                get {
                    return ((DataColumnExtended)(this.columnDefaultProfit));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MinProfitColumn
            /// </summary>
            public virtual DataColumnExtended MinProfitColumn {
                get {
                    return ((DataColumnExtended)(this.columnMinProfit));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MaxProfitColumn
            /// </summary>
            public virtual DataColumnExtended MaxProfitColumn {
                get {
                    return ((DataColumnExtended)(this.columnMaxProfit));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: OrdefuPrintInARColumn
            /// </summary>
            public virtual DataColumnExtended OrdefuPrintInARColumn {
                get {
                    return ((DataColumnExtended)(this.columnOrdefuPrintInAR));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ActiveForFiscal_TFColumn
            /// </summary>
            public virtual DataColumnExtended ActiveForFiscal_TFColumn {
                get {
                    return ((DataColumnExtended)(this.columnActiveForFiscal_TF));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AbrColumn
            /// </summary>
            public virtual DataColumnExtended AbrColumn {
                get {
                    return ((DataColumnExtended)(this.columnAbr));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual ProgramRow this[int index] {
                get {
                    return ((ProgramRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ProgramRowChanged
            /// </summary>
            public event ProgramRowChangeEventHandler ProgramRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ProgramRowChanging
            /// </summary>
            public event ProgramRowChangeEventHandler ProgramRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ProgramRowDeleted
            /// </summary>
            public event ProgramRowChangeEventHandler ProgramRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ProgramRowDeleting
            /// </summary>
            public event ProgramRowChangeEventHandler ProgramRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddProgramRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddProgramRow
            /// </summary>
            public virtual void AddProgramRow(ProgramRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddProgramRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddProgramRow
            /// </summary>
            public virtual ProgramRow AddProgramRow(string Country, int FundraisingProcedureID, int ProgramTypeID, string Name, int MajorProductLineID, System.Decimal DefaultProfit, System.Decimal MinProfit, System.Decimal MaxProfit, string OrdefuPrintInAR, bool ActiveForFiscal_TF, string Abr) {
                ProgramRow rowProgramRow = ((ProgramRow)(this.NewRow()));
                rowProgramRow.ItemArray = new object[] {
                        null,
                        Country,
                        FundraisingProcedureID,
                        ProgramTypeID,
                        Name,
                        MajorProductLineID,
                        DefaultProfit,
                        MinProfit,
                        MaxProfit,
                        OrdefuPrintInAR,
                        ActiveForFiscal_TF,
                        Abr};
                this.Rows.Add(rowProgramRow);
                return rowProgramRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual ProgramRow FindByID(int ID) {
                return ((ProgramRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                ProgramDataTable cln = ((ProgramDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new ProgramDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnCountry = this.Columns["Country"];
                this.columnFundraisingProcedureID = this.Columns["FundraisingProcedureID"];
                this.columnProgramTypeID = this.Columns["ProgramTypeID"];
                this.columnName = this.Columns["Name"];
                this.columnMajorProductLineID = this.Columns["MajorProductLineID"];
                this.columnDefaultProfit = this.Columns["DefaultProfit"];
                this.columnMinProfit = this.Columns["MinProfit"];
                this.columnMaxProfit = this.Columns["MaxProfit"];
                this.columnOrdefuPrintInAR = this.Columns["OrdefuPrintInAR"];
                this.columnActiveForFiscal_TF = this.Columns["ActiveForFiscal_TF"];
                this.columnAbr = this.Columns["Abr"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnID = new DataColumnExtended("ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnCountry = new DataColumnExtended("Country", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountry);
                this.columnFundraisingProcedureID = new DataColumnExtended("FundraisingProcedureID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFundraisingProcedureID);
                this.columnProgramTypeID = new DataColumnExtended("ProgramTypeID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProgramTypeID);
                this.columnName = new DataColumnExtended("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnMajorProductLineID = new DataColumnExtended("MajorProductLineID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMajorProductLineID);
                this.columnDefaultProfit = new DataColumnExtended("DefaultProfit", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDefaultProfit);
                this.columnMinProfit = new DataColumnExtended("MinProfit", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMinProfit);
                this.columnMaxProfit = new DataColumnExtended("MaxProfit", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxProfit);
                this.columnOrdefuPrintInAR = new DataColumnExtended("OrdefuPrintInAR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdefuPrintInAR);
                this.columnActiveForFiscal_TF = new DataColumnExtended("ActiveForFiscal_TF", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActiveForFiscal_TF);
                this.columnAbr = new DataColumnExtended("Abr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAbr);
                this.Constraints.Add(new UniqueConstraint("ProgramDataSetKey1", new DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnActiveForFiscal_TF.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewProgramRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewProgramRow
            /// </summary>
            public virtual ProgramRow NewProgramRow() {
                return ((ProgramRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ProgramRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(ProgramRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProgramRowChanged != null)) {
                    this.ProgramRowChanged(this, new ProgramRowChangeEvent(((ProgramRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProgramRowChanging != null)) {
                    this.ProgramRowChanging(this, new ProgramRowChangeEvent(((ProgramRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProgramRowDeleted != null)) {
                    this.ProgramRowDeleted(this, new ProgramRowChangeEvent(((ProgramRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProgramRowDeleting != null)) {
                    this.ProgramRowDeleting(this, new ProgramRowChangeEvent(((ProgramRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveProgramRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveProgramRow
            /// </summary>
            public virtual void RemoveProgramRow(ProgramRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProgramRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableProgram
            /// </summary>
            private ProgramDataTable tableProgram;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal ProgramRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableProgram = ((ProgramDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int ID {
                get {
                    return ((int)(this[this.tableProgram.IDColumn]));
                }
                set {
                    this[this.tableProgram.IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Country
            /// </summary>
            public virtual string Country {
                get {
                    try {
                        return ((string)(this[this.tableProgram.CountryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.CountryColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FundraisingProcedureID
            /// </summary>
            public virtual int FundraisingProcedureID {
                get {
                    try {
                        return ((int)(this[this.tableProgram.FundraisingProcedureIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.FundraisingProcedureIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ProgramTypeID
            /// </summary>
            public virtual int ProgramTypeID {
                get {
                    try {
                        return ((int)(this[this.tableProgram.ProgramTypeIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramTypeIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Name
            /// </summary>
            public virtual string Name {
                get {
                    try {
                        return ((string)(this[this.tableProgram.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.NameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MajorProductLineID
            /// </summary>
            public virtual int MajorProductLineID {
                get {
                    try {
                        return ((int)(this[this.tableProgram.MajorProductLineIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.MajorProductLineIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DefaultProfit
            /// </summary>
            public virtual System.Decimal DefaultProfit {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableProgram.DefaultProfitColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.DefaultProfitColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MinProfit
            /// </summary>
            public virtual System.Decimal MinProfit {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableProgram.MinProfitColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.MinProfitColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MaxProfit
            /// </summary>
            public virtual System.Decimal MaxProfit {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableProgram.MaxProfitColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.MaxProfitColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: OrdefuPrintInAR
            /// </summary>
            public virtual string OrdefuPrintInAR {
                get {
                    try {
                        return ((string)(this[this.tableProgram.OrdefuPrintInARColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.OrdefuPrintInARColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ActiveForFiscal_TF
            /// </summary>
            public virtual bool ActiveForFiscal_TF {
                get {
                    return ((bool)(this[this.tableProgram.ActiveForFiscal_TFColumn]));
                }
                set {
                    this[this.tableProgram.ActiveForFiscal_TFColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Abr
            /// </summary>
            public virtual string Abr {
                get {
                    try {
                        return ((string)(this[this.tableProgram.AbrColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgram.AbrColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCountryNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCountryNull
            /// </summary>
            public virtual bool IsCountryNull() {
                return this.IsNull(this.tableProgram.CountryColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCountryNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCountryNull
            /// </summary>
            public virtual void SetCountryNull() {
                this[this.tableProgram.CountryColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsFundraisingProcedureIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsFundraisingProcedureIDNull
            /// </summary>
            public virtual bool IsFundraisingProcedureIDNull() {
                return this.IsNull(this.tableProgram.FundraisingProcedureIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetFundraisingProcedureIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetFundraisingProcedureIDNull
            /// </summary>
            public virtual void SetFundraisingProcedureIDNull() {
                this[this.tableProgram.FundraisingProcedureIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsProgramTypeIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsProgramTypeIDNull
            /// </summary>
            public virtual bool IsProgramTypeIDNull() {
                return this.IsNull(this.tableProgram.ProgramTypeIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetProgramTypeIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetProgramTypeIDNull
            /// </summary>
            public virtual void SetProgramTypeIDNull() {
                this[this.tableProgram.ProgramTypeIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            public virtual bool IsNameNull() {
                return this.IsNull(this.tableProgram.NameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            public virtual void SetNameNull() {
                this[this.tableProgram.NameColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMajorProductLineIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMajorProductLineIDNull
            /// </summary>
            public virtual bool IsMajorProductLineIDNull() {
                return this.IsNull(this.tableProgram.MajorProductLineIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMajorProductLineIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMajorProductLineIDNull
            /// </summary>
            public virtual void SetMajorProductLineIDNull() {
                this[this.tableProgram.MajorProductLineIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDefaultProfitNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDefaultProfitNull
            /// </summary>
            public virtual bool IsDefaultProfitNull() {
                return this.IsNull(this.tableProgram.DefaultProfitColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDefaultProfitNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDefaultProfitNull
            /// </summary>
            public virtual void SetDefaultProfitNull() {
                this[this.tableProgram.DefaultProfitColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMinProfitNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMinProfitNull
            /// </summary>
            public virtual bool IsMinProfitNull() {
                return this.IsNull(this.tableProgram.MinProfitColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMinProfitNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMinProfitNull
            /// </summary>
            public virtual void SetMinProfitNull() {
                this[this.tableProgram.MinProfitColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMaxProfitNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMaxProfitNull
            /// </summary>
            public virtual bool IsMaxProfitNull() {
                return this.IsNull(this.tableProgram.MaxProfitColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMaxProfitNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMaxProfitNull
            /// </summary>
            public virtual void SetMaxProfitNull() {
                this[this.tableProgram.MaxProfitColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsOrdefuPrintInARNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsOrdefuPrintInARNull
            /// </summary>
            public virtual bool IsOrdefuPrintInARNull() {
                return this.IsNull(this.tableProgram.OrdefuPrintInARColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetOrdefuPrintInARNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetOrdefuPrintInARNull
            /// </summary>
            public virtual void SetOrdefuPrintInARNull() {
                this[this.tableProgram.OrdefuPrintInARColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsAbrNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsAbrNull
            /// </summary>
            public virtual bool IsAbrNull() {
                return this.IsNull(this.tableProgram.AbrColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetAbrNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetAbrNull
            /// </summary>
            public virtual void SetAbrNull() {
                this[this.tableProgram.AbrColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProgramRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private ProgramRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ProgramRowChangeEvent(ProgramRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual ProgramRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
