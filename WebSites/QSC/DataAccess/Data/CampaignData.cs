///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Description: Data Access class for the table 'Campaign'
// Generated by LLBLGen v1.2.1594.24829 Final
// on: Thursday, May 13, 2004, 2:49:17 PM
// Because the Base Class already implements IDispose, this class doesn't.
///////////////////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;
using tableRef =QSPFulfillment.DataAccess.Common.TableDef.CampaignTable;


namespace QSPFulfillment.DataAccess.Data
{
	/// <summary>
	/// Purpose: Data Access class for the table 'Campaign'.
	/// </summary>
	public class CampaignData : QSPFulfillment.DataAccess.Data.DBTableOperation
	{
		#region Class Member Declarations
		internal const string PARAM_ID= "@ID";
		internal const string PARAM_STATUS= "@iStatus";
		internal const string PARAM_RENEWAL= "@bRenewal";
		internal const string PARAM_COUNTRY = "@sCountry";
		internal const int PARAM_COUNTRY_LENGTH = 50;
		internal const string PARAM_FMID= "@sFMID";
		internal const string PARAM_DATECHANGED = "@sDateChanged";
		internal const string PARAM_LANG = "@sLang";
		internal const string PARAM_ENDDATE = "@daEndDate";
		internal const string PARAM_STARTDATE = "@daStartDate";
		internal const string PARAM_INCENTIVESBILLTOID= "@iIncentivesBillToID";
		internal const string PARAM_BILLTOACCOUNTID = "@iBillToAccountID";
		internal const string PARAM_SHIPTOCAMPAIGNCONTACTID = "@iShipToCampaignContactID";
		internal const string PARAM_SHIPTOACCOUNTID = "@iShipToAccountID";
		internal const string PARAM_ESTIMATEDGROSS = "@dcEstimatedGross";
		internal const string PARAM_NUMBEROFPARTICIPANTS = "@iNumberOfParticipants";
		internal const string PARAM_NUMBEROFCLASSROOOMS = "@iNumberOfClassroooms";
		internal const string PARAM_NUMBEROFSTAFF = "@iNumberOfStaff";
		internal const string PARAM_BILLTOCAMPAIGNCONTACTID = "@iBillToCampaignContactID";
		internal const string PARAM_SUPPLIESCAMPAIGNCONTACTID = "@iSuppliesCampaignContactID";
		internal const string PARAM_SUPPLIESSHIPTOCAMPAIGNCONTACTID = "@iSuppliesShipToCampaignContactID";
		internal const string PARAM_SUPPLIESDELIVERYDATE = "@daSuppliesDeliveryDate";
		internal const string PARAM_SPECIALINSTRUCTIONS = "@sSpecialInstructions";
		internal const string PARAM_ISSTAFFORDER = "@bIsStaffOrder";
		internal const string PARAM_STAFFORDERDISCOUNT = "@dcStaffOrderDiscount";
		internal const string PARAM_ISTESTCAMPAIGN = "@bIsTestCampaign";
		internal const string PARAM_DATEMODIFIED = "@daDateModified";
		internal const string PARAM_USERIDMODIFIED = "@iUserIDModified";
		internal const string PARAM_ISPAYLATER = "@bIsPayLater";
		internal const string PARAM_INCENTIVESDISTRIBUTIONID = "@iIncentivesDistributionID";
		internal const string PARAM_FSREQUIRED = "@bFSRequired";
		internal const string PARAM_FSEXTRAREQUIRED = "@bFSExtraRequired";
		internal const string PARAM_FSORDERRECCREATED = "@bFSOrderRecCreated";
		internal const string PARAM_APPROVEDSTATUSDATE = "@daApprovedStatusDate";
		internal const string PARAM_MAGNETSTATEMENTDATE = "@daMagnetStatementDate";
		internal const string PARAM_REWARDSPROGRAMCUMULATIVE = "@bRewardsProgramCumulative";
		internal const string PARAM_REWARDSPROGRAMCHART = "@bRewardsProgramChart";
		internal const string PARAM_REWARDSPROGRAMDRAW = "@bRewardsProgramDraw";
		internal const string PARAM_CONTACTNAME = "@sContactName";
		internal const string PARAM_PHONELISTID = "@iPhoneListID";
		internal const string PARAM_SUPPLIESADDRESSID = "@iSuppliesAddressID";
		internal const string PARAM_DATESUBMITTED = "@dDateSubmitted";
        internal const string PARAM_COOKIEDOUGHDELIVERYDATE = "@daCookieDoughDeliveryDate";


		//

		// DataSetCommand object

		//

		private SqlCommand insertCommand = null;

		private SqlCommand deleteCommand = null;

		private SqlCommand updateCommand = null;

		#endregion


		/// <summary>
		/// Purpose: Class constructor.
		/// </summary>
		public CampaignData()
		{
			// Nothing for now.
		}
		//----------------------------------------------------------------
		// Sub GetInsertCommand:
		//   Initialize the parameterized Insert command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetInsertCommand()
		{
			if ( insertCommand == null )
			{
				//
				// Construct the command since we don't have it already
				// 

			}
			return insertCommand;
		}
		//----------------------------------------------------------------
		// Sub BuildUpdateCommand:
		//   Initialize the parameterized Update command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetDeleteCommand()
		{
			if ( deleteCommand == null )
			{
				//
				// Construct the command since we don't have it already
				//
				deleteCommand = new SqlCommand("dbo.[pr_Campaign_Delete]");
				deleteCommand.CommandType = CommandType.StoredProcedure;
				SqlParameterCollection sqlParams = deleteCommand.Parameters;

				sqlParams.Add(new SqlParameter(PARAM_ID,SqlDbType.Int));
				sqlParams[PARAM_ID].SourceColumn = tableRef.FLD_ID;
			}
			return deleteCommand;
		}
		//----------------------------------------------------------------
		// Sub BuildUpdateCommand:
		//   Initialize the parameterized Update command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetUpdateCommand()
		{
			if ( updateCommand == null )
			{
				//
				// Construct the command since we don't have it already
				//
				
			}
			return updateCommand;
		}
		protected override string TableName
		{
			get
			{
				return tableRef.TBL_CAMPAIGN;
			}
		}

		public  void SelectOne(DataTable Table, Int32 ID)		
		{
			SqlCommand	scmCmdToExecute = new SqlCommand();
			scmCmdToExecute.CommandText = "QSPCanadaCommon.dbo.[pr_Campaign_SelectOne]";
			scmCmdToExecute.CommandType = CommandType.StoredProcedure;
			scmCmdToExecute.Parameters.Add(new SqlParameter("@iID", SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, ID));
			Select(scmCmdToExecute,Table);
		}

        public void SelectFMCommissionCampaign(DataTable Table, string FMID)
        {
            SqlCommand scmCmdToExecute = new SqlCommand();
            scmCmdToExecute.CommandText = "QSPCanadaCommon.dbo.[pr_Campaign_SelectFMCommissionCampaign]";
            scmCmdToExecute.CommandType = CommandType.StoredProcedure;
            scmCmdToExecute.Parameters.Add(new SqlParameter("@FMID", SqlDbType.VarChar, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, FMID));
            Select(scmCmdToExecute, Table);
        }

		/// <summary>
		/// Purpose: SelectAll method. This method will Select all rows from the table.
		/// </summary>
		/// <returns>DataTable object if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// </remarks>
		public  void SelectAll(DataTable Table)		
		{
			SqlCommand	scmCmdToExecute = new SqlCommand();
			scmCmdToExecute.CommandText = "QSPCanadaCommon.dbo.[pr_Campaign_SelectAll]";
			scmCmdToExecute.CommandType = CommandType.StoredProcedure;
			Select(scmCmdToExecute,Table);
		}

		public void SelectFieldManager(DataTable Table,int CampaignID)
		{
			SqlCommand	scmCmdToExecute = new SqlCommand();
			scmCmdToExecute.CommandText = "dbo.[pr_FieldManager_ByCampaignID]";
			scmCmdToExecute.CommandType = CommandType.StoredProcedure;
			scmCmdToExecute.Parameters.Add(new SqlParameter("@iCampaignID", SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, CampaignID));
			Select(scmCmdToExecute,Table);
		}
	}
}
