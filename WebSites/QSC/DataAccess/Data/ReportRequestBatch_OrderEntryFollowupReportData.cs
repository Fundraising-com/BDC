///////////////////////////////////////////////////////////////////////////
// Description: Data Access class for the table 'Customer'
// Generated by LLBLGen v1.2.1594.24829 Final
// on: Thursday, May 13, 2004, 2:49:44 PM
// Because the Base Class already implements IDispose, this class doesn't.
///////////////////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;
using QSPFulfillment.DataAccess.Common.ActionObject;


namespace QSPFulfillment.DataAccess.Data
{
	/// <summary>
	/// Purpose: Data Access class for the table 'Customer'.
	/// </summary>
	public class ReportRequestBatch_OrderEntryFollowupReportData : QSPFulfillment.DataAccess.Data.DBTableOperation
	{
		#region Class Member Declarations
		internal const string PARAM_CUSTOMERORDERHEADERINSTANCE= "@iCustomerOrderHeaderInstance";
        internal const string PARAM_ORDERID = "@OrderID";

		//

		// DataSetCommand object

		//

		private SqlCommand insertCommand = null;

		private SqlCommand deleteCommand = null;

		private SqlCommand updateCommand = null;

		#endregion


		/// <summary>
		/// Purpose: Class constructor.
		/// </summary>
		public ReportRequestBatch_OrderEntryFollowupReportData()
		{
			// Nothing for now.
		}
		//----------------------------------------------------------------
		// Sub GetInsertCommand:
		//   Initialize the parameterized Insert command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetInsertCommand()
		{
			return insertCommand;
		}
		//----------------------------------------------------------------
		// Sub BuildUpdateCommand:
		//   Initialize the parameterized Update command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetDeleteCommand()
		{
			return deleteCommand;
		}
		//----------------------------------------------------------------
		// Sub BuildUpdateCommand:
		//   Initialize the parameterized Update command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetUpdateCommand()
		{
			return updateCommand;
		}
		protected override string TableName
		{
			get 
			{
				return "ReportRequestBatch_OrderEntryFollowupReport";
			}
		}

		public void SelectOne(DataTable table, int customerOrderHeaderInstance)
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.pr_ReportRequestBatch_OrderEntryFollowupReport_SelectOne";
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			cmdToExecute.Parameters.Add(new SqlParameter(PARAM_CUSTOMERORDERHEADERINSTANCE, SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerOrderHeaderInstance));
			Select(cmdToExecute,table);
		}

        public void Requeue(int orderID)
        {
            SqlCommand cmdToExecute = new SqlCommand();
            cmdToExecute.CommandText = "dbo.pr_ins_ReportRequestBatch_OrderEntryFollowup_Requeue";
            cmdToExecute.CommandType = CommandType.StoredProcedure;
            cmdToExecute.Parameters.Add(new SqlParameter(PARAM_ORDERID, SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, orderID));
            ExecuteCmd(cmdToExecute);
        }
	}
}
