///////////////////////////////////////////////////////////////////////////
// Description: Data Access class for the table 'Phone'
// Generated by LLBLGen v1.2.1655.16789 Final
// on: Tuesday, September 07, 2004, 10:20:34 AM
// Because the Base Class already implements IDispose, this class doesn't.
///////////////////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;


namespace QSPFulfillment.DataAccess.Data
{
	/// <summary>
	/// Purpose: Data Access class for the table 'Phone'.
	/// </summary>
	public class FulfillmentHouseContactData : QSPFulfillment.DataAccess.Data.DBTableOperation
	{
		#region Class Member Declarations
		//

		// DataSetCommand object

		//

		private SqlCommand insertCommand;

		private SqlCommand deleteCommand;

		private SqlCommand updateCommand;

		#endregion


		/// <summary>
		/// Purpose: Class constructor.
		/// </summary>
		public FulfillmentHouseContactData()
		{
			// Nothing for now.
		}
		//----------------------------------------------------------------
		// Sub GetInsertCommand:
		//   Initialize the parameterized Insert command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetInsertCommand()
		{
			if ( insertCommand == null )
			{
				insertCommand = null;
			}
			return insertCommand;
		}
		//----------------------------------------------------------------
		// Sub BuildUpdateCommand:
		//   Initialize the parameterized Update command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetDeleteCommand()
		{
			if ( deleteCommand == null )
			{
				deleteCommand = null;
			}
			return deleteCommand;
		}
		//----------------------------------------------------------------
		// Sub BuildUpdateCommand:
		//   Initialize the parameterized Update command for the DataAdapter
		//----------------------------------------------------------------
		protected override SqlCommand GetUpdateCommand()
		{
			if ( updateCommand == null )
			{
				updateCommand = null;
			}
			return updateCommand;
		}
		protected override string TableName
		{
			get
			{
				return "QSPCanadaProduct.dbo.Fulfillment_House_Contacts";
			}
		}

		/// <summary>
		/// Purpose: SelectAll method. This method will Select all rows from the table.
		/// </summary>
		/// <returns>DataTable object if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// </remarks>
		public void SelectAll(DataTable table)		
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "QSPCanadaProduct.dbo.pr_SelectAllFulfillmentHouseContacts";
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			Select(cmdToExecute, table);
		}

		public void SelectAllByFulfillmentHouseID(DataTable table, int fulfillmentHouseID)
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "QSPCanadaProduct.dbo.pr_SelectAllFulfillmentHouseContacts";
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			cmdToExecute.Parameters.Add(new SqlParameter("@iFulfillmentHouseID", SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, fulfillmentHouseID));
			Select(cmdToExecute, table);
		}

		public int Insert(int fulfillmentHouseID, string contactFirstName, string contactLastName, string positionTitle, string email, string workPhone, string fax, string customerServiceContactFirstName, string customerServiceContactLastName, string customerServiceContactEmail, string customerServiceContactPhone)
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "QSPCanadaProduct.dbo.pr_InsertFulfillmentHouseContact";
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			cmdToExecute.Parameters.Add(new SqlParameter("@iFulfillmentHouseID", SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, fulfillmentHouseID));
			cmdToExecute.Parameters.Add(new SqlParameter("@zContactFirstName", SqlDbType.VarChar, 30, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, contactFirstName));
			cmdToExecute.Parameters.Add(new SqlParameter("@zContactLastName", SqlDbType.VarChar, 30, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, contactLastName));
			cmdToExecute.Parameters.Add(new SqlParameter("@zPosition", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, positionTitle));
			cmdToExecute.Parameters.Add(new SqlParameter("@zEmail", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, email));
			cmdToExecute.Parameters.Add(new SqlParameter("@zWorkPhone", SqlDbType.VarChar, 20, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, workPhone));
			cmdToExecute.Parameters.Add(new SqlParameter("@zFax", SqlDbType.VarChar, 20, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, fax));
			cmdToExecute.Parameters.Add(new SqlParameter("@zCustomerServiceContactFirstName", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerServiceContactFirstName));
			cmdToExecute.Parameters.Add(new SqlParameter("@zCustomerServiceContactLastName", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerServiceContactLastName));
			cmdToExecute.Parameters.Add(new SqlParameter("@zCustomerServiceContactEmail", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerServiceContactEmail));
			cmdToExecute.Parameters.Add(new SqlParameter("@zCustomerServiceContactPhone", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerServiceContactPhone));
			return Convert.ToInt32(ExecuteScalar(cmdToExecute));
		}

		public int Update(int fulfillmentHouseContactID, string contactFirstName, string contactLastName, string positionTitle, string email, string workPhone, string fax, string customerServiceContactFirstName, string customerServiceContactLastName, string customerServiceContactEmail, string customerServiceContactPhone)
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "QSPCanadaProduct.dbo.pr_UpdateFulfillmentHouseContact";
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			cmdToExecute.Parameters.Add(new SqlParameter("@iFulfillmentHouseContactID", SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, fulfillmentHouseContactID));
			cmdToExecute.Parameters.Add(new SqlParameter("@zContactFirstName", SqlDbType.VarChar, 30, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, contactFirstName));
			cmdToExecute.Parameters.Add(new SqlParameter("@zContactLastName", SqlDbType.VarChar, 30, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, contactLastName));
			cmdToExecute.Parameters.Add(new SqlParameter("@zPosition", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, positionTitle));
			cmdToExecute.Parameters.Add(new SqlParameter("@zEmail", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, email));
			cmdToExecute.Parameters.Add(new SqlParameter("@zWorkPhone", SqlDbType.VarChar, 20, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, workPhone));
			cmdToExecute.Parameters.Add(new SqlParameter("@zFax", SqlDbType.VarChar, 20, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, fax));
			cmdToExecute.Parameters.Add(new SqlParameter("@zCustomerServiceContactFirstName", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerServiceContactFirstName));
			cmdToExecute.Parameters.Add(new SqlParameter("@zCustomerServiceContactLastName", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerServiceContactLastName));
			cmdToExecute.Parameters.Add(new SqlParameter("@zCustomerServiceContactEmail", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerServiceContactEmail));
			cmdToExecute.Parameters.Add(new SqlParameter("@zCustomerServiceContactPhone", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, customerServiceContactPhone));
			return ExecuteCmd(cmdToExecute);
		}

		public void Delete(int fulfillmentHouseContactID)
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "QSPCanadaProduct.dbo.pr_DeleteFulfillmentHouseContact";
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			cmdToExecute.Parameters.Add(new SqlParameter("@iFulfillmentHouseContactID", SqlDbType.Int, 4, ParameterDirection.Input, false, 10, 0, "", DataRowVersion.Proposed, fulfillmentHouseContactID));
			ExecuteCmd(cmdToExecute);
		}
	}
}
