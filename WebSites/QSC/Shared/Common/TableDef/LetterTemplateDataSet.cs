//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: LetterTemplateDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class LetterTemplateDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableLetterTemplate
        /// </summary>
        protected LetterTemplateDataTable tableLetterTemplate;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public LetterTemplateDataSet() {
            this.tableLetterTemplate = this.CreateLetterTemplateDataTable();
            this.Tables.Add(this.tableLetterTemplate);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected LetterTemplateDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["LetterTemplate"] != null)) {
                    this.Tables.Add(this.CreateLetterTemplateDataTable(ds.Tables["LetterTemplate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: LetterTemplate
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual LetterTemplateDataTable LetterTemplate {
            get {
                return this.tableLetterTemplate;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            LetterTemplateDataSet cln = ((LetterTemplateDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["LetterTemplate"] != null)) {
                this.Tables.Add(this.CreateLetterTemplateDataTable(ds.Tables["LetterTemplate"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableLetterTemplate = ((LetterTemplateDataTable)(this.Tables["LetterTemplate"]));
            if ((this.tableLetterTemplate != null)) {
                this.tableLetterTemplate.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "LetterTemplateDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LetterTemplateDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableLetterTemplate = this.CreateLetterTemplateDataTable();
            this.Tables.Add(this.tableLetterTemplate);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeLetterTemplate
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeLetterTemplate
        /// </summary>
        protected virtual bool ShouldSerializeLetterTemplate() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterTemplateDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterTemplateDataTable
        /// </summary>
        protected virtual LetterTemplateDataTable CreateLetterTemplateDataTable() {
            return new LetterTemplateDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterTemplateDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterTemplateDataTable
        /// </summary>
        protected virtual LetterTemplateDataTable CreateLetterTemplateDataTable(DataTable table) {
            return new LetterTemplateDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: LetterTemplateRowChangeEventHandler
        /// </summary>
        public delegate void LetterTemplateRowChangeEventHandler(object sender, LetterTemplateRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: LetterTemplateDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterTemplateDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnName
            /// </summary>
            protected DataColumn columnName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDescription
            /// </summary>
            protected DataColumn columnDescription;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnStatus
            /// </summary>
            protected DataColumn columnStatus;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnReportName
            /// </summary>
            protected DataColumn columnReportName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnViewName
            /// </summary>
            protected DataColumn columnViewName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnExtendedTable
            /// </summary>
            protected DataColumn columnExtendedTable;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterTemplateDataTable() : 
                    base("LetterTemplate") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterTemplateDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NameColumn
            /// </summary>
            public virtual DataColumnExtended NameColumn {
                get {
                    return ((DataColumnExtended)(this.columnName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DescriptionColumn
            /// </summary>
            public virtual DataColumnExtended DescriptionColumn {
                get {
                    return ((DataColumnExtended)(this.columnDescription));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusColumn
            /// </summary>
            public virtual DataColumnExtended StatusColumn {
                get {
                    return ((DataColumnExtended)(this.columnStatus));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ReportNameColumn
            /// </summary>
            public virtual DataColumnExtended ReportNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnReportName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ViewNameColumn
            /// </summary>
            public virtual DataColumnExtended ViewNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnViewName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ExtendedTableColumn
            /// </summary>
            public virtual DataColumnExtended ExtendedTableColumn {
                get {
                    return ((DataColumnExtended)(this.columnExtendedTable));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual LetterTemplateRow this[int index] {
                get {
                    return ((LetterTemplateRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterTemplateRowChanged
            /// </summary>
            public event LetterTemplateRowChangeEventHandler LetterTemplateRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterTemplateRowChanging
            /// </summary>
            public event LetterTemplateRowChangeEventHandler LetterTemplateRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterTemplateRowDeleted
            /// </summary>
            public event LetterTemplateRowChangeEventHandler LetterTemplateRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterTemplateRowDeleting
            /// </summary>
            public event LetterTemplateRowChangeEventHandler LetterTemplateRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterTemplateRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterTemplateRow
            /// </summary>
            public virtual void AddLetterTemplateRow(LetterTemplateRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterTemplateRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterTemplateRow
            /// </summary>
            public virtual LetterTemplateRow AddLetterTemplateRow(string Name, string Description, int Status, string ReportName, string ViewName, string ExtendedTable) {
                LetterTemplateRow rowLetterTemplateRow = ((LetterTemplateRow)(this.NewRow()));
                rowLetterTemplateRow.ItemArray = new object[] {
                        null,
                        Name,
                        Description,
                        Status,
                        ReportName,
                        ViewName,
                        ExtendedTable};
                this.Rows.Add(rowLetterTemplateRow);
                return rowLetterTemplateRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual LetterTemplateRow FindByID(int ID) {
                return ((LetterTemplateRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                LetterTemplateDataTable cln = ((LetterTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new LetterTemplateDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnName = this.Columns["Name"];
                this.columnDescription = this.Columns["Description"];
                this.columnStatus = this.Columns["Status"];
                this.columnReportName = this.Columns["ReportName"];
                this.columnViewName = this.Columns["ViewName"];
                this.columnExtendedTable = this.Columns["ExtendedTable"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnID = new DataColumnExtended("ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnName = new DataColumnExtended("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnDescription = new DataColumnExtended("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnStatus = new DataColumnExtended("Status", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnReportName = new DataColumnExtended("ReportName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportName);
                this.columnViewName = new DataColumnExtended("ViewName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnViewName);
                this.columnExtendedTable = new DataColumnExtended("ExtendedTable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExtendedTable);
                this.Constraints.Add(new UniqueConstraint("LetterTemplateDataSetKey2", new DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnReportName.AllowDBNull = false;
                this.columnViewName.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewLetterTemplateRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewLetterTemplateRow
            /// </summary>
            public virtual LetterTemplateRow NewLetterTemplateRow() {
                return ((LetterTemplateRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new LetterTemplateRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(LetterTemplateRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LetterTemplateRowChanged != null)) {
                    this.LetterTemplateRowChanged(this, new LetterTemplateRowChangeEvent(((LetterTemplateRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LetterTemplateRowChanging != null)) {
                    this.LetterTemplateRowChanging(this, new LetterTemplateRowChangeEvent(((LetterTemplateRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LetterTemplateRowDeleted != null)) {
                    this.LetterTemplateRowDeleted(this, new LetterTemplateRowChangeEvent(((LetterTemplateRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LetterTemplateRowDeleting != null)) {
                    this.LetterTemplateRowDeleting(this, new LetterTemplateRowChangeEvent(((LetterTemplateRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveLetterTemplateRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveLetterTemplateRow
            /// </summary>
            public virtual void RemoveLetterTemplateRow(LetterTemplateRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterTemplateRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableLetterTemplate
            /// </summary>
            private LetterTemplateDataTable tableLetterTemplate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal LetterTemplateRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableLetterTemplate = ((LetterTemplateDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int ID {
                get {
                    return ((int)(this[this.tableLetterTemplate.IDColumn]));
                }
                set {
                    this[this.tableLetterTemplate.IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Name
            /// </summary>
            public virtual string Name {
                get {
                    return ((string)(this[this.tableLetterTemplate.NameColumn]));
                }
                set {
                    this[this.tableLetterTemplate.NameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Description
            /// </summary>
            public virtual string Description {
                get {
                    try {
                        return ((string)(this[this.tableLetterTemplate.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterTemplate.DescriptionColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Status
            /// </summary>
            public virtual int Status {
                get {
                    return ((int)(this[this.tableLetterTemplate.StatusColumn]));
                }
                set {
                    this[this.tableLetterTemplate.StatusColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ReportName
            /// </summary>
            public virtual string ReportName {
                get {
                    return ((string)(this[this.tableLetterTemplate.ReportNameColumn]));
                }
                set {
                    this[this.tableLetterTemplate.ReportNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ViewName
            /// </summary>
            public virtual string ViewName {
                get {
                    return ((string)(this[this.tableLetterTemplate.ViewNameColumn]));
                }
                set {
                    this[this.tableLetterTemplate.ViewNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ExtendedTable
            /// </summary>
            public virtual string ExtendedTable {
                get {
                    if (this.IsExtendedTableNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLetterTemplate.ExtendedTableColumn]));
                    }
                }
                set {
                    this[this.tableLetterTemplate.ExtendedTableColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDescriptionNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDescriptionNull
            /// </summary>
            public virtual bool IsDescriptionNull() {
                return this.IsNull(this.tableLetterTemplate.DescriptionColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDescriptionNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDescriptionNull
            /// </summary>
            public virtual void SetDescriptionNull() {
                this[this.tableLetterTemplate.DescriptionColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsExtendedTableNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsExtendedTableNull
            /// </summary>
            public virtual bool IsExtendedTableNull() {
                return this.IsNull(this.tableLetterTemplate.ExtendedTableColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetExtendedTableNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetExtendedTableNull
            /// </summary>
            public virtual void SetExtendedTableNull() {
                this[this.tableLetterTemplate.ExtendedTableColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterTemplateRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private LetterTemplateRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterTemplateRowChangeEvent(LetterTemplateRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual LetterTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
