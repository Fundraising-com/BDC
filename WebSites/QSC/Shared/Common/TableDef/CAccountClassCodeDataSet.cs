//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: CAccountClassCodeDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class CAccountClassCodeDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableCAccountClass
        /// </summary>
        protected CAccountClassDataTable tableCAccountClass;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableCAccountCode
        /// </summary>
        protected CAccountCodeDataTable tableCAccountCode;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: relationCAccountClassCAccountCode
        /// </summary>
        protected DataRelation relationCAccountClassCAccountCode;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public CAccountClassCodeDataSet() {
            this.tableCAccountClass = this.CreateCAccountClassDataTable();
            this.Tables.Add(this.tableCAccountClass);
            this.tableCAccountCode = this.CreateCAccountCodeDataTable();
            this.Tables.Add(this.tableCAccountCode);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected CAccountClassCodeDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["CAccountClass"] != null)) {
                    this.Tables.Add(this.CreateCAccountClassDataTable(ds.Tables["CAccountClass"]));
                }
                if ((ds.Tables["CAccountCode"] != null)) {
                    this.Tables.Add(this.CreateCAccountCodeDataTable(ds.Tables["CAccountCode"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: CAccountClass
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual CAccountClassDataTable CAccountClass {
            get {
                return this.tableCAccountClass;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: CAccountCode
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual CAccountCodeDataTable CAccountCode {
            get {
                return this.tableCAccountCode;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            CAccountClassCodeDataSet cln = ((CAccountClassCodeDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["CAccountClass"] != null)) {
                this.Tables.Add(this.CreateCAccountClassDataTable(ds.Tables["CAccountClass"]));
            }
            if ((ds.Tables["CAccountCode"] != null)) {
                this.Tables.Add(this.CreateCAccountCodeDataTable(ds.Tables["CAccountCode"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableCAccountClass = ((CAccountClassDataTable)(this.Tables["CAccountClass"]));
            if ((this.tableCAccountClass != null)) {
                this.tableCAccountClass.InitVars();
            }
            this.tableCAccountCode = ((CAccountCodeDataTable)(this.Tables["CAccountCode"]));
            if ((this.tableCAccountCode != null)) {
                this.tableCAccountCode.InitVars();
            }
            this.relationCAccountClassCAccountCode = this.Relations["CAccountClassCAccountCode"];
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "CAccountClassCodeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CAccountClassCodeDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableCAccountClass = this.CreateCAccountClassDataTable();
            this.Tables.Add(this.tableCAccountClass);
            this.tableCAccountCode = this.CreateCAccountCodeDataTable();
            this.Tables.Add(this.tableCAccountCode);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("CAccountClassCAccountCode", new DataColumn[] {
                        this.tableCAccountClass.AccountClassColumn}, new DataColumn[] {
                        this.tableCAccountCode.ClassColumn});
            this.tableCAccountCode.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationCAccountClassCAccountCode = new DataRelation("CAccountClassCAccountCode", new DataColumn[] {
                        this.tableCAccountClass.AccountClassColumn}, new DataColumn[] {
                        this.tableCAccountCode.ClassColumn}, false);
            this.Relations.Add(this.relationCAccountClassCAccountCode);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeCAccountClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeCAccountClass
        /// </summary>
        protected virtual bool ShouldSerializeCAccountClass() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeCAccountCode
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeCAccountCode
        /// </summary>
        protected virtual bool ShouldSerializeCAccountCode() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountClassDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountClassDataTable
        /// </summary>
        protected virtual CAccountClassDataTable CreateCAccountClassDataTable() {
            return new CAccountClassDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountClassDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountClassDataTable
        /// </summary>
        protected virtual CAccountClassDataTable CreateCAccountClassDataTable(DataTable table) {
            return new CAccountClassDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountCodeDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountCodeDataTable
        /// </summary>
        protected virtual CAccountCodeDataTable CreateCAccountCodeDataTable() {
            return new CAccountCodeDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountCodeDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountCodeDataTable
        /// </summary>
        protected virtual CAccountCodeDataTable CreateCAccountCodeDataTable(DataTable table) {
            return new CAccountCodeDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: CAccountClassRowChangeEventHandler
        /// </summary>
        public delegate void CAccountClassRowChangeEventHandler(object sender, CAccountClassRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: CAccountCodeRowChangeEventHandler
        /// </summary>
        public delegate void CAccountCodeRowChangeEventHandler(object sender, CAccountCodeRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: CAccountClassDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountClassDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnId
            /// </summary>
            protected DataColumn columnId;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnAccountClass
            /// </summary>
            protected DataColumn columnAccountClass;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnName
            /// </summary>
            protected DataColumn columnName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountClassDataTable() : 
                    base("CAccountClass") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountClassDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IdColumn
            /// </summary>
            public virtual DataColumnExtended IdColumn {
                get {
                    return ((DataColumnExtended)(this.columnId));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AccountClassColumn
            /// </summary>
            public virtual DataColumnExtended AccountClassColumn {
                get {
                    return ((DataColumnExtended)(this.columnAccountClass));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NameColumn
            /// </summary>
            public virtual DataColumnExtended NameColumn {
                get {
                    return ((DataColumnExtended)(this.columnName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual CAccountClassRow this[int index] {
                get {
                    return ((CAccountClassRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountClassRowChanged
            /// </summary>
            public event CAccountClassRowChangeEventHandler CAccountClassRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountClassRowChanging
            /// </summary>
            public event CAccountClassRowChangeEventHandler CAccountClassRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountClassRowDeleted
            /// </summary>
            public event CAccountClassRowChangeEventHandler CAccountClassRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountClassRowDeleting
            /// </summary>
            public event CAccountClassRowChangeEventHandler CAccountClassRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountClassRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountClassRow
            /// </summary>
            public virtual void AddCAccountClassRow(CAccountClassRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountClassRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountClassRow
            /// </summary>
            public virtual CAccountClassRow AddCAccountClassRow(string AccountClass, string Name) {
                CAccountClassRow rowCAccountClassRow = ((CAccountClassRow)(this.NewRow()));
                rowCAccountClassRow.ItemArray = new object[] {
                        null,
                        AccountClass,
                        Name};
                this.Rows.Add(rowCAccountClassRow);
                return rowCAccountClassRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindById
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindById
            /// </summary>
            public virtual CAccountClassRow FindById(int Id) {
                return ((CAccountClassRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                CAccountClassDataTable cln = ((CAccountClassDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new CAccountClassDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnId = this.Columns["Id"];
                this.columnAccountClass = this.Columns["AccountClass"];
                this.columnName = this.Columns["Name"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnId = new DataColumnExtended("Id", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnId);
                this.columnAccountClass = new DataColumnExtended("AccountClass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccountClass);
                this.columnName = new DataColumnExtended("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.Constraints.Add(new UniqueConstraint("CAccountClassCodeDataSetKey1", new DataColumn[] {
                                this.columnId}, true));
                this.Constraints.Add(new UniqueConstraint("CAccountClassCodeDataSetKey3", new DataColumn[] {
                                this.columnAccountClass}, false));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnAccountClass.AllowDBNull = false;
                this.columnAccountClass.Unique = true;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewCAccountClassRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewCAccountClassRow
            /// </summary>
            public virtual CAccountClassRow NewCAccountClassRow() {
                return ((CAccountClassRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CAccountClassRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(CAccountClassRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAccountClassRowChanged != null)) {
                    this.CAccountClassRowChanged(this, new CAccountClassRowChangeEvent(((CAccountClassRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAccountClassRowChanging != null)) {
                    this.CAccountClassRowChanging(this, new CAccountClassRowChangeEvent(((CAccountClassRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAccountClassRowDeleted != null)) {
                    this.CAccountClassRowDeleted(this, new CAccountClassRowChangeEvent(((CAccountClassRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAccountClassRowDeleting != null)) {
                    this.CAccountClassRowDeleting(this, new CAccountClassRowChangeEvent(((CAccountClassRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveCAccountClassRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveCAccountClassRow
            /// </summary>
            public virtual void RemoveCAccountClassRow(CAccountClassRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountClassRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableCAccountClass
            /// </summary>
            private CAccountClassDataTable tableCAccountClass;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal CAccountClassRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAccountClass = ((CAccountClassDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Id
            /// </summary>
            public virtual int Id {
                get {
                    return ((int)(this[this.tableCAccountClass.IdColumn]));
                }
                set {
                    this[this.tableCAccountClass.IdColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AccountClass
            /// </summary>
            public virtual string AccountClass {
                get {
                    return ((string)(this[this.tableCAccountClass.AccountClassColumn]));
                }
                set {
                    this[this.tableCAccountClass.AccountClassColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Name
            /// </summary>
            public virtual string Name {
                get {
                    try {
                        return ((string)(this[this.tableCAccountClass.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAccountClass.NameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            public virtual bool IsNameNull() {
                return this.IsNull(this.tableCAccountClass.NameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            public virtual void SetNameNull() {
                this[this.tableCAccountClass.NameColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetCAccountCodeRows
            /// </summary>
            public virtual CAccountCodeRow[] GetCAccountCodeRows() {
                return ((CAccountCodeRow[])(this.GetChildRows(this.Table.ChildRelations["CAccountClassCAccountCode"])));
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountClassRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private CAccountClassRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountClassRowChangeEvent(CAccountClassRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual CAccountClassRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: CAccountCodeDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountCodeDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnId
            /// </summary>
            protected DataColumn columnId;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnClass
            /// </summary>
            protected DataColumn columnClass;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnAccountCode
            /// </summary>
            protected DataColumn columnAccountCode;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnName
            /// </summary>
            protected DataColumn columnName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountCodeDataTable() : 
                    base("CAccountCode") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountCodeDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IdColumn
            /// </summary>
            public virtual DataColumnExtended IdColumn {
                get {
                    return ((DataColumnExtended)(this.columnId));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ClassColumn
            /// </summary>
            public virtual DataColumnExtended ClassColumn {
                get {
                    return ((DataColumnExtended)(this.columnClass));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AccountCodeColumn
            /// </summary>
            public virtual DataColumnExtended AccountCodeColumn {
                get {
                    return ((DataColumnExtended)(this.columnAccountCode));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NameColumn
            /// </summary>
            public virtual DataColumnExtended NameColumn {
                get {
                    return ((DataColumnExtended)(this.columnName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual CAccountCodeRow this[int index] {
                get {
                    return ((CAccountCodeRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountCodeRowChanged
            /// </summary>
            public event CAccountCodeRowChangeEventHandler CAccountCodeRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountCodeRowChanging
            /// </summary>
            public event CAccountCodeRowChangeEventHandler CAccountCodeRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountCodeRowDeleted
            /// </summary>
            public event CAccountCodeRowChangeEventHandler CAccountCodeRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountCodeRowDeleting
            /// </summary>
            public event CAccountCodeRowChangeEventHandler CAccountCodeRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountCodeRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountCodeRow
            /// </summary>
            public virtual void AddCAccountCodeRow(CAccountCodeRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountCodeRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountCodeRow
            /// </summary>
            public virtual CAccountCodeRow AddCAccountCodeRow(CAccountClassRow parentCAccountClassRowByCAccountClassCAccountCode, string AccountCode, string Name) {
                CAccountCodeRow rowCAccountCodeRow = ((CAccountCodeRow)(this.NewRow()));
                rowCAccountCodeRow.ItemArray = new object[] {
                        null,
                        parentCAccountClassRowByCAccountClassCAccountCode[1],
                        AccountCode,
                        Name};
                this.Rows.Add(rowCAccountCodeRow);
                return rowCAccountCodeRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByClassAccountCode
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByClassAccountCode
            /// </summary>
            public virtual CAccountCodeRow FindByClassAccountCode(string Class, string AccountCode) {
                return ((CAccountCodeRow)(this.Rows.Find(new object[] {
                            Class,
                            AccountCode})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                CAccountCodeDataTable cln = ((CAccountCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new CAccountCodeDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnId = this.Columns["Id"];
                this.columnClass = this.Columns["Class"];
                this.columnAccountCode = this.Columns["AccountCode"];
                this.columnName = this.Columns["Name"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnId = new DataColumnExtended("Id", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnId);
                this.columnClass = new DataColumnExtended("Class", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClass);
                this.columnAccountCode = new DataColumnExtended("AccountCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccountCode);
                this.columnName = new DataColumnExtended("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.Constraints.Add(new UniqueConstraint("CAccountClassCodeDataSetKey2", new DataColumn[] {
                                this.columnClass,
                                this.columnAccountCode}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnClass.AllowDBNull = false;
                this.columnAccountCode.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewCAccountCodeRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewCAccountCodeRow
            /// </summary>
            public virtual CAccountCodeRow NewCAccountCodeRow() {
                return ((CAccountCodeRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CAccountCodeRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(CAccountCodeRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAccountCodeRowChanged != null)) {
                    this.CAccountCodeRowChanged(this, new CAccountCodeRowChangeEvent(((CAccountCodeRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAccountCodeRowChanging != null)) {
                    this.CAccountCodeRowChanging(this, new CAccountCodeRowChangeEvent(((CAccountCodeRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAccountCodeRowDeleted != null)) {
                    this.CAccountCodeRowDeleted(this, new CAccountCodeRowChangeEvent(((CAccountCodeRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAccountCodeRowDeleting != null)) {
                    this.CAccountCodeRowDeleting(this, new CAccountCodeRowChangeEvent(((CAccountCodeRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveCAccountCodeRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveCAccountCodeRow
            /// </summary>
            public virtual void RemoveCAccountCodeRow(CAccountCodeRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountCodeRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableCAccountCode
            /// </summary>
            private CAccountCodeDataTable tableCAccountCode;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal CAccountCodeRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAccountCode = ((CAccountCodeDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Id
            /// </summary>
            public virtual int Id {
                get {
                    return ((int)(this[this.tableCAccountCode.IdColumn]));
                }
                set {
                    this[this.tableCAccountCode.IdColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Class
            /// </summary>
            public virtual string Class {
                get {
                    return ((string)(this[this.tableCAccountCode.ClassColumn]));
                }
                set {
                    this[this.tableCAccountCode.ClassColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AccountCode
            /// </summary>
            public virtual string AccountCode {
                get {
                    return ((string)(this[this.tableCAccountCode.AccountCodeColumn]));
                }
                set {
                    this[this.tableCAccountCode.AccountCodeColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Name
            /// </summary>
            public virtual string Name {
                get {
                    try {
                        return ((string)(this[this.tableCAccountCode.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAccountCode.NameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CAccountClassRow
            /// </summary>
            public virtual CAccountClassRow CAccountClassRow {
                get {
                    return ((CAccountClassRow)(this.GetParentRow(this.Table.ParentRelations["CAccountClassCAccountCode"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CAccountClassCAccountCode"]);
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            public virtual bool IsNameNull() {
                return this.IsNull(this.tableCAccountCode.NameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            public virtual void SetNameNull() {
                this[this.tableCAccountCode.NameColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountCodeRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private CAccountCodeRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountCodeRowChangeEvent(CAccountCodeRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual CAccountCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
