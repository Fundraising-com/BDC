//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: AccountCampaignListDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class AccountCampaignListDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableCAccount
        /// </summary>
        protected CAccountDataTable tableCAccount;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableCampaign
        /// </summary>
        protected CampaignDataTable tableCampaign;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: relationCAccountCampaign
        /// </summary>
        protected DataRelation relationCAccountCampaign;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public AccountCampaignListDataSet() {
            this.tableCAccount = this.CreateCAccountDataTable();
            this.Tables.Add(this.tableCAccount);
            this.tableCampaign = this.CreateCampaignDataTable();
            this.Tables.Add(this.tableCampaign);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected AccountCampaignListDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["CAccount"] != null)) {
                    this.Tables.Add(this.CreateCAccountDataTable(ds.Tables["CAccount"]));
                }
                if ((ds.Tables["Campaign"] != null)) {
                    this.Tables.Add(this.CreateCampaignDataTable(ds.Tables["Campaign"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: CAccount
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual CAccountDataTable CAccount {
            get {
                return this.tableCAccount;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: Campaign
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual CampaignDataTable Campaign {
            get {
                return this.tableCampaign;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            AccountCampaignListDataSet cln = ((AccountCampaignListDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["CAccount"] != null)) {
                this.Tables.Add(this.CreateCAccountDataTable(ds.Tables["CAccount"]));
            }
            if ((ds.Tables["Campaign"] != null)) {
                this.Tables.Add(this.CreateCampaignDataTable(ds.Tables["Campaign"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableCAccount = ((CAccountDataTable)(this.Tables["CAccount"]));
            if ((this.tableCAccount != null)) {
                this.tableCAccount.InitVars();
            }
            this.tableCampaign = ((CampaignDataTable)(this.Tables["Campaign"]));
            if ((this.tableCampaign != null)) {
                this.tableCampaign.InitVars();
            }
            this.relationCAccountCampaign = this.Relations["CAccountCampaign"];
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "AccountCampaignListDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AccountCampaignListDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableCAccount = this.CreateCAccountDataTable();
            this.Tables.Add(this.tableCAccount);
            this.tableCampaign = this.CreateCampaignDataTable();
            this.Tables.Add(this.tableCampaign);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("CAccountCampaign", new DataColumn[] {
                        this.tableCAccount.IDColumn}, new DataColumn[] {
                        this.tableCampaign.BillToAccountIDColumn});
            this.tableCampaign.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationCAccountCampaign = new DataRelation("CAccountCampaign", new DataColumn[] {
                        this.tableCAccount.IDColumn}, new DataColumn[] {
                        this.tableCampaign.BillToAccountIDColumn}, false);
            this.Relations.Add(this.relationCAccountCampaign);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeCAccount
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeCAccount
        /// </summary>
        protected virtual bool ShouldSerializeCAccount() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeCampaign
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeCampaign
        /// </summary>
        protected virtual bool ShouldSerializeCampaign() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountDataTable
        /// </summary>
        protected virtual CAccountDataTable CreateCAccountDataTable() {
            return new CAccountDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCAccountDataTable
        /// </summary>
        protected virtual CAccountDataTable CreateCAccountDataTable(DataTable table) {
            return new CAccountDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCampaignDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCampaignDataTable
        /// </summary>
        protected virtual CampaignDataTable CreateCampaignDataTable() {
            return new CampaignDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCampaignDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateCampaignDataTable
        /// </summary>
        protected virtual CampaignDataTable CreateCampaignDataTable(DataTable table) {
            return new CampaignDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: CAccountRowChangeEventHandler
        /// </summary>
        public delegate void CAccountRowChangeEventHandler(object sender, CAccountRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: CampaignRowChangeEventHandler
        /// </summary>
        public delegate void CampaignRowChangeEventHandler(object sender, CampaignRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: CAccountDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnName
            /// </summary>
            protected DataColumn columnName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCity
            /// </summary>
            protected DataColumn columnCity;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnState
            /// </summary>
            protected DataColumn columnState;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnSponsor
            /// </summary>
            protected DataColumn columnSponsor;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnPhone
            /// </summary>
            protected DataColumn columnPhone;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountDataTable() : 
                    base("CAccount") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NameColumn
            /// </summary>
            public virtual DataColumnExtended NameColumn {
                get {
                    return ((DataColumnExtended)(this.columnName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CityColumn
            /// </summary>
            public virtual DataColumnExtended CityColumn {
                get {
                    return ((DataColumnExtended)(this.columnCity));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StateColumn
            /// </summary>
            public virtual DataColumnExtended StateColumn {
                get {
                    return ((DataColumnExtended)(this.columnState));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: SponsorColumn
            /// </summary>
            public virtual DataColumnExtended SponsorColumn {
                get {
                    return ((DataColumnExtended)(this.columnSponsor));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PhoneColumn
            /// </summary>
            public virtual DataColumnExtended PhoneColumn {
                get {
                    return ((DataColumnExtended)(this.columnPhone));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual CAccountRow this[int index] {
                get {
                    return ((CAccountRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountRowChanged
            /// </summary>
            public event CAccountRowChangeEventHandler CAccountRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountRowChanging
            /// </summary>
            public event CAccountRowChangeEventHandler CAccountRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountRowDeleted
            /// </summary>
            public event CAccountRowChangeEventHandler CAccountRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CAccountRowDeleting
            /// </summary>
            public event CAccountRowChangeEventHandler CAccountRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountRow
            /// </summary>
            public virtual void AddCAccountRow(CAccountRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCAccountRow
            /// </summary>
            public virtual CAccountRow AddCAccountRow(int ID, string Name, string City, string State, string Sponsor, string Phone) {
                CAccountRow rowCAccountRow = ((CAccountRow)(this.NewRow()));
                rowCAccountRow.ItemArray = new object[] {
                        ID,
                        Name,
                        City,
                        State,
                        Sponsor,
                        Phone};
                this.Rows.Add(rowCAccountRow);
                return rowCAccountRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual CAccountRow FindByID(int ID) {
                return ((CAccountRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                CAccountDataTable cln = ((CAccountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new CAccountDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnName = this.Columns["Name"];
                this.columnCity = this.Columns["City"];
                this.columnState = this.Columns["State"];
                this.columnSponsor = this.Columns["Sponsor"];
                this.columnPhone = this.Columns["Phone"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnID = new DataColumnExtended("ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnName = new DataColumnExtended("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnCity = new DataColumnExtended("City", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCity);
                this.columnState = new DataColumnExtended("State", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnState);
                this.columnSponsor = new DataColumnExtended("Sponsor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSponsor);
                this.columnPhone = new DataColumnExtended("Phone", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhone);
                this.Constraints.Add(new UniqueConstraint("AccountCampaignListDataSetKey1", new DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewCAccountRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewCAccountRow
            /// </summary>
            public virtual CAccountRow NewCAccountRow() {
                return ((CAccountRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CAccountRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(CAccountRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAccountRowChanged != null)) {
                    this.CAccountRowChanged(this, new CAccountRowChangeEvent(((CAccountRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAccountRowChanging != null)) {
                    this.CAccountRowChanging(this, new CAccountRowChangeEvent(((CAccountRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAccountRowDeleted != null)) {
                    this.CAccountRowDeleted(this, new CAccountRowChangeEvent(((CAccountRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAccountRowDeleting != null)) {
                    this.CAccountRowDeleting(this, new CAccountRowChangeEvent(((CAccountRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveCAccountRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveCAccountRow
            /// </summary>
            public virtual void RemoveCAccountRow(CAccountRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableCAccount
            /// </summary>
            private CAccountDataTable tableCAccount;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal CAccountRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAccount = ((CAccountDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int ID {
                get {
                    return ((int)(this[this.tableCAccount.IDColumn]));
                }
                set {
                    this[this.tableCAccount.IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Name
            /// </summary>
            public virtual string Name {
                get {
                    if (this.IsNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCAccount.NameColumn]));
                    }
                }
                set {
                    this[this.tableCAccount.NameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: City
            /// </summary>
            public virtual string City {
                get {
                    if (this.IsCityNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCAccount.CityColumn]));
                    }
                }
                set {
                    this[this.tableCAccount.CityColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: State
            /// </summary>
            public virtual string State {
                get {
                    if (this.IsStateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCAccount.StateColumn]));
                    }
                }
                set {
                    this[this.tableCAccount.StateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Sponsor
            /// </summary>
            public virtual string Sponsor {
                get {
                    if (this.IsSponsorNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCAccount.SponsorColumn]));
                    }
                }
                set {
                    this[this.tableCAccount.SponsorColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Phone
            /// </summary>
            public virtual string Phone {
                get {
                    if (this.IsPhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCAccount.PhoneColumn]));
                    }
                }
                set {
                    this[this.tableCAccount.PhoneColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            public virtual bool IsNameNull() {
                return this.IsNull(this.tableCAccount.NameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            public virtual void SetNameNull() {
                this[this.tableCAccount.NameColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCityNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCityNull
            /// </summary>
            public virtual bool IsCityNull() {
                return this.IsNull(this.tableCAccount.CityColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCityNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCityNull
            /// </summary>
            public virtual void SetCityNull() {
                this[this.tableCAccount.CityColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsStateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsStateNull
            /// </summary>
            public virtual bool IsStateNull() {
                return this.IsNull(this.tableCAccount.StateColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetStateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetStateNull
            /// </summary>
            public virtual void SetStateNull() {
                this[this.tableCAccount.StateColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsSponsorNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsSponsorNull
            /// </summary>
            public virtual bool IsSponsorNull() {
                return this.IsNull(this.tableCAccount.SponsorColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetSponsorNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetSponsorNull
            /// </summary>
            public virtual void SetSponsorNull() {
                this[this.tableCAccount.SponsorColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPhoneNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPhoneNull
            /// </summary>
            public virtual bool IsPhoneNull() {
                return this.IsNull(this.tableCAccount.PhoneColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPhoneNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPhoneNull
            /// </summary>
            public virtual void SetPhoneNull() {
                this[this.tableCAccount.PhoneColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetCampaignRows
            /// </summary>
            public virtual CampaignRow[] GetCampaignRows() {
                return ((CampaignRow[])(this.GetChildRows(this.Table.ChildRelations["CAccountCampaign"])));
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CAccountRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private CAccountRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CAccountRowChangeEvent(CAccountRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual CAccountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: CampaignDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CampaignDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCampaignID
            /// </summary>
            protected DataColumn columnCampaignID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnStartDate
            /// </summary>
            protected DataColumn columnStartDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnEndDate
            /// </summary>
            protected DataColumn columnEndDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnFMID
            /// </summary>
            protected DataColumn columnFMID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnStatus
            /// </summary>
            protected DataColumn columnStatus;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnStatusName
            /// </summary>
            protected DataColumn columnStatusName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLang
            /// </summary>
            protected DataColumn columnLang;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnPrograms
            /// </summary>
            protected DataColumn columnPrograms;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnMainOrderFulfilledDate
            /// </summary>
            protected DataColumn columnMainOrderFulfilledDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnSupplyFulfilledDate
            /// </summary>
            protected DataColumn columnSupplyFulfilledDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnBillToAccountID
            /// </summary>
            protected DataColumn columnBillToAccountID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CampaignDataTable() : 
                    base("Campaign") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CampaignDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CampaignIDColumn
            /// </summary>
            public virtual DataColumnExtended CampaignIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnCampaignID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StartDateColumn
            /// </summary>
            public virtual DataColumnExtended StartDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnStartDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: EndDateColumn
            /// </summary>
            public virtual DataColumnExtended EndDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnEndDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FMIDColumn
            /// </summary>
            public virtual DataColumnExtended FMIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnFMID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusColumn
            /// </summary>
            public virtual DataColumnExtended StatusColumn {
                get {
                    return ((DataColumnExtended)(this.columnStatus));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusNameColumn
            /// </summary>
            public virtual DataColumnExtended StatusNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnStatusName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LangColumn
            /// </summary>
            public virtual DataColumnExtended LangColumn {
                get {
                    return ((DataColumnExtended)(this.columnLang));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ProgramsColumn
            /// </summary>
            public virtual DataColumnExtended ProgramsColumn {
                get {
                    return ((DataColumnExtended)(this.columnPrograms));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MainOrderFulfilledDateColumn
            /// </summary>
            public virtual DataColumnExtended MainOrderFulfilledDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnMainOrderFulfilledDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: SupplyFulfilledDateColumn
            /// </summary>
            public virtual DataColumnExtended SupplyFulfilledDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnSupplyFulfilledDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: BillToAccountIDColumn
            /// </summary>
            public virtual DataColumnExtended BillToAccountIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnBillToAccountID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual CampaignRow this[int index] {
                get {
                    return ((CampaignRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CampaignRowChanged
            /// </summary>
            public event CampaignRowChangeEventHandler CampaignRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CampaignRowChanging
            /// </summary>
            public event CampaignRowChangeEventHandler CampaignRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CampaignRowDeleted
            /// </summary>
            public event CampaignRowChangeEventHandler CampaignRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: CampaignRowDeleting
            /// </summary>
            public event CampaignRowChangeEventHandler CampaignRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCampaignRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCampaignRow
            /// </summary>
            public virtual void AddCampaignRow(CampaignRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCampaignRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddCampaignRow
            /// </summary>
            public virtual CampaignRow AddCampaignRow(System.DateTime StartDate, System.DateTime EndDate, string FMID, int Status, string StatusName, string Lang, string Programs, System.DateTime MainOrderFulfilledDate, System.DateTime SupplyFulfilledDate, CAccountRow parentCAccountRowByCAccountCampaign) {
                CampaignRow rowCampaignRow = ((CampaignRow)(this.NewRow()));
                rowCampaignRow.ItemArray = new object[] {
                        null,
                        StartDate,
                        EndDate,
                        FMID,
                        Status,
                        StatusName,
                        Lang,
                        Programs,
                        MainOrderFulfilledDate,
                        SupplyFulfilledDate,
                        parentCAccountRowByCAccountCampaign[0]};
                this.Rows.Add(rowCampaignRow);
                return rowCampaignRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByCampaignID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByCampaignID
            /// </summary>
            public virtual CampaignRow FindByCampaignID(int CampaignID) {
                return ((CampaignRow)(this.Rows.Find(new object[] {
                            CampaignID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                CampaignDataTable cln = ((CampaignDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new CampaignDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnCampaignID = this.Columns["CampaignID"];
                this.columnStartDate = this.Columns["StartDate"];
                this.columnEndDate = this.Columns["EndDate"];
                this.columnFMID = this.Columns["FMID"];
                this.columnStatus = this.Columns["Status"];
                this.columnStatusName = this.Columns["StatusName"];
                this.columnLang = this.Columns["Lang"];
                this.columnPrograms = this.Columns["Programs"];
                this.columnMainOrderFulfilledDate = this.Columns["MainOrderFulfilledDate"];
                this.columnSupplyFulfilledDate = this.Columns["SupplyFulfilledDate"];
                this.columnBillToAccountID = this.Columns["BillToAccountID"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnCampaignID = new DataColumnExtended("CampaignID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampaignID);
                this.columnStartDate = new DataColumnExtended("StartDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStartDate);
                this.columnEndDate = new DataColumnExtended("EndDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEndDate);
                this.columnFMID = new DataColumnExtended("FMID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFMID);
                this.columnStatus = new DataColumnExtended("Status", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnStatusName = new DataColumnExtended("StatusName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatusName);
                this.columnLang = new DataColumnExtended("Lang", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLang);
                this.columnPrograms = new DataColumnExtended("Programs", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrograms);
                this.columnMainOrderFulfilledDate = new DataColumnExtended("MainOrderFulfilledDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMainOrderFulfilledDate);
                this.columnSupplyFulfilledDate = new DataColumnExtended("SupplyFulfilledDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSupplyFulfilledDate);
                this.columnBillToAccountID = new DataColumnExtended("BillToAccountID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBillToAccountID);
                this.Constraints.Add(new UniqueConstraint("AccountCampaignListDataSetKey2", new DataColumn[] {
                                this.columnCampaignID}, true));
                this.columnCampaignID.AutoIncrement = true;
                this.columnCampaignID.AllowDBNull = false;
                this.columnCampaignID.ReadOnly = true;
                this.columnCampaignID.Unique = true;
                this.columnFMID.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnStatusName.AllowDBNull = false;
                this.columnLang.AllowDBNull = false;
                this.columnPrograms.AllowDBNull = false;
                this.columnBillToAccountID.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewCampaignRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewCampaignRow
            /// </summary>
            public virtual CampaignRow NewCampaignRow() {
                return ((CampaignRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CampaignRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(CampaignRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CampaignRowChanged != null)) {
                    this.CampaignRowChanged(this, new CampaignRowChangeEvent(((CampaignRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CampaignRowChanging != null)) {
                    this.CampaignRowChanging(this, new CampaignRowChangeEvent(((CampaignRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CampaignRowDeleted != null)) {
                    this.CampaignRowDeleted(this, new CampaignRowChangeEvent(((CampaignRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CampaignRowDeleting != null)) {
                    this.CampaignRowDeleting(this, new CampaignRowChangeEvent(((CampaignRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveCampaignRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveCampaignRow
            /// </summary>
            public virtual void RemoveCampaignRow(CampaignRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CampaignRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableCampaign
            /// </summary>
            private CampaignDataTable tableCampaign;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal CampaignRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCampaign = ((CampaignDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CampaignID
            /// </summary>
            public virtual int CampaignID {
                get {
                    return ((int)(this[this.tableCampaign.CampaignIDColumn]));
                }
                set {
                    this[this.tableCampaign.CampaignIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StartDate
            /// </summary>
            public virtual System.DateTime StartDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCampaign.StartDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.StartDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: EndDate
            /// </summary>
            public virtual System.DateTime EndDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCampaign.EndDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.EndDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FMID
            /// </summary>
            public virtual string FMID {
                get {
                    return ((string)(this[this.tableCampaign.FMIDColumn]));
                }
                set {
                    this[this.tableCampaign.FMIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Status
            /// </summary>
            public virtual int Status {
                get {
                    return ((int)(this[this.tableCampaign.StatusColumn]));
                }
                set {
                    this[this.tableCampaign.StatusColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusName
            /// </summary>
            public virtual string StatusName {
                get {
                    return ((string)(this[this.tableCampaign.StatusNameColumn]));
                }
                set {
                    this[this.tableCampaign.StatusNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Lang
            /// </summary>
            public virtual string Lang {
                get {
                    return ((string)(this[this.tableCampaign.LangColumn]));
                }
                set {
                    this[this.tableCampaign.LangColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Programs
            /// </summary>
            public virtual string Programs {
                get {
                    return ((string)(this[this.tableCampaign.ProgramsColumn]));
                }
                set {
                    this[this.tableCampaign.ProgramsColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MainOrderFulfilledDate
            /// </summary>
            public virtual System.DateTime MainOrderFulfilledDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCampaign.MainOrderFulfilledDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.MainOrderFulfilledDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: SupplyFulfilledDate
            /// </summary>
            public virtual System.DateTime SupplyFulfilledDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCampaign.SupplyFulfilledDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.SupplyFulfilledDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: BillToAccountID
            /// </summary>
            public virtual int BillToAccountID {
                get {
                    return ((int)(this[this.tableCampaign.BillToAccountIDColumn]));
                }
                set {
                    this[this.tableCampaign.BillToAccountIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CAccountRow
            /// </summary>
            public virtual CAccountRow CAccountRow {
                get {
                    return ((CAccountRow)(this.GetParentRow(this.Table.ParentRelations["CAccountCampaign"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CAccountCampaign"]);
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsStartDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsStartDateNull
            /// </summary>
            public virtual bool IsStartDateNull() {
                return this.IsNull(this.tableCampaign.StartDateColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetStartDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetStartDateNull
            /// </summary>
            public virtual void SetStartDateNull() {
                this[this.tableCampaign.StartDateColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsEndDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsEndDateNull
            /// </summary>
            public virtual bool IsEndDateNull() {
                return this.IsNull(this.tableCampaign.EndDateColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetEndDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetEndDateNull
            /// </summary>
            public virtual void SetEndDateNull() {
                this[this.tableCampaign.EndDateColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMainOrderFulfilledDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMainOrderFulfilledDateNull
            /// </summary>
            public virtual bool IsMainOrderFulfilledDateNull() {
                return this.IsNull(this.tableCampaign.MainOrderFulfilledDateColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMainOrderFulfilledDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMainOrderFulfilledDateNull
            /// </summary>
            public virtual void SetMainOrderFulfilledDateNull() {
                this[this.tableCampaign.MainOrderFulfilledDateColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsSupplyFulfilledDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsSupplyFulfilledDateNull
            /// </summary>
            public virtual bool IsSupplyFulfilledDateNull() {
                return this.IsNull(this.tableCampaign.SupplyFulfilledDateColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetSupplyFulfilledDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetSupplyFulfilledDateNull
            /// </summary>
            public virtual void SetSupplyFulfilledDateNull() {
                this[this.tableCampaign.SupplyFulfilledDateColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class CampaignRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private CampaignRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public CampaignRowChangeEvent(CampaignRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual CampaignRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
