//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef
{
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;

    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: StatementRunDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class StatementRunDataSet : DataSet
    {

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableStatementRun
        /// </summary>
        protected StatementRunDataTable tableStatementRun;

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public StatementRunDataSet()
        {
            this.tableStatementRun = this.CreateStatementRunDataTable();
            this.Tables.Add(this.tableStatementRun);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected StatementRunDataSet(SerializationInfo info, StreamingContext context)
        {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null))
            {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["StatementRun"] != null))
                {
                    this.Tables.Add(this.CreateStatementRunDataTable(ds.Tables["StatementRun"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: StatementRun
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual StatementRunDataTable StatementRun
        {
            get
            {
                return this.tableStatementRun;
            }
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone()
        {
            StatementRunDataSet cln = ((StatementRunDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader)
        {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["StatementRun"] != null))
            {
                this.Tables.Add(this.CreateStatementRunDataTable(ds.Tables["StatementRun"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/
        internal void InitVars()
        {
            this.tableStatementRun = ((StatementRunDataTable)(this.Tables["StatementRun"]));
            if ((this.tableStatementRun != null))
            {
                this.tableStatementRun.InitVars();
            }
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass()
        {
            this.DataSetName = "StatementRunDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StatementRunDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableStatementRun = this.CreateStatementRunDataTable();
            this.Tables.Add(this.tableStatementRun);
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeStatementRun
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeStatementRun
        /// </summary>
        protected virtual bool ShouldSerializeStatementRun()
        {
            return false;
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateStatementRunDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateStatementRunDataTable
        /// </summary>
        protected virtual StatementRunDataTable CreateStatementRunDataTable()
        {
            return new StatementRunDataTable();
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateStatementRunDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateStatementRunDataTable
        /// </summary>
        protected virtual StatementRunDataTable CreateStatementRunDataTable(DataTable table)
        {
            return new StatementRunDataTable(table);
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: StatementRunRowChangeEventHandler
        /// </summary>
        public delegate void StatementRunRowChangeEventHandler(object sender, StatementRunRow.StatementRunRowChangeEvent e);

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: StatementRunDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class StatementRunDataTable : DataTable, System.Collections.IEnumerable
        {

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnStatementRunID;

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnName
            /// </summary>
            protected DataColumn columnStatementRunDate;

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDescription
            /// </summary>
            protected DataColumn columnFiscalYearEnd;

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public StatementRunDataTable() :
                base("StatementRun")
            {
                this.InitClass();
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public StatementRunDataTable(DataTable table) :
                base(table.TableName)
            {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended StatementRunIDColumn
            {
                get
                {
                    return ((DataColumnExtended)(this.columnStatementRunID));
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NameColumn
            /// </summary>
            public virtual DataColumnExtended StatementRunDateColumn
            {
                get
                {
                    return ((DataColumnExtended)(this.columnStatementRunDate));
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DescriptionColumn
            /// </summary>
            public virtual DataColumnExtended FiscalYearEndColumn
            {
                get
                {
                    return ((DataColumnExtended)(this.columnFiscalYearEnd));
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual StatementRunRow this[int index]
            {
                get
                {
                    return ((StatementRunRow)(this.Rows[index]));
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: StatementRunRowChanged
            /// </summary>
            public event StatementRunRowChangeEventHandler StatementRunRowChanged;

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: StatementRunRowChanging
            /// </summary>
            public event StatementRunRowChangeEventHandler StatementRunRowChanging;

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: StatementRunRowDeleted
            /// </summary>
            public event StatementRunRowChangeEventHandler StatementRunRowDeleted;

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: StatementRunRowDeleting
            /// </summary>
            public event StatementRunRowChangeEventHandler StatementRunRowDeleting;

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddStatementRunRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddStatementRunRow
            /// </summary>
            public virtual void AddStatementRunRow(StatementRunRow row)
            {
                this.Rows.Add(row);
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddStatementRunRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddStatementRunRow
            /// </summary>
            public virtual StatementRunRow AddStatementRunRow(string StatementRunID, DateTime StatementRunDate, bool FiscalYearEnd)
            {
                StatementRunRow rowStatementRunRow = ((StatementRunRow)(this.NewRow()));
                rowStatementRunRow.ItemArray = new object[] {
                        null,
                        StatementRunID,
                        StatementRunDate,
                        FiscalYearEnd};
                this.Rows.Add(rowStatementRunRow);
                return rowStatementRunRow;
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual StatementRunRow FindByID(int ID)
            {
                return ((StatementRunRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone()
            {
                StatementRunDataTable cln = ((StatementRunDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance()
            {
                return new StatementRunDataTable();
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/
            internal void InitVars()
            {
                this.columnStatementRunID = this.Columns["StatementRunID"];
                this.columnStatementRunDate = this.Columns["StatementRunDate"];
                this.columnFiscalYearEnd = this.Columns["FiscalYearEnd"];
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass()
            {
                this.columnStatementRunID = new DataColumnExtended("StatementRunID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatementRunID);
                this.columnStatementRunDate = new DataColumnExtended("StatementRunDate", typeof(DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatementRunDate);
                this.columnFiscalYearEnd = new DataColumnExtended("FiscalYearEnd", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFiscalYearEnd);
                this.Constraints.Add(new UniqueConstraint("StatementRunDataSetKey2", new DataColumn[] {
                                this.columnStatementRunID}, true));
                this.columnStatementRunID.AutoIncrement = true;
                this.columnStatementRunID.AllowDBNull = false;
                this.columnStatementRunID.ReadOnly = true;
                this.columnStatementRunID.Unique = true;
                this.columnStatementRunDate.AllowDBNull = false;
                this.columnFiscalYearEnd.AllowDBNull = false;
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewStatementRunRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewStatementRunRow
            /// </summary>
            public virtual StatementRunRow NewStatementRunRow()
            {
                return ((StatementRunRow)(this.NewRow()));
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new StatementRunRow(builder);
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType()
            {
                return typeof(StatementRunRow);
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.StatementRunRowChanged != null))
                {
                    this.StatementRunRowChanged(this, new Common.TableDef.StatementRunDataSet.StatementRunRow.StatementRunRowChangeEvent(((StatementRunRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.StatementRunRowChanging != null))
                {
                    this.StatementRunRowChanging(this, new Common.TableDef.StatementRunDataSet.StatementRunRow.StatementRunRowChangeEvent(((StatementRunRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.StatementRunRowDeleted != null))
                {
                    this.StatementRunRowDeleted(this, new Common.TableDef.StatementRunDataSet.StatementRunRow.StatementRunRowChangeEvent(((StatementRunRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.StatementRunRowDeleting != null))
                {
                    this.StatementRunRowDeleting(this, new Common.TableDef.StatementRunDataSet.StatementRunRow.StatementRunRowChangeEvent(((StatementRunRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveStatementRunRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveStatementRunRow
            /// </summary>
            public virtual void RemoveStatementRunRow(StatementRunRow row)
            {
                this.Rows.Remove(row);
            }
        }

        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class StatementRunRow : DataRow
        {

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableStatementRun
            /// </summary>
            private StatementRunDataTable tableStatementRun;

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/
            internal StatementRunRow(DataRowBuilder rb) :
                base(rb)
            {
                this.tableStatementRun = ((StatementRunDataTable)(this.Table));
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int StatementRunStatementRunID
            {
                get
                {
                    return ((int)(this[this.tableStatementRun.StatementRunIDColumn]));
                }
                set
                {
                    this[this.tableStatementRun.StatementRunIDColumn] = value;
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Name
            /// </summary>
            public virtual DateTime StatementRunDate
            {
                get
                {
                    return ((DateTime)(this[this.tableStatementRun.StatementRunDateColumn]));
                }
                set
                {
                    this[this.tableStatementRun.StatementRunDateColumn] = value;
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Description
            /// </summary>
            public virtual bool FiscalYearEnd
            {
                get
                {
                    return ((bool)(this[this.tableStatementRun.FiscalYearEndColumn]));
                }
                set
                {
                    this[this.tableStatementRun.FiscalYearEndColumn] = value;
                }
            }

            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Class: 
            /// </summary>
            [System.Diagnostics.DebuggerStepThrough()]
            public class StatementRunRowChangeEvent : EventArgs
            {

                /// <summary>
                /// Autogenerated by the QSPDataSetGenerator.
                /// Field: eventRow
                /// </summary>
                private StatementRunRow eventRow;

                /// <summary>
                /// Autogenerated by the QSPDataSetGenerator.
                /// Field: eventAction
                /// </summary>
                private DataRowAction eventAction;

                /// <summary>
                /// Autogenerated by the QSPDataSetGenerator.
                /// </summary>
                public StatementRunRowChangeEvent(StatementRunRow row, DataRowAction action)
                {
                    this.eventRow = row;
                    this.eventAction = action;
                }

                /// <summary>
                /// Autogenerated by the QSPDataSetGenerator.
                /// Property: Row
                /// </summary>
                public virtual StatementRunRow Row
                {
                    get
                    {
                        return this.eventRow;
                    }
                }

                /// <summary>
                /// Autogenerated by the QSPDataSetGenerator.
                /// Property: Action
                /// </summary>
                public virtual DataRowAction Action
                {
                    get
                    {
                        return this.eventAction;
                    }
                }
            }
        }
    }
}