//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: AdjustmentBatchListDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class AdjustmentBatchListDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableAdjustmentBatch
        /// </summary>
        protected AdjustmentBatchDataTable tableAdjustmentBatch;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableADJUSTMENT
        /// </summary>
        protected ADJUSTMENTDataTable tableADJUSTMENT;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: relationAdjustmentBatchADJUSTMENT
        /// </summary>
        protected DataRelation relationAdjustmentBatchADJUSTMENT;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public AdjustmentBatchListDataSet() {
            this.tableAdjustmentBatch = this.CreateAdjustmentBatchDataTable();
            this.Tables.Add(this.tableAdjustmentBatch);
            this.tableADJUSTMENT = this.CreateADJUSTMENTDataTable();
            this.Tables.Add(this.tableADJUSTMENT);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitExpressions();
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected AdjustmentBatchListDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["AdjustmentBatch"] != null)) {
                    this.Tables.Add(this.CreateAdjustmentBatchDataTable(ds.Tables["AdjustmentBatch"]));
                }
                if ((ds.Tables["ADJUSTMENT"] != null)) {
                    this.Tables.Add(this.CreateADJUSTMENTDataTable(ds.Tables["ADJUSTMENT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: AdjustmentBatch
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual AdjustmentBatchDataTable AdjustmentBatch {
            get {
                return this.tableAdjustmentBatch;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: ADJUSTMENT
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual ADJUSTMENTDataTable ADJUSTMENT {
            get {
                return this.tableADJUSTMENT;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            AdjustmentBatchListDataSet cln = ((AdjustmentBatchListDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["AdjustmentBatch"] != null)) {
                this.Tables.Add(this.CreateAdjustmentBatchDataTable(ds.Tables["AdjustmentBatch"]));
            }
            if ((ds.Tables["ADJUSTMENT"] != null)) {
                this.Tables.Add(this.CreateADJUSTMENTDataTable(ds.Tables["ADJUSTMENT"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableAdjustmentBatch = ((AdjustmentBatchDataTable)(this.Tables["AdjustmentBatch"]));
            if ((this.tableAdjustmentBatch != null)) {
                this.tableAdjustmentBatch.InitVars();
            }
            this.tableADJUSTMENT = ((ADJUSTMENTDataTable)(this.Tables["ADJUSTMENT"]));
            if ((this.tableADJUSTMENT != null)) {
                this.tableADJUSTMENT.InitVars();
            }
            this.relationAdjustmentBatchADJUSTMENT = this.Relations["AdjustmentBatchADJUSTMENT"];
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "AdjustmentBatchListDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AdjustmentBatchListDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableAdjustmentBatch = this.CreateAdjustmentBatchDataTable();
            this.Tables.Add(this.tableAdjustmentBatch);
            this.tableADJUSTMENT = this.CreateADJUSTMENTDataTable();
            this.Tables.Add(this.tableADJUSTMENT);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("AdjustmentBatchADJUSTMENT", new DataColumn[] {
                        this.tableAdjustmentBatch.IDColumn}, new DataColumn[] {
                        this.tableADJUSTMENT.ADJUSTMENT_BATCH_IDColumn});
            this.tableADJUSTMENT.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationAdjustmentBatchADJUSTMENT = new DataRelation("AdjustmentBatchADJUSTMENT", new DataColumn[] {
                        this.tableAdjustmentBatch.IDColumn}, new DataColumn[] {
                        this.tableADJUSTMENT.ADJUSTMENT_BATCH_IDColumn}, false);
            this.Relations.Add(this.relationAdjustmentBatchADJUSTMENT);
            this.InitExpressions();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeAdjustmentBatch
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeAdjustmentBatch
        /// </summary>
        protected virtual bool ShouldSerializeAdjustmentBatch() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeADJUSTMENT
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeADJUSTMENT
        /// </summary>
        protected virtual bool ShouldSerializeADJUSTMENT() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitExpressions
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitExpressions
        /// </summary>
        protected virtual void InitExpressions() {
            this.tableAdjustmentBatch.IsDeletableColumn.Expression = "Status = 64001";
            this.tableAdjustmentBatch.IsRestorableColumn.Expression = "Status = 64003";
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateAdjustmentBatchDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateAdjustmentBatchDataTable
        /// </summary>
        protected virtual AdjustmentBatchDataTable CreateAdjustmentBatchDataTable() {
            return new AdjustmentBatchDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateAdjustmentBatchDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateAdjustmentBatchDataTable
        /// </summary>
        protected virtual AdjustmentBatchDataTable CreateAdjustmentBatchDataTable(DataTable table) {
            return new AdjustmentBatchDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateADJUSTMENTDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateADJUSTMENTDataTable
        /// </summary>
        protected virtual ADJUSTMENTDataTable CreateADJUSTMENTDataTable() {
            return new ADJUSTMENTDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateADJUSTMENTDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateADJUSTMENTDataTable
        /// </summary>
        protected virtual ADJUSTMENTDataTable CreateADJUSTMENTDataTable(DataTable table) {
            return new ADJUSTMENTDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: AdjustmentBatchRowChangeEventHandler
        /// </summary>
        public delegate void AdjustmentBatchRowChangeEventHandler(object sender, AdjustmentBatchRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: ADJUSTMENTRowChangeEventHandler
        /// </summary>
        public delegate void ADJUSTMENTRowChangeEventHandler(object sender, ADJUSTMENTRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: AdjustmentBatchDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class AdjustmentBatchDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnAdjustmentTypeID
            /// </summary>
            protected DataColumn columnAdjustmentTypeID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnAdjustmentTypeName
            /// </summary>
            protected DataColumn columnAdjustmentTypeName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnStatus
            /// </summary>
            protected DataColumn columnStatus;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnStatusDescription
            /// </summary>
            protected DataColumn columnStatusDescription;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateFrom
            /// </summary>
            protected DataColumn columnDateFrom;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateTo
            /// </summary>
            protected DataColumn columnDateTo;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCreateUserID
            /// </summary>
            protected DataColumn columnCreateUserID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCreateUserName
            /// </summary>
            protected DataColumn columnCreateUserName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCreateDate
            /// </summary>
            protected DataColumn columnCreateDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnChangeUserID
            /// </summary>
            protected DataColumn columnChangeUserID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnChangeUserName
            /// </summary>
            protected DataColumn columnChangeUserName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnChangeDate
            /// </summary>
            protected DataColumn columnChangeDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnIsDeletable
            /// </summary>
            protected DataColumn columnIsDeletable;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnIsRestorable
            /// </summary>
            protected DataColumn columnIsRestorable;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public AdjustmentBatchDataTable() : 
                    base("AdjustmentBatch") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public AdjustmentBatchDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AdjustmentTypeIDColumn
            /// </summary>
            public virtual DataColumnExtended AdjustmentTypeIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnAdjustmentTypeID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AdjustmentTypeNameColumn
            /// </summary>
            public virtual DataColumnExtended AdjustmentTypeNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnAdjustmentTypeName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusColumn
            /// </summary>
            public virtual DataColumnExtended StatusColumn {
                get {
                    return ((DataColumnExtended)(this.columnStatus));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusDescriptionColumn
            /// </summary>
            public virtual DataColumnExtended StatusDescriptionColumn {
                get {
                    return ((DataColumnExtended)(this.columnStatusDescription));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateFromColumn
            /// </summary>
            public virtual DataColumnExtended DateFromColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateFrom));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateToColumn
            /// </summary>
            public virtual DataColumnExtended DateToColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateTo));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateUserIDColumn
            /// </summary>
            public virtual DataColumnExtended CreateUserIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnCreateUserID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateUserNameColumn
            /// </summary>
            public virtual DataColumnExtended CreateUserNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnCreateUserName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateDateColumn
            /// </summary>
            public virtual DataColumnExtended CreateDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnCreateDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeUserIDColumn
            /// </summary>
            public virtual DataColumnExtended ChangeUserIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnChangeUserID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeUserNameColumn
            /// </summary>
            public virtual DataColumnExtended ChangeUserNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnChangeUserName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeDateColumn
            /// </summary>
            public virtual DataColumnExtended ChangeDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnChangeDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsDeletableColumn
            /// </summary>
            public virtual DataColumnExtended IsDeletableColumn {
                get {
                    return ((DataColumnExtended)(this.columnIsDeletable));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsRestorableColumn
            /// </summary>
            public virtual DataColumnExtended IsRestorableColumn {
                get {
                    return ((DataColumnExtended)(this.columnIsRestorable));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual AdjustmentBatchRow this[int index] {
                get {
                    return ((AdjustmentBatchRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: AdjustmentBatchRowChanged
            /// </summary>
            public event AdjustmentBatchRowChangeEventHandler AdjustmentBatchRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: AdjustmentBatchRowChanging
            /// </summary>
            public event AdjustmentBatchRowChangeEventHandler AdjustmentBatchRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: AdjustmentBatchRowDeleted
            /// </summary>
            public event AdjustmentBatchRowChangeEventHandler AdjustmentBatchRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: AdjustmentBatchRowDeleting
            /// </summary>
            public event AdjustmentBatchRowChangeEventHandler AdjustmentBatchRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddAdjustmentBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddAdjustmentBatchRow
            /// </summary>
            public virtual void AddAdjustmentBatchRow(AdjustmentBatchRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddAdjustmentBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddAdjustmentBatchRow
            /// </summary>
            public virtual AdjustmentBatchRow AddAdjustmentBatchRow(int AdjustmentTypeID, string AdjustmentTypeName, int Status, string StatusDescription, System.DateTime DateFrom, System.DateTime DateTo, int CreateUserID, string CreateUserName, System.DateTime CreateDate, int ChangeUserID, string ChangeUserName, System.DateTime ChangeDate) {
                AdjustmentBatchRow rowAdjustmentBatchRow = ((AdjustmentBatchRow)(this.NewRow()));
                rowAdjustmentBatchRow.ItemArray = new object[] {
                        null,
                        AdjustmentTypeID,
                        AdjustmentTypeName,
                        Status,
                        StatusDescription,
                        DateFrom,
                        DateTo,
                        CreateUserID,
                        CreateUserName,
                        CreateDate,
                        ChangeUserID,
                        ChangeUserName,
                        ChangeDate};
                this.Rows.Add(rowAdjustmentBatchRow);
                return rowAdjustmentBatchRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual AdjustmentBatchRow FindByID(int ID) {
                return ((AdjustmentBatchRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                AdjustmentBatchDataTable cln = ((AdjustmentBatchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new AdjustmentBatchDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnAdjustmentTypeID = this.Columns["AdjustmentTypeID"];
                this.columnAdjustmentTypeName = this.Columns["AdjustmentTypeName"];
                this.columnStatus = this.Columns["Status"];
                this.columnStatusDescription = this.Columns["StatusDescription"];
                this.columnDateFrom = this.Columns["DateFrom"];
                this.columnDateTo = this.Columns["DateTo"];
                this.columnCreateUserID = this.Columns["CreateUserID"];
                this.columnCreateUserName = this.Columns["CreateUserName"];
                this.columnCreateDate = this.Columns["CreateDate"];
                this.columnChangeUserID = this.Columns["ChangeUserID"];
                this.columnChangeUserName = this.Columns["ChangeUserName"];
                this.columnChangeDate = this.Columns["ChangeDate"];
                this.columnIsDeletable = this.Columns["IsDeletable"];
                this.columnIsRestorable = this.Columns["IsRestorable"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnID = new DataColumnExtended("ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnAdjustmentTypeID = new DataColumnExtended("AdjustmentTypeID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAdjustmentTypeID);
                this.columnAdjustmentTypeName = new DataColumnExtended("AdjustmentTypeName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAdjustmentTypeName);
                this.columnStatus = new DataColumnExtended("Status", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnStatusDescription = new DataColumnExtended("StatusDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatusDescription);
                this.columnDateFrom = new DataColumnExtended("DateFrom", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new DataColumnExtended("DateTo", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTo);
                this.columnCreateUserID = new DataColumnExtended("CreateUserID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreateUserID);
                this.columnCreateUserName = new DataColumnExtended("CreateUserName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreateUserName);
                this.columnCreateDate = new DataColumnExtended("CreateDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreateDate);
                this.columnChangeUserID = new DataColumnExtended("ChangeUserID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeUserID);
                this.columnChangeUserName = new DataColumnExtended("ChangeUserName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeUserName);
                this.columnChangeDate = new DataColumnExtended("ChangeDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeDate);
                this.columnIsDeletable = new DataColumnExtended("IsDeletable", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsDeletable);
                this.columnIsRestorable = new DataColumnExtended("IsRestorable", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsRestorable);
                this.Constraints.Add(new UniqueConstraint("AdjustmentBatchListDataSetKey1", new DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAdjustmentTypeID.AllowDBNull = false;
                this.columnAdjustmentTypeName.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnStatusDescription.AllowDBNull = false;
                this.columnDateFrom.AllowDBNull = false;
                this.columnDateTo.AllowDBNull = false;
                this.columnCreateUserID.AllowDBNull = false;
                this.columnCreateUserName.AllowDBNull = false;
                this.columnCreateDate.AllowDBNull = false;
                this.columnIsDeletable.ReadOnly = true;
                this.columnIsRestorable.ReadOnly = true;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewAdjustmentBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewAdjustmentBatchRow
            /// </summary>
            public virtual AdjustmentBatchRow NewAdjustmentBatchRow() {
                return ((AdjustmentBatchRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AdjustmentBatchRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(AdjustmentBatchRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdjustmentBatchRowChanged != null)) {
                    this.AdjustmentBatchRowChanged(this, new AdjustmentBatchRowChangeEvent(((AdjustmentBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdjustmentBatchRowChanging != null)) {
                    this.AdjustmentBatchRowChanging(this, new AdjustmentBatchRowChangeEvent(((AdjustmentBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdjustmentBatchRowDeleted != null)) {
                    this.AdjustmentBatchRowDeleted(this, new AdjustmentBatchRowChangeEvent(((AdjustmentBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdjustmentBatchRowDeleting != null)) {
                    this.AdjustmentBatchRowDeleting(this, new AdjustmentBatchRowChangeEvent(((AdjustmentBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveAdjustmentBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveAdjustmentBatchRow
            /// </summary>
            public virtual void RemoveAdjustmentBatchRow(AdjustmentBatchRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class AdjustmentBatchRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableAdjustmentBatch
            /// </summary>
            private AdjustmentBatchDataTable tableAdjustmentBatch;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal AdjustmentBatchRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdjustmentBatch = ((AdjustmentBatchDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int ID {
                get {
                    return ((int)(this[this.tableAdjustmentBatch.IDColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AdjustmentTypeID
            /// </summary>
            public virtual int AdjustmentTypeID {
                get {
                    return ((int)(this[this.tableAdjustmentBatch.AdjustmentTypeIDColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.AdjustmentTypeIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AdjustmentTypeName
            /// </summary>
            public virtual string AdjustmentTypeName {
                get {
                    return ((string)(this[this.tableAdjustmentBatch.AdjustmentTypeNameColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.AdjustmentTypeNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Status
            /// </summary>
            public virtual int Status {
                get {
                    return ((int)(this[this.tableAdjustmentBatch.StatusColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.StatusColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusDescription
            /// </summary>
            public virtual string StatusDescription {
                get {
                    return ((string)(this[this.tableAdjustmentBatch.StatusDescriptionColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.StatusDescriptionColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateFrom
            /// </summary>
            public virtual System.DateTime DateFrom {
                get {
                    return ((System.DateTime)(this[this.tableAdjustmentBatch.DateFromColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.DateFromColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateTo
            /// </summary>
            public virtual System.DateTime DateTo {
                get {
                    return ((System.DateTime)(this[this.tableAdjustmentBatch.DateToColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.DateToColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateUserID
            /// </summary>
            public virtual int CreateUserID {
                get {
                    return ((int)(this[this.tableAdjustmentBatch.CreateUserIDColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.CreateUserIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateUserName
            /// </summary>
            public virtual string CreateUserName {
                get {
                    return ((string)(this[this.tableAdjustmentBatch.CreateUserNameColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.CreateUserNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateDate
            /// </summary>
            public virtual System.DateTime CreateDate {
                get {
                    return ((System.DateTime)(this[this.tableAdjustmentBatch.CreateDateColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.CreateDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeUserID
            /// </summary>
            public virtual int ChangeUserID {
                get {
                    try {
                        return ((int)(this[this.tableAdjustmentBatch.ChangeUserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustmentBatch.ChangeUserIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeUserName
            /// </summary>
            public virtual string ChangeUserName {
                get {
                    try {
                        return ((string)(this[this.tableAdjustmentBatch.ChangeUserNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustmentBatch.ChangeUserNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeDate
            /// </summary>
            public virtual System.DateTime ChangeDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAdjustmentBatch.ChangeDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustmentBatch.ChangeDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsDeletable
            /// </summary>
            public virtual bool IsDeletable {
                get {
                    try {
                        return ((bool)(this[this.tableAdjustmentBatch.IsDeletableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustmentBatch.IsDeletableColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsRestorable
            /// </summary>
            public virtual bool IsRestorable {
                get {
                    try {
                        return ((bool)(this[this.tableAdjustmentBatch.IsRestorableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustmentBatch.IsRestorableColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeUserIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeUserIDNull
            /// </summary>
            public virtual bool IsChangeUserIDNull() {
                return this.IsNull(this.tableAdjustmentBatch.ChangeUserIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeUserIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeUserIDNull
            /// </summary>
            public virtual void SetChangeUserIDNull() {
                this[this.tableAdjustmentBatch.ChangeUserIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeUserNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeUserNameNull
            /// </summary>
            public virtual bool IsChangeUserNameNull() {
                return this.IsNull(this.tableAdjustmentBatch.ChangeUserNameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeUserNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeUserNameNull
            /// </summary>
            public virtual void SetChangeUserNameNull() {
                this[this.tableAdjustmentBatch.ChangeUserNameColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeDateNull
            /// </summary>
            public virtual bool IsChangeDateNull() {
                return this.IsNull(this.tableAdjustmentBatch.ChangeDateColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeDateNull
            /// </summary>
            public virtual void SetChangeDateNull() {
                this[this.tableAdjustmentBatch.ChangeDateColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsIsDeletableNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsIsDeletableNull
            /// </summary>
            public virtual bool IsIsDeletableNull() {
                return this.IsNull(this.tableAdjustmentBatch.IsDeletableColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetIsDeletableNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetIsDeletableNull
            /// </summary>
            public virtual void SetIsDeletableNull() {
                this[this.tableAdjustmentBatch.IsDeletableColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsIsRestorableNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsIsRestorableNull
            /// </summary>
            public virtual bool IsIsRestorableNull() {
                return this.IsNull(this.tableAdjustmentBatch.IsRestorableColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetIsRestorableNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetIsRestorableNull
            /// </summary>
            public virtual void SetIsRestorableNull() {
                this[this.tableAdjustmentBatch.IsRestorableColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetADJUSTMENTRows
            /// </summary>
            public virtual ADJUSTMENTRow[] GetADJUSTMENTRows() {
                return ((ADJUSTMENTRow[])(this.GetChildRows(this.Table.ChildRelations["AdjustmentBatchADJUSTMENT"])));
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class AdjustmentBatchRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private AdjustmentBatchRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public AdjustmentBatchRowChangeEvent(AdjustmentBatchRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual AdjustmentBatchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: ADJUSTMENTDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ADJUSTMENTDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnADJUSTMENT_ID
            /// </summary>
            protected DataColumn columnADJUSTMENT_ID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnACCOUNT_ID
            /// </summary>
            protected DataColumn columnACCOUNT_ID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnAccountName
            /// </summary>
            protected DataColumn columnAccountName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCampaignStartDate
            /// </summary>
            protected DataColumn columnCampaignStartDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCampaignEndDate
            /// </summary>
            protected DataColumn columnCampaignEndDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnACCOUNT_TYPE_ID
            /// </summary>
            protected DataColumn columnACCOUNT_TYPE_ID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnADJUSTMENT_TYPE_ID
            /// </summary>
            protected DataColumn columnADJUSTMENT_TYPE_ID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnADJUSTMENT_EFFECTIVE_DATE
            /// </summary>
            protected DataColumn columnADJUSTMENT_EFFECTIVE_DATE;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnADJUSTMENT_AMOUNT
            /// </summary>
            protected DataColumn columnADJUSTMENT_AMOUNT;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnNOTE_TO_PRINT
            /// </summary>
            protected DataColumn columnNOTE_TO_PRINT;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDATE_CREATED
            /// </summary>
            protected DataColumn columnDATE_CREATED;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDATETIME_MODIFIED
            /// </summary>
            protected DataColumn columnDATETIME_MODIFIED;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLAST_UPDATED_BY
            /// </summary>
            protected DataColumn columnLAST_UPDATED_BY;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCOUNTRY_CODE
            /// </summary>
            protected DataColumn columnCOUNTRY_CODE;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnINTERNAL_COMMENT
            /// </summary>
            protected DataColumn columnINTERNAL_COMMENT;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnORDER_ID
            /// </summary>
            protected DataColumn columnORDER_ID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCAMPAIGN_ID
            /// </summary>
            protected DataColumn columnCAMPAIGN_ID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnADJUSTMENT_BATCH_ID
            /// </summary>
            protected DataColumn columnADJUSTMENT_BATCH_ID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ADJUSTMENTDataTable() : 
                    base("ADJUSTMENT") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ADJUSTMENTDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_IDColumn
            /// </summary>
            public virtual DataColumnExtended ADJUSTMENT_IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnADJUSTMENT_ID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ACCOUNT_IDColumn
            /// </summary>
            public virtual DataColumnExtended ACCOUNT_IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnACCOUNT_ID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AccountNameColumn
            /// </summary>
            public virtual DataColumnExtended AccountNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnAccountName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CampaignStartDateColumn
            /// </summary>
            public virtual DataColumnExtended CampaignStartDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnCampaignStartDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CampaignEndDateColumn
            /// </summary>
            public virtual DataColumnExtended CampaignEndDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnCampaignEndDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ACCOUNT_TYPE_IDColumn
            /// </summary>
            public virtual DataColumnExtended ACCOUNT_TYPE_IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnACCOUNT_TYPE_ID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_TYPE_IDColumn
            /// </summary>
            public virtual DataColumnExtended ADJUSTMENT_TYPE_IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnADJUSTMENT_TYPE_ID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_EFFECTIVE_DATEColumn
            /// </summary>
            public virtual DataColumnExtended ADJUSTMENT_EFFECTIVE_DATEColumn {
                get {
                    return ((DataColumnExtended)(this.columnADJUSTMENT_EFFECTIVE_DATE));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_AMOUNTColumn
            /// </summary>
            public virtual DataColumnExtended ADJUSTMENT_AMOUNTColumn {
                get {
                    return ((DataColumnExtended)(this.columnADJUSTMENT_AMOUNT));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NOTE_TO_PRINTColumn
            /// </summary>
            public virtual DataColumnExtended NOTE_TO_PRINTColumn {
                get {
                    return ((DataColumnExtended)(this.columnNOTE_TO_PRINT));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DATE_CREATEDColumn
            /// </summary>
            public virtual DataColumnExtended DATE_CREATEDColumn {
                get {
                    return ((DataColumnExtended)(this.columnDATE_CREATED));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DATETIME_MODIFIEDColumn
            /// </summary>
            public virtual DataColumnExtended DATETIME_MODIFIEDColumn {
                get {
                    return ((DataColumnExtended)(this.columnDATETIME_MODIFIED));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LAST_UPDATED_BYColumn
            /// </summary>
            public virtual DataColumnExtended LAST_UPDATED_BYColumn {
                get {
                    return ((DataColumnExtended)(this.columnLAST_UPDATED_BY));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: COUNTRY_CODEColumn
            /// </summary>
            public virtual DataColumnExtended COUNTRY_CODEColumn {
                get {
                    return ((DataColumnExtended)(this.columnCOUNTRY_CODE));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: INTERNAL_COMMENTColumn
            /// </summary>
            public virtual DataColumnExtended INTERNAL_COMMENTColumn {
                get {
                    return ((DataColumnExtended)(this.columnINTERNAL_COMMENT));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ORDER_IDColumn
            /// </summary>
            public virtual DataColumnExtended ORDER_IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnORDER_ID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CAMPAIGN_IDColumn
            /// </summary>
            public virtual DataColumnExtended CAMPAIGN_IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnCAMPAIGN_ID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_BATCH_IDColumn
            /// </summary>
            public virtual DataColumnExtended ADJUSTMENT_BATCH_IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnADJUSTMENT_BATCH_ID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual ADJUSTMENTRow this[int index] {
                get {
                    return ((ADJUSTMENTRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ADJUSTMENTRowChanged
            /// </summary>
            public event ADJUSTMENTRowChangeEventHandler ADJUSTMENTRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ADJUSTMENTRowChanging
            /// </summary>
            public event ADJUSTMENTRowChangeEventHandler ADJUSTMENTRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ADJUSTMENTRowDeleted
            /// </summary>
            public event ADJUSTMENTRowChangeEventHandler ADJUSTMENTRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ADJUSTMENTRowDeleting
            /// </summary>
            public event ADJUSTMENTRowChangeEventHandler ADJUSTMENTRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddADJUSTMENTRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddADJUSTMENTRow
            /// </summary>
            public virtual void AddADJUSTMENTRow(ADJUSTMENTRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddADJUSTMENTRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddADJUSTMENTRow
            /// </summary>
            public virtual ADJUSTMENTRow AddADJUSTMENTRow(
                        int ACCOUNT_ID, 
                        string AccountName, 
                        System.DateTime CampaignStartDate, 
                        System.DateTime CampaignEndDate, 
                        int ACCOUNT_TYPE_ID, 
                        int ADJUSTMENT_TYPE_ID, 
                        System.DateTime ADJUSTMENT_EFFECTIVE_DATE, 
                        System.Decimal ADJUSTMENT_AMOUNT, 
                        string NOTE_TO_PRINT, 
                        System.DateTime DATE_CREATED, 
                        System.DateTime DATETIME_MODIFIED, 
                        string LAST_UPDATED_BY, 
                        string COUNTRY_CODE, 
                        string INTERNAL_COMMENT, 
                        int ORDER_ID, 
                        int CAMPAIGN_ID, 
                        AdjustmentBatchRow parentAdjustmentBatchRowByAdjustmentBatchADJUSTMENT) {
                ADJUSTMENTRow rowADJUSTMENTRow = ((ADJUSTMENTRow)(this.NewRow()));
                rowADJUSTMENTRow.ItemArray = new object[] {
                        null,
                        ACCOUNT_ID,
                        AccountName,
                        CampaignStartDate,
                        CampaignEndDate,
                        ACCOUNT_TYPE_ID,
                        ADJUSTMENT_TYPE_ID,
                        ADJUSTMENT_EFFECTIVE_DATE,
                        ADJUSTMENT_AMOUNT,
                        NOTE_TO_PRINT,
                        DATE_CREATED,
                        DATETIME_MODIFIED,
                        LAST_UPDATED_BY,
                        COUNTRY_CODE,
                        INTERNAL_COMMENT,
                        ORDER_ID,
                        CAMPAIGN_ID,
                        parentAdjustmentBatchRowByAdjustmentBatchADJUSTMENT[0]};
                this.Rows.Add(rowADJUSTMENTRow);
                return rowADJUSTMENTRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByADJUSTMENT_ID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByADJUSTMENT_ID
            /// </summary>
            public virtual ADJUSTMENTRow FindByADJUSTMENT_ID(int ADJUSTMENT_ID) {
                return ((ADJUSTMENTRow)(this.Rows.Find(new object[] {
                            ADJUSTMENT_ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                ADJUSTMENTDataTable cln = ((ADJUSTMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new ADJUSTMENTDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnADJUSTMENT_ID = this.Columns["ADJUSTMENT_ID"];
                this.columnACCOUNT_ID = this.Columns["ACCOUNT_ID"];
                this.columnAccountName = this.Columns["AccountName"];
                this.columnCampaignStartDate = this.Columns["CampaignStartDate"];
                this.columnCampaignEndDate = this.Columns["CampaignEndDate"];
                this.columnACCOUNT_TYPE_ID = this.Columns["ACCOUNT_TYPE_ID"];
                this.columnADJUSTMENT_TYPE_ID = this.Columns["ADJUSTMENT_TYPE_ID"];
                this.columnADJUSTMENT_EFFECTIVE_DATE = this.Columns["ADJUSTMENT_EFFECTIVE_DATE"];
                this.columnADJUSTMENT_AMOUNT = this.Columns["ADJUSTMENT_AMOUNT"];
                this.columnNOTE_TO_PRINT = this.Columns["NOTE_TO_PRINT"];
                this.columnDATE_CREATED = this.Columns["DATE_CREATED"];
                this.columnDATETIME_MODIFIED = this.Columns["DATETIME_MODIFIED"];
                this.columnLAST_UPDATED_BY = this.Columns["LAST_UPDATED_BY"];
                this.columnCOUNTRY_CODE = this.Columns["COUNTRY_CODE"];
                this.columnINTERNAL_COMMENT = this.Columns["INTERNAL_COMMENT"];
                this.columnORDER_ID = this.Columns["ORDER_ID"];
                this.columnCAMPAIGN_ID = this.Columns["CAMPAIGN_ID"];
                this.columnADJUSTMENT_BATCH_ID = this.Columns["ADJUSTMENT_BATCH_ID"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnADJUSTMENT_ID = new DataColumnExtended("ADJUSTMENT_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADJUSTMENT_ID);
                this.columnACCOUNT_ID = new DataColumnExtended("ACCOUNT_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACCOUNT_ID);
                this.columnAccountName = new DataColumnExtended("AccountName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccountName);
                this.columnCampaignStartDate = new DataColumnExtended("CampaignStartDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampaignStartDate);
                this.columnCampaignEndDate = new DataColumnExtended("CampaignEndDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampaignEndDate);
                this.columnACCOUNT_TYPE_ID = new DataColumnExtended("ACCOUNT_TYPE_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACCOUNT_TYPE_ID);
                this.columnADJUSTMENT_TYPE_ID = new DataColumnExtended("ADJUSTMENT_TYPE_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADJUSTMENT_TYPE_ID);
                this.columnADJUSTMENT_EFFECTIVE_DATE = new DataColumnExtended("ADJUSTMENT_EFFECTIVE_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADJUSTMENT_EFFECTIVE_DATE);
                this.columnADJUSTMENT_AMOUNT = new DataColumnExtended("ADJUSTMENT_AMOUNT", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADJUSTMENT_AMOUNT);
                this.columnNOTE_TO_PRINT = new DataColumnExtended("NOTE_TO_PRINT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOTE_TO_PRINT);
                this.columnDATE_CREATED = new DataColumnExtended("DATE_CREATED", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATE_CREATED);
                this.columnDATETIME_MODIFIED = new DataColumnExtended("DATETIME_MODIFIED", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATETIME_MODIFIED);
                this.columnLAST_UPDATED_BY = new DataColumnExtended("LAST_UPDATED_BY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLAST_UPDATED_BY);
                this.columnCOUNTRY_CODE = new DataColumnExtended("COUNTRY_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOUNTRY_CODE);
                this.columnINTERNAL_COMMENT = new DataColumnExtended("INTERNAL_COMMENT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINTERNAL_COMMENT);
                this.columnORDER_ID = new DataColumnExtended("ORDER_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnORDER_ID);
                this.columnCAMPAIGN_ID = new DataColumnExtended("CAMPAIGN_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCAMPAIGN_ID);
                this.columnADJUSTMENT_BATCH_ID = new DataColumnExtended("ADJUSTMENT_BATCH_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADJUSTMENT_BATCH_ID);
                this.Constraints.Add(new UniqueConstraint("AdjustmentBatchListDataSetKey2", new DataColumn[] {
                                this.columnADJUSTMENT_ID}, true));
                this.columnADJUSTMENT_ID.AutoIncrement = true;
                this.columnADJUSTMENT_ID.AllowDBNull = false;
                this.columnADJUSTMENT_ID.ReadOnly = true;
                this.columnADJUSTMENT_ID.Unique = true;
                this.columnACCOUNT_ID.AllowDBNull = false;
                this.columnAccountName.AllowDBNull = false;
                this.columnCampaignStartDate.AllowDBNull = false;
                this.columnCampaignEndDate.AllowDBNull = false;
                this.columnACCOUNT_TYPE_ID.AllowDBNull = false;
                this.columnADJUSTMENT_TYPE_ID.AllowDBNull = false;
                this.columnADJUSTMENT_EFFECTIVE_DATE.AllowDBNull = false;
                this.columnADJUSTMENT_AMOUNT.AllowDBNull = false;
                this.columnDATE_CREATED.AllowDBNull = false;
                this.columnCOUNTRY_CODE.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewADJUSTMENTRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewADJUSTMENTRow
            /// </summary>
            public virtual ADJUSTMENTRow NewADJUSTMENTRow() {
                return ((ADJUSTMENTRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ADJUSTMENTRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(ADJUSTMENTRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ADJUSTMENTRowChanged != null)) {
                    this.ADJUSTMENTRowChanged(this, new ADJUSTMENTRowChangeEvent(((ADJUSTMENTRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ADJUSTMENTRowChanging != null)) {
                    this.ADJUSTMENTRowChanging(this, new ADJUSTMENTRowChangeEvent(((ADJUSTMENTRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ADJUSTMENTRowDeleted != null)) {
                    this.ADJUSTMENTRowDeleted(this, new ADJUSTMENTRowChangeEvent(((ADJUSTMENTRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ADJUSTMENTRowDeleting != null)) {
                    this.ADJUSTMENTRowDeleting(this, new ADJUSTMENTRowChangeEvent(((ADJUSTMENTRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveADJUSTMENTRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveADJUSTMENTRow
            /// </summary>
            public virtual void RemoveADJUSTMENTRow(ADJUSTMENTRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ADJUSTMENTRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableADJUSTMENT
            /// </summary>
            private ADJUSTMENTDataTable tableADJUSTMENT;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal ADJUSTMENTRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableADJUSTMENT = ((ADJUSTMENTDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_ID
            /// </summary>
            public virtual int ADJUSTMENT_ID {
                get {
                    return ((int)(this[this.tableADJUSTMENT.ADJUSTMENT_IDColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.ADJUSTMENT_IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ACCOUNT_ID
            /// </summary>
            public virtual int ACCOUNT_ID {
                get {
                    return ((int)(this[this.tableADJUSTMENT.ACCOUNT_IDColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.ACCOUNT_IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AccountName
            /// </summary>
            public virtual string AccountName {
                get {
                    return ((string)(this[this.tableADJUSTMENT.AccountNameColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.AccountNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CampaignStartDate
            /// </summary>
            public virtual System.DateTime CampaignStartDate {
                get {
                    return ((System.DateTime)(this[this.tableADJUSTMENT.CampaignStartDateColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.CampaignStartDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CampaignEndDate
            /// </summary>
            public virtual System.DateTime CampaignEndDate {
                get {
                    return ((System.DateTime)(this[this.tableADJUSTMENT.CampaignEndDateColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.CampaignEndDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ACCOUNT_TYPE_ID
            /// </summary>
            public virtual int ACCOUNT_TYPE_ID {
                get {
                    return ((int)(this[this.tableADJUSTMENT.ACCOUNT_TYPE_IDColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.ACCOUNT_TYPE_IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_TYPE_ID
            /// </summary>
            public virtual int ADJUSTMENT_TYPE_ID {
                get {
                    return ((int)(this[this.tableADJUSTMENT.ADJUSTMENT_TYPE_IDColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.ADJUSTMENT_TYPE_IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_EFFECTIVE_DATE
            /// </summary>
            public virtual System.DateTime ADJUSTMENT_EFFECTIVE_DATE {
                get {
                    return ((System.DateTime)(this[this.tableADJUSTMENT.ADJUSTMENT_EFFECTIVE_DATEColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.ADJUSTMENT_EFFECTIVE_DATEColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_AMOUNT
            /// </summary>
            public virtual System.Decimal ADJUSTMENT_AMOUNT {
                get {
                    return ((System.Decimal)(this[this.tableADJUSTMENT.ADJUSTMENT_AMOUNTColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.ADJUSTMENT_AMOUNTColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NOTE_TO_PRINT
            /// </summary>
            public virtual string NOTE_TO_PRINT {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT.NOTE_TO_PRINTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT.NOTE_TO_PRINTColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DATE_CREATED
            /// </summary>
            public virtual System.DateTime DATE_CREATED {
                get {
                    return ((System.DateTime)(this[this.tableADJUSTMENT.DATE_CREATEDColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.DATE_CREATEDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DATETIME_MODIFIED
            /// </summary>
            public virtual System.DateTime DATETIME_MODIFIED {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableADJUSTMENT.DATETIME_MODIFIEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT.DATETIME_MODIFIEDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LAST_UPDATED_BY
            /// </summary>
            public virtual string LAST_UPDATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT.LAST_UPDATED_BYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT.LAST_UPDATED_BYColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: COUNTRY_CODE
            /// </summary>
            public virtual string COUNTRY_CODE {
                get {
                    return ((string)(this[this.tableADJUSTMENT.COUNTRY_CODEColumn]));
                }
                set {
                    this[this.tableADJUSTMENT.COUNTRY_CODEColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: INTERNAL_COMMENT
            /// </summary>
            public virtual string INTERNAL_COMMENT {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT.INTERNAL_COMMENTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT.INTERNAL_COMMENTColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ORDER_ID
            /// </summary>
            public virtual int ORDER_ID {
                get {
                    try {
                        return ((int)(this[this.tableADJUSTMENT.ORDER_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT.ORDER_IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CAMPAIGN_ID
            /// </summary>
            public virtual int CAMPAIGN_ID {
                get {
                    try {
                        return ((int)(this[this.tableADJUSTMENT.CAMPAIGN_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT.CAMPAIGN_IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_BATCH_ID
            /// </summary>
            public virtual int ADJUSTMENT_BATCH_ID {
                get {
                    try {
                        return ((int)(this[this.tableADJUSTMENT.ADJUSTMENT_BATCH_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT.ADJUSTMENT_BATCH_IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AdjustmentBatchRow
            /// </summary>
            public virtual AdjustmentBatchRow AdjustmentBatchRow {
                get {
                    return ((AdjustmentBatchRow)(this.GetParentRow(this.Table.ParentRelations["AdjustmentBatchADJUSTMENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AdjustmentBatchADJUSTMENT"]);
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNOTE_TO_PRINTNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNOTE_TO_PRINTNull
            /// </summary>
            public virtual bool IsNOTE_TO_PRINTNull() {
                return this.IsNull(this.tableADJUSTMENT.NOTE_TO_PRINTColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNOTE_TO_PRINTNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNOTE_TO_PRINTNull
            /// </summary>
            public virtual void SetNOTE_TO_PRINTNull() {
                this[this.tableADJUSTMENT.NOTE_TO_PRINTColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDATETIME_MODIFIEDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDATETIME_MODIFIEDNull
            /// </summary>
            public virtual bool IsDATETIME_MODIFIEDNull() {
                return this.IsNull(this.tableADJUSTMENT.DATETIME_MODIFIEDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDATETIME_MODIFIEDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDATETIME_MODIFIEDNull
            /// </summary>
            public virtual void SetDATETIME_MODIFIEDNull() {
                this[this.tableADJUSTMENT.DATETIME_MODIFIEDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsLAST_UPDATED_BYNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsLAST_UPDATED_BYNull
            /// </summary>
            public virtual bool IsLAST_UPDATED_BYNull() {
                return this.IsNull(this.tableADJUSTMENT.LAST_UPDATED_BYColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetLAST_UPDATED_BYNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetLAST_UPDATED_BYNull
            /// </summary>
            public virtual void SetLAST_UPDATED_BYNull() {
                this[this.tableADJUSTMENT.LAST_UPDATED_BYColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsINTERNAL_COMMENTNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsINTERNAL_COMMENTNull
            /// </summary>
            public virtual bool IsINTERNAL_COMMENTNull() {
                return this.IsNull(this.tableADJUSTMENT.INTERNAL_COMMENTColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetINTERNAL_COMMENTNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetINTERNAL_COMMENTNull
            /// </summary>
            public virtual void SetINTERNAL_COMMENTNull() {
                this[this.tableADJUSTMENT.INTERNAL_COMMENTColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsORDER_IDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsORDER_IDNull
            /// </summary>
            public virtual bool IsORDER_IDNull() {
                return this.IsNull(this.tableADJUSTMENT.ORDER_IDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetORDER_IDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetORDER_IDNull
            /// </summary>
            public virtual void SetORDER_IDNull() {
                this[this.tableADJUSTMENT.ORDER_IDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCAMPAIGN_IDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCAMPAIGN_IDNull
            /// </summary>
            public virtual bool IsCAMPAIGN_IDNull() {
                return this.IsNull(this.tableADJUSTMENT.CAMPAIGN_IDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCAMPAIGN_IDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCAMPAIGN_IDNull
            /// </summary>
            public virtual void SetCAMPAIGN_IDNull() {
                this[this.tableADJUSTMENT.CAMPAIGN_IDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsADJUSTMENT_BATCH_IDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsADJUSTMENT_BATCH_IDNull
            /// </summary>
            public virtual bool IsADJUSTMENT_BATCH_IDNull() {
                return this.IsNull(this.tableADJUSTMENT.ADJUSTMENT_BATCH_IDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetADJUSTMENT_BATCH_IDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetADJUSTMENT_BATCH_IDNull
            /// </summary>
            public virtual void SetADJUSTMENT_BATCH_IDNull() {
                this[this.tableADJUSTMENT.ADJUSTMENT_BATCH_IDColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ADJUSTMENTRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private ADJUSTMENTRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ADJUSTMENTRowChangeEvent(ADJUSTMENTRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual ADJUSTMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
