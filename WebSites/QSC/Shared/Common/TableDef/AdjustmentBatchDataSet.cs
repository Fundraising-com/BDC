//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: AdjustmentBatchDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class AdjustmentBatchDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableAdjustmentBatch
        /// </summary>
        protected AdjustmentBatchDataTable tableAdjustmentBatch;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public AdjustmentBatchDataSet() {
            this.tableAdjustmentBatch = this.CreateAdjustmentBatchDataTable();
            this.Tables.Add(this.tableAdjustmentBatch);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected AdjustmentBatchDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["AdjustmentBatch"] != null)) {
                    this.Tables.Add(this.CreateAdjustmentBatchDataTable(ds.Tables["AdjustmentBatch"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: AdjustmentBatch
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual AdjustmentBatchDataTable AdjustmentBatch {
            get {
                return this.tableAdjustmentBatch;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            AdjustmentBatchDataSet cln = ((AdjustmentBatchDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["AdjustmentBatch"] != null)) {
                this.Tables.Add(this.CreateAdjustmentBatchDataTable(ds.Tables["AdjustmentBatch"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableAdjustmentBatch = ((AdjustmentBatchDataTable)(this.Tables["AdjustmentBatch"]));
            if ((this.tableAdjustmentBatch != null)) {
                this.tableAdjustmentBatch.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "AdjustmentBatchDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AdjustmentBatchDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableAdjustmentBatch = this.CreateAdjustmentBatchDataTable();
            this.Tables.Add(this.tableAdjustmentBatch);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeAdjustmentBatch
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeAdjustmentBatch
        /// </summary>
        protected virtual bool ShouldSerializeAdjustmentBatch() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateAdjustmentBatchDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateAdjustmentBatchDataTable
        /// </summary>
        protected virtual AdjustmentBatchDataTable CreateAdjustmentBatchDataTable() {
            return new AdjustmentBatchDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateAdjustmentBatchDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateAdjustmentBatchDataTable
        /// </summary>
        protected virtual AdjustmentBatchDataTable CreateAdjustmentBatchDataTable(DataTable table) {
            return new AdjustmentBatchDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: AdjustmentBatchRowChangeEventHandler
        /// </summary>
        public delegate void AdjustmentBatchRowChangeEventHandler(object sender, AdjustmentBatchRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: AdjustmentBatchDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class AdjustmentBatchDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnAdjustmentTypeID
            /// </summary>
            protected DataColumn columnAdjustmentTypeID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnStatus
            /// </summary>
            protected DataColumn columnStatus;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateFrom
            /// </summary>
            protected DataColumn columnDateFrom;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateTo
            /// </summary>
            protected DataColumn columnDateTo;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCreateUserID
            /// </summary>
            protected DataColumn columnCreateUserID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCreateDate
            /// </summary>
            protected DataColumn columnCreateDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnChangeUserID
            /// </summary>
            protected DataColumn columnChangeUserID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnChangeDate
            /// </summary>
            protected DataColumn columnChangeDate;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public AdjustmentBatchDataTable() : 
                    base("AdjustmentBatch") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public AdjustmentBatchDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AdjustmentTypeIDColumn
            /// </summary>
            public virtual DataColumnExtended AdjustmentTypeIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnAdjustmentTypeID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusColumn
            /// </summary>
            public virtual DataColumnExtended StatusColumn {
                get {
                    return ((DataColumnExtended)(this.columnStatus));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateFromColumn
            /// </summary>
            public virtual DataColumnExtended DateFromColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateFrom));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateToColumn
            /// </summary>
            public virtual DataColumnExtended DateToColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateTo));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateUserIDColumn
            /// </summary>
            public virtual DataColumnExtended CreateUserIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnCreateUserID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateDateColumn
            /// </summary>
            public virtual DataColumnExtended CreateDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnCreateDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeUserIDColumn
            /// </summary>
            public virtual DataColumnExtended ChangeUserIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnChangeUserID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeDateColumn
            /// </summary>
            public virtual DataColumnExtended ChangeDateColumn {
                get {
                    return ((DataColumnExtended)(this.columnChangeDate));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual AdjustmentBatchRow this[int index] {
                get {
                    return ((AdjustmentBatchRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: AdjustmentBatchRowChanged
            /// </summary>
            public event AdjustmentBatchRowChangeEventHandler AdjustmentBatchRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: AdjustmentBatchRowChanging
            /// </summary>
            public event AdjustmentBatchRowChangeEventHandler AdjustmentBatchRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: AdjustmentBatchRowDeleted
            /// </summary>
            public event AdjustmentBatchRowChangeEventHandler AdjustmentBatchRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: AdjustmentBatchRowDeleting
            /// </summary>
            public event AdjustmentBatchRowChangeEventHandler AdjustmentBatchRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddAdjustmentBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddAdjustmentBatchRow
            /// </summary>
            public virtual void AddAdjustmentBatchRow(AdjustmentBatchRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddAdjustmentBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddAdjustmentBatchRow
            /// </summary>
            public virtual AdjustmentBatchRow AddAdjustmentBatchRow(int AdjustmentTypeID, int Status, System.DateTime DateFrom, System.DateTime DateTo, int CreateUserID, System.DateTime CreateDate, int ChangeUserID, System.DateTime ChangeDate) {
                AdjustmentBatchRow rowAdjustmentBatchRow = ((AdjustmentBatchRow)(this.NewRow()));
                rowAdjustmentBatchRow.ItemArray = new object[] {
                        null,
                        AdjustmentTypeID,
                        Status,
                        DateFrom,
                        DateTo,
                        CreateUserID,
                        CreateDate,
                        ChangeUserID,
                        ChangeDate};
                this.Rows.Add(rowAdjustmentBatchRow);
                return rowAdjustmentBatchRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual AdjustmentBatchRow FindByID(int ID) {
                return ((AdjustmentBatchRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                AdjustmentBatchDataTable cln = ((AdjustmentBatchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new AdjustmentBatchDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnAdjustmentTypeID = this.Columns["AdjustmentTypeID"];
                this.columnStatus = this.Columns["Status"];
                this.columnDateFrom = this.Columns["DateFrom"];
                this.columnDateTo = this.Columns["DateTo"];
                this.columnCreateUserID = this.Columns["CreateUserID"];
                this.columnCreateDate = this.Columns["CreateDate"];
                this.columnChangeUserID = this.Columns["ChangeUserID"];
                this.columnChangeDate = this.Columns["ChangeDate"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnID = new DataColumnExtended("ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnAdjustmentTypeID = new DataColumnExtended("AdjustmentTypeID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAdjustmentTypeID);
                this.columnStatus = new DataColumnExtended("Status", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnDateFrom = new DataColumnExtended("DateFrom", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new DataColumnExtended("DateTo", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTo);
                this.columnCreateUserID = new DataColumnExtended("CreateUserID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreateUserID);
                this.columnCreateDate = new DataColumnExtended("CreateDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreateDate);
                this.columnChangeUserID = new DataColumnExtended("ChangeUserID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeUserID);
                this.columnChangeDate = new DataColumnExtended("ChangeDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeDate);
                this.Constraints.Add(new UniqueConstraint("AdjustmentBatchDataSetKey1", new DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAdjustmentTypeID.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnDateFrom.AllowDBNull = false;
                this.columnDateTo.AllowDBNull = false;
                this.columnCreateUserID.AllowDBNull = false;
                this.columnCreateDate.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewAdjustmentBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewAdjustmentBatchRow
            /// </summary>
            public virtual AdjustmentBatchRow NewAdjustmentBatchRow() {
                return ((AdjustmentBatchRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AdjustmentBatchRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(AdjustmentBatchRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdjustmentBatchRowChanged != null)) {
                    this.AdjustmentBatchRowChanged(this, new AdjustmentBatchRowChangeEvent(((AdjustmentBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdjustmentBatchRowChanging != null)) {
                    this.AdjustmentBatchRowChanging(this, new AdjustmentBatchRowChangeEvent(((AdjustmentBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdjustmentBatchRowDeleted != null)) {
                    this.AdjustmentBatchRowDeleted(this, new AdjustmentBatchRowChangeEvent(((AdjustmentBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdjustmentBatchRowDeleting != null)) {
                    this.AdjustmentBatchRowDeleting(this, new AdjustmentBatchRowChangeEvent(((AdjustmentBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveAdjustmentBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveAdjustmentBatchRow
            /// </summary>
            public virtual void RemoveAdjustmentBatchRow(AdjustmentBatchRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class AdjustmentBatchRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableAdjustmentBatch
            /// </summary>
            private AdjustmentBatchDataTable tableAdjustmentBatch;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal AdjustmentBatchRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdjustmentBatch = ((AdjustmentBatchDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int ID {
                get {
                    return ((int)(this[this.tableAdjustmentBatch.IDColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AdjustmentTypeID
            /// </summary>
            public virtual int AdjustmentTypeID {
                get {
                    return ((int)(this[this.tableAdjustmentBatch.AdjustmentTypeIDColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.AdjustmentTypeIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Status
            /// </summary>
            public virtual int Status {
                get {
                    return ((int)(this[this.tableAdjustmentBatch.StatusColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.StatusColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateFrom
            /// </summary>
            public virtual System.DateTime DateFrom {
                get {
                    return ((System.DateTime)(this[this.tableAdjustmentBatch.DateFromColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.DateFromColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateTo
            /// </summary>
            public virtual System.DateTime DateTo {
                get {
                    return ((System.DateTime)(this[this.tableAdjustmentBatch.DateToColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.DateToColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateUserID
            /// </summary>
            public virtual int CreateUserID {
                get {
                    return ((int)(this[this.tableAdjustmentBatch.CreateUserIDColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.CreateUserIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CreateDate
            /// </summary>
            public virtual System.DateTime CreateDate {
                get {
                    return ((System.DateTime)(this[this.tableAdjustmentBatch.CreateDateColumn]));
                }
                set {
                    this[this.tableAdjustmentBatch.CreateDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeUserID
            /// </summary>
            public virtual int ChangeUserID {
                get {
                    try {
                        return ((int)(this[this.tableAdjustmentBatch.ChangeUserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustmentBatch.ChangeUserIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ChangeDate
            /// </summary>
            public virtual System.DateTime ChangeDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAdjustmentBatch.ChangeDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustmentBatch.ChangeDateColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeUserIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeUserIDNull
            /// </summary>
            public virtual bool IsChangeUserIDNull() {
                return this.IsNull(this.tableAdjustmentBatch.ChangeUserIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeUserIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeUserIDNull
            /// </summary>
            public virtual void SetChangeUserIDNull() {
                this[this.tableAdjustmentBatch.ChangeUserIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsChangeDateNull
            /// </summary>
            public virtual bool IsChangeDateNull() {
                return this.IsNull(this.tableAdjustmentBatch.ChangeDateColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeDateNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetChangeDateNull
            /// </summary>
            public virtual void SetChangeDateNull() {
                this[this.tableAdjustmentBatch.ChangeDateColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class AdjustmentBatchRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private AdjustmentBatchRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public AdjustmentBatchRowChangeEvent(AdjustmentBatchRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual AdjustmentBatchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
