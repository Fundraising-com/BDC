//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: RemitTestDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class RemitTestDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableRemitTest
        /// </summary>
        protected RemitTestDataTable tableRemitTest;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public RemitTestDataSet() {
            this.tableRemitTest = this.CreateRemitTestDataTable();
            this.Tables.Add(this.tableRemitTest);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected RemitTestDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["RemitTest"] != null)) {
                    this.Tables.Add(this.CreateRemitTestDataTable(ds.Tables["RemitTest"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: RemitTest
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual RemitTestDataTable RemitTest {
            get {
                return this.tableRemitTest;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            RemitTestDataSet cln = ((RemitTestDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["RemitTest"] != null)) {
                this.Tables.Add(this.CreateRemitTestDataTable(ds.Tables["RemitTest"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableRemitTest = ((RemitTestDataTable)(this.Tables["RemitTest"]));
            if ((this.tableRemitTest != null)) {
                this.tableRemitTest.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "RemitTestDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RemitTestDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableRemitTest = this.CreateRemitTestDataTable();
            this.Tables.Add(this.tableRemitTest);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRemitTest
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRemitTest
        /// </summary>
        protected virtual bool ShouldSerializeRemitTest() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateRemitTestDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateRemitTestDataTable
        /// </summary>
        protected virtual RemitTestDataTable CreateRemitTestDataTable() {
            return new RemitTestDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateRemitTestDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateRemitTestDataTable
        /// </summary>
        protected virtual RemitTestDataTable CreateRemitTestDataTable(DataTable table) {
            return new RemitTestDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: RemitTestRowChangeEventHandler
        /// </summary>
        public delegate void RemitTestRowChangeEventHandler(object sender, RemitTestRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: RemitTestDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class RemitTestDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnName
            /// </summary>
            protected DataColumn columnName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDescription
            /// </summary>
            protected DataColumn columnDescription;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnScript
            /// </summary>
            protected DataColumn columnScript;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCorrectionDescription
            /// </summary>
            protected DataColumn columnCorrectionDescription;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCorrectionScript
            /// </summary>
            protected DataColumn columnCorrectionScript;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnIsCritical
            /// </summary>
            protected DataColumn columnIsCritical;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateChanged
            /// </summary>
            protected DataColumn columnDateChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnUserChangedInstance
            /// </summary>
            protected DataColumn columnUserChangedInstance;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnSequenceID
            /// </summary>
            protected DataColumn columnSequenceID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDeletedTF
            /// </summary>
            protected DataColumn columnDeletedTF;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public RemitTestDataTable() : 
                    base("RemitTest") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public RemitTestDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NameColumn
            /// </summary>
            public virtual DataColumnExtended NameColumn {
                get {
                    return ((DataColumnExtended)(this.columnName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DescriptionColumn
            /// </summary>
            public virtual DataColumnExtended DescriptionColumn {
                get {
                    return ((DataColumnExtended)(this.columnDescription));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ScriptColumn
            /// </summary>
            public virtual DataColumnExtended ScriptColumn {
                get {
                    return ((DataColumnExtended)(this.columnScript));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CorrectionDescriptionColumn
            /// </summary>
            public virtual DataColumnExtended CorrectionDescriptionColumn {
                get {
                    return ((DataColumnExtended)(this.columnCorrectionDescription));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CorrectionScriptColumn
            /// </summary>
            public virtual DataColumnExtended CorrectionScriptColumn {
                get {
                    return ((DataColumnExtended)(this.columnCorrectionScript));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsCriticalColumn
            /// </summary>
            public virtual DataColumnExtended IsCriticalColumn {
                get {
                    return ((DataColumnExtended)(this.columnIsCritical));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateChangedColumn
            /// </summary>
            public virtual DataColumnExtended DateChangedColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateChanged));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: UserChangedInstanceColumn
            /// </summary>
            public virtual DataColumnExtended UserChangedInstanceColumn {
                get {
                    return ((DataColumnExtended)(this.columnUserChangedInstance));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: SequenceIDColumn
            /// </summary>
            public virtual DataColumnExtended SequenceIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnSequenceID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DeletedTFColumn
            /// </summary>
            public virtual DataColumnExtended DeletedTFColumn {
                get {
                    return ((DataColumnExtended)(this.columnDeletedTF));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual RemitTestRow this[int index] {
                get {
                    return ((RemitTestRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: RemitTestRowChanged
            /// </summary>
            public event RemitTestRowChangeEventHandler RemitTestRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: RemitTestRowChanging
            /// </summary>
            public event RemitTestRowChangeEventHandler RemitTestRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: RemitTestRowDeleted
            /// </summary>
            public event RemitTestRowChangeEventHandler RemitTestRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: RemitTestRowDeleting
            /// </summary>
            public event RemitTestRowChangeEventHandler RemitTestRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddRemitTestRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddRemitTestRow
            /// </summary>
            public virtual void AddRemitTestRow(RemitTestRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddRemitTestRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddRemitTestRow
            /// </summary>
            public virtual RemitTestRow AddRemitTestRow(string Name, string Description, string Script, string CorrectionDescription, string CorrectionScript, bool IsCritical, System.DateTime DateChanged, int UserChangedInstance, int SequenceID, bool DeletedTF) {
                RemitTestRow rowRemitTestRow = ((RemitTestRow)(this.NewRow()));
                rowRemitTestRow.ItemArray = new object[] {
                        null,
                        Name,
                        Description,
                        Script,
                        CorrectionDescription,
                        CorrectionScript,
                        IsCritical,
                        DateChanged,
                        UserChangedInstance,
                        SequenceID,
                        DeletedTF};
                this.Rows.Add(rowRemitTestRow);
                return rowRemitTestRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual RemitTestRow FindByID(int ID) {
                return ((RemitTestRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                RemitTestDataTable cln = ((RemitTestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new RemitTestDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnName = this.Columns["Name"];
                this.columnDescription = this.Columns["Description"];
                this.columnScript = this.Columns["Script"];
                this.columnCorrectionDescription = this.Columns["CorrectionDescription"];
                this.columnCorrectionScript = this.Columns["CorrectionScript"];
                this.columnIsCritical = this.Columns["IsCritical"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnUserChangedInstance = this.Columns["UserChangedInstance"];
                this.columnSequenceID = this.Columns["SequenceID"];
                this.columnDeletedTF = this.Columns["DeletedTF"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnID = new DataColumnExtended("ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnName = new DataColumnExtended("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnDescription = new DataColumnExtended("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnScript = new DataColumnExtended("Script", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnScript);
                this.columnCorrectionDescription = new DataColumnExtended("CorrectionDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCorrectionDescription);
                this.columnCorrectionScript = new DataColumnExtended("CorrectionScript", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCorrectionScript);
                this.columnIsCritical = new DataColumnExtended("IsCritical", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsCritical);
                this.columnDateChanged = new DataColumnExtended("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnUserChangedInstance = new DataColumnExtended("UserChangedInstance", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserChangedInstance);
                this.columnSequenceID = new DataColumnExtended("SequenceID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSequenceID);
                this.columnDeletedTF = new DataColumnExtended("DeletedTF", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedTF);
                this.Constraints.Add(new UniqueConstraint("RemitTestDataSetKey1", new DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnIsCritical.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRemitTestRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRemitTestRow
            /// </summary>
            public virtual RemitTestRow NewRemitTestRow() {
                return ((RemitTestRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RemitTestRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(RemitTestRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RemitTestRowChanged != null)) {
                    this.RemitTestRowChanged(this, new RemitTestRowChangeEvent(((RemitTestRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RemitTestRowChanging != null)) {
                    this.RemitTestRowChanging(this, new RemitTestRowChangeEvent(((RemitTestRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RemitTestRowDeleted != null)) {
                    this.RemitTestRowDeleted(this, new RemitTestRowChangeEvent(((RemitTestRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RemitTestRowDeleting != null)) {
                    this.RemitTestRowDeleting(this, new RemitTestRowChangeEvent(((RemitTestRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveRemitTestRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveRemitTestRow
            /// </summary>
            public virtual void RemoveRemitTestRow(RemitTestRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class RemitTestRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableRemitTest
            /// </summary>
            private RemitTestDataTable tableRemitTest;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal RemitTestRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRemitTest = ((RemitTestDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int ID {
                get {
                    return ((int)(this[this.tableRemitTest.IDColumn]));
                }
                set {
                    this[this.tableRemitTest.IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Name
            /// </summary>
            public virtual string Name {
                get {
                    try {
                        return ((string)(this[this.tableRemitTest.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.NameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Description
            /// </summary>
            public virtual string Description {
                get {
                    try {
                        return ((string)(this[this.tableRemitTest.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.DescriptionColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Script
            /// </summary>
            public virtual string Script {
                get {
                    try {
                        return ((string)(this[this.tableRemitTest.ScriptColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.ScriptColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CorrectionDescription
            /// </summary>
            public virtual string CorrectionDescription {
                get {
                    try {
                        return ((string)(this[this.tableRemitTest.CorrectionDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.CorrectionDescriptionColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CorrectionScript
            /// </summary>
            public virtual string CorrectionScript {
                get {
                    try {
                        return ((string)(this[this.tableRemitTest.CorrectionScriptColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.CorrectionScriptColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsCritical
            /// </summary>
            public virtual bool IsCritical {
                get {
                    return ((bool)(this[this.tableRemitTest.IsCriticalColumn]));
                }
                set {
                    this[this.tableRemitTest.IsCriticalColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateChanged
            /// </summary>
            public virtual System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableRemitTest.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.DateChangedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: UserChangedInstance
            /// </summary>
            public virtual int UserChangedInstance {
                get {
                    try {
                        return ((int)(this[this.tableRemitTest.UserChangedInstanceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.UserChangedInstanceColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: SequenceID
            /// </summary>
            public virtual int SequenceID {
                get {
                    try {
                        return ((int)(this[this.tableRemitTest.SequenceIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.SequenceIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DeletedTF
            /// </summary>
            public virtual bool DeletedTF {
                get {
                    try {
                        return ((bool)(this[this.tableRemitTest.DeletedTFColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitTest.DeletedTFColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNameNull
            /// </summary>
            public virtual bool IsNameNull() {
                return this.IsNull(this.tableRemitTest.NameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNameNull
            /// </summary>
            public virtual void SetNameNull() {
                this[this.tableRemitTest.NameColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDescriptionNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDescriptionNull
            /// </summary>
            public virtual bool IsDescriptionNull() {
                return this.IsNull(this.tableRemitTest.DescriptionColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDescriptionNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDescriptionNull
            /// </summary>
            public virtual void SetDescriptionNull() {
                this[this.tableRemitTest.DescriptionColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsScriptNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsScriptNull
            /// </summary>
            public virtual bool IsScriptNull() {
                return this.IsNull(this.tableRemitTest.ScriptColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetScriptNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetScriptNull
            /// </summary>
            public virtual void SetScriptNull() {
                this[this.tableRemitTest.ScriptColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCorrectionDescriptionNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCorrectionDescriptionNull
            /// </summary>
            public virtual bool IsCorrectionDescriptionNull() {
                return this.IsNull(this.tableRemitTest.CorrectionDescriptionColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCorrectionDescriptionNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCorrectionDescriptionNull
            /// </summary>
            public virtual void SetCorrectionDescriptionNull() {
                this[this.tableRemitTest.CorrectionDescriptionColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCorrectionScriptNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCorrectionScriptNull
            /// </summary>
            public virtual bool IsCorrectionScriptNull() {
                return this.IsNull(this.tableRemitTest.CorrectionScriptColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCorrectionScriptNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCorrectionScriptNull
            /// </summary>
            public virtual void SetCorrectionScriptNull() {
                this[this.tableRemitTest.CorrectionScriptColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDateChangedNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDateChangedNull
            /// </summary>
            public virtual bool IsDateChangedNull() {
                return this.IsNull(this.tableRemitTest.DateChangedColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDateChangedNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDateChangedNull
            /// </summary>
            public virtual void SetDateChangedNull() {
                this[this.tableRemitTest.DateChangedColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsUserChangedInstanceNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsUserChangedInstanceNull
            /// </summary>
            public virtual bool IsUserChangedInstanceNull() {
                return this.IsNull(this.tableRemitTest.UserChangedInstanceColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetUserChangedInstanceNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetUserChangedInstanceNull
            /// </summary>
            public virtual void SetUserChangedInstanceNull() {
                this[this.tableRemitTest.UserChangedInstanceColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsSequenceIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsSequenceIDNull
            /// </summary>
            public virtual bool IsSequenceIDNull() {
                return this.IsNull(this.tableRemitTest.SequenceIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetSequenceIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetSequenceIDNull
            /// </summary>
            public virtual void SetSequenceIDNull() {
                this[this.tableRemitTest.SequenceIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDeletedTFNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDeletedTFNull
            /// </summary>
            public virtual bool IsDeletedTFNull() {
                return this.IsNull(this.tableRemitTest.DeletedTFColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDeletedTFNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDeletedTFNull
            /// </summary>
            public virtual void SetDeletedTFNull() {
                this[this.tableRemitTest.DeletedTFColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class RemitTestRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private RemitTestRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public RemitTestRowChangeEvent(RemitTestRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual RemitTestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
