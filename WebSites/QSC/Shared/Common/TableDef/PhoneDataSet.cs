//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: PhoneDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class PhoneDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tablePhone
        /// </summary>
        protected PhoneDataTable tablePhone;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public PhoneDataSet() {
            this.tablePhone = this.CreatePhoneDataTable();
            this.Tables.Add(this.tablePhone);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected PhoneDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Phone"] != null)) {
                    this.Tables.Add(this.CreatePhoneDataTable(ds.Tables["Phone"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: Phone
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual PhoneDataTable Phone {
            get {
                return this.tablePhone;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            PhoneDataSet cln = ((PhoneDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Phone"] != null)) {
                this.Tables.Add(this.CreatePhoneDataTable(ds.Tables["Phone"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tablePhone = ((PhoneDataTable)(this.Tables["Phone"]));
            if ((this.tablePhone != null)) {
                this.tablePhone.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "PhoneDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PhoneDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablePhone = this.CreatePhoneDataTable();
            this.Tables.Add(this.tablePhone);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializePhone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializePhone
        /// </summary>
        protected virtual bool ShouldSerializePhone() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreatePhoneDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreatePhoneDataTable
        /// </summary>
        protected virtual PhoneDataTable CreatePhoneDataTable() {
            return new PhoneDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreatePhoneDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreatePhoneDataTable
        /// </summary>
        protected virtual PhoneDataTable CreatePhoneDataTable(DataTable table) {
            return new PhoneDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: PhoneRowChangeEventHandler
        /// </summary>
        public delegate void PhoneRowChangeEventHandler(object sender, PhoneRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: PhoneDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class PhoneDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnType
            /// </summary>
            protected DataColumn columnType;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnPhoneListID
            /// </summary>
            protected DataColumn columnPhoneListID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnPhoneNumber
            /// </summary>
            protected DataColumn columnPhoneNumber;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnBestTimeToCall
            /// </summary>
            protected DataColumn columnBestTimeToCall;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public PhoneDataTable() : 
                    base("Phone") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public PhoneDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: TypeColumn
            /// </summary>
            public virtual DataColumnExtended TypeColumn {
                get {
                    return ((DataColumnExtended)(this.columnType));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PhoneListIDColumn
            /// </summary>
            public virtual DataColumnExtended PhoneListIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnPhoneListID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PhoneNumberColumn
            /// </summary>
            public virtual DataColumnExtended PhoneNumberColumn {
                get {
                    return ((DataColumnExtended)(this.columnPhoneNumber));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: BestTimeToCallColumn
            /// </summary>
            public virtual DataColumnExtended BestTimeToCallColumn {
                get {
                    return ((DataColumnExtended)(this.columnBestTimeToCall));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual PhoneRow this[int index] {
                get {
                    return ((PhoneRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: PhoneRowChanged
            /// </summary>
            public event PhoneRowChangeEventHandler PhoneRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: PhoneRowChanging
            /// </summary>
            public event PhoneRowChangeEventHandler PhoneRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: PhoneRowDeleted
            /// </summary>
            public event PhoneRowChangeEventHandler PhoneRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: PhoneRowDeleting
            /// </summary>
            public event PhoneRowChangeEventHandler PhoneRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddPhoneRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddPhoneRow
            /// </summary>
            public virtual void AddPhoneRow(PhoneRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddPhoneRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddPhoneRow
            /// </summary>
            public virtual PhoneRow AddPhoneRow(int Type, int PhoneListID, string PhoneNumber, string BestTimeToCall) {
                PhoneRow rowPhoneRow = ((PhoneRow)(this.NewRow()));
                rowPhoneRow.ItemArray = new object[] {
                        null,
                        Type,
                        PhoneListID,
                        PhoneNumber,
                        BestTimeToCall};
                this.Rows.Add(rowPhoneRow);
                return rowPhoneRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual PhoneRow FindByID(int ID) {
                return ((PhoneRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                PhoneDataTable cln = ((PhoneDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new PhoneDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnType = this.Columns["Type"];
                this.columnPhoneListID = this.Columns["PhoneListID"];
                this.columnPhoneNumber = this.Columns["PhoneNumber"];
                this.columnBestTimeToCall = this.Columns["BestTimeToCall"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnID = new DataColumnExtended("ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnType = new DataColumnExtended("Type", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnType);
                this.columnPhoneListID = new DataColumnExtended("PhoneListID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhoneListID);
                this.columnPhoneNumber = new DataColumnExtended("PhoneNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhoneNumber);
                this.columnBestTimeToCall = new DataColumnExtended("BestTimeToCall", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBestTimeToCall);
                this.Constraints.Add(new UniqueConstraint("PhoneDataSetKey1", new DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnType.Caption = "Phone Type";
                this.columnType.DefaultValue = 30505;
                this.columnPhoneNumber.Caption = "Phone Number";
                this.columnPhoneNumber.DefaultValue = "";
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewPhoneRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewPhoneRow
            /// </summary>
            public virtual PhoneRow NewPhoneRow() {
                return ((PhoneRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PhoneRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(PhoneRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PhoneRowChanged != null)) {
                    this.PhoneRowChanged(this, new PhoneRowChangeEvent(((PhoneRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PhoneRowChanging != null)) {
                    this.PhoneRowChanging(this, new PhoneRowChangeEvent(((PhoneRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PhoneRowDeleted != null)) {
                    this.PhoneRowDeleted(this, new PhoneRowChangeEvent(((PhoneRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PhoneRowDeleting != null)) {
                    this.PhoneRowDeleting(this, new PhoneRowChangeEvent(((PhoneRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemovePhoneRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemovePhoneRow
            /// </summary>
            public virtual void RemovePhoneRow(PhoneRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class PhoneRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tablePhone
            /// </summary>
            private PhoneDataTable tablePhone;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal PhoneRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePhone = ((PhoneDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int ID {
                get {
                    return ((int)(this[this.tablePhone.IDColumn]));
                }
                set {
                    this[this.tablePhone.IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Type
            /// </summary>
            public virtual int Type {
                get {
                    if (this.IsTypeNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tablePhone.TypeColumn]));
                    }
                }
                set {
                    this[this.tablePhone.TypeColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PhoneListID
            /// </summary>
            public virtual int PhoneListID {
                get {
                    try {
                        return ((int)(this[this.tablePhone.PhoneListIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePhone.PhoneListIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PhoneNumber
            /// </summary>
            public virtual string PhoneNumber {
                get {
                    if (this.IsPhoneNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePhone.PhoneNumberColumn]));
                    }
                }
                set {
                    this[this.tablePhone.PhoneNumberColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: BestTimeToCall
            /// </summary>
            public virtual string BestTimeToCall {
                get {
                    if (this.IsBestTimeToCallNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePhone.BestTimeToCallColumn]));
                    }
                }
                set {
                    this[this.tablePhone.BestTimeToCallColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsTypeNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsTypeNull
            /// </summary>
            public virtual bool IsTypeNull() {
                return this.IsNull(this.tablePhone.TypeColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetTypeNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetTypeNull
            /// </summary>
            public virtual void SetTypeNull() {
                this[this.tablePhone.TypeColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPhoneListIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPhoneListIDNull
            /// </summary>
            public virtual bool IsPhoneListIDNull() {
                return this.IsNull(this.tablePhone.PhoneListIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPhoneListIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPhoneListIDNull
            /// </summary>
            public virtual void SetPhoneListIDNull() {
                this[this.tablePhone.PhoneListIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPhoneNumberNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPhoneNumberNull
            /// </summary>
            public virtual bool IsPhoneNumberNull() {
                return this.IsNull(this.tablePhone.PhoneNumberColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPhoneNumberNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPhoneNumberNull
            /// </summary>
            public virtual void SetPhoneNumberNull() {
                this[this.tablePhone.PhoneNumberColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsBestTimeToCallNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsBestTimeToCallNull
            /// </summary>
            public virtual bool IsBestTimeToCallNull() {
                return this.IsNull(this.tablePhone.BestTimeToCallColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetBestTimeToCallNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetBestTimeToCallNull
            /// </summary>
            public virtual void SetBestTimeToCallNull() {
                this[this.tablePhone.BestTimeToCallColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class PhoneRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private PhoneRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public PhoneRowChangeEvent(PhoneRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual PhoneRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
