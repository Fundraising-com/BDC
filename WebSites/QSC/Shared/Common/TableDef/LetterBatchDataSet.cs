//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: LetterBatchDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class LetterBatchDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableLetterBatch
        /// </summary>
        protected LetterBatchDataTable tableLetterBatch;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableLetterBatchCustomerOrderDetail
        /// </summary>
        protected LetterBatchCustomerOrderDetailDataTable tableLetterBatchCustomerOrderDetail;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableInactiveMagazineLetterBatch
        /// </summary>
        protected InactiveMagazineLetterBatchDataTable tableInactiveMagazineLetterBatch;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: relationLetterBatchLetterBatchCustomerOrderDetail
        /// </summary>
        protected DataRelation relationLetterBatchLetterBatchCustomerOrderDetail;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public LetterBatchDataSet() {
            this.tableLetterBatch = this.CreateLetterBatchDataTable();
            this.Tables.Add(this.tableLetterBatch);
            this.tableLetterBatchCustomerOrderDetail = this.CreateLetterBatchCustomerOrderDetailDataTable();
            this.Tables.Add(this.tableLetterBatchCustomerOrderDetail);
            this.tableInactiveMagazineLetterBatch = this.CreateInactiveMagazineLetterBatchDataTable();
            this.Tables.Add(this.tableInactiveMagazineLetterBatch);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected LetterBatchDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["LetterBatch"] != null)) {
                    this.Tables.Add(this.CreateLetterBatchDataTable(ds.Tables["LetterBatch"]));
                }
                if ((ds.Tables["LetterBatchCustomerOrderDetail"] != null)) {
                    this.Tables.Add(this.CreateLetterBatchCustomerOrderDetailDataTable(ds.Tables["LetterBatchCustomerOrderDetail"]));
                }
                if ((ds.Tables["InactiveMagazineLetterBatch"] != null)) {
                    this.Tables.Add(this.CreateInactiveMagazineLetterBatchDataTable(ds.Tables["InactiveMagazineLetterBatch"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: LetterBatch
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual LetterBatchDataTable LetterBatch {
            get {
                return this.tableLetterBatch;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: LetterBatchCustomerOrderDetail
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual LetterBatchCustomerOrderDetailDataTable LetterBatchCustomerOrderDetail {
            get {
                return this.tableLetterBatchCustomerOrderDetail;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: InactiveMagazineLetterBatch
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual InactiveMagazineLetterBatchDataTable InactiveMagazineLetterBatch {
            get {
                return this.tableInactiveMagazineLetterBatch;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            LetterBatchDataSet cln = ((LetterBatchDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["LetterBatch"] != null)) {
                this.Tables.Add(this.CreateLetterBatchDataTable(ds.Tables["LetterBatch"]));
            }
            if ((ds.Tables["LetterBatchCustomerOrderDetail"] != null)) {
                this.Tables.Add(this.CreateLetterBatchCustomerOrderDetailDataTable(ds.Tables["LetterBatchCustomerOrderDetail"]));
            }
            if ((ds.Tables["InactiveMagazineLetterBatch"] != null)) {
                this.Tables.Add(this.CreateInactiveMagazineLetterBatchDataTable(ds.Tables["InactiveMagazineLetterBatch"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableLetterBatch = ((LetterBatchDataTable)(this.Tables["LetterBatch"]));
            if ((this.tableLetterBatch != null)) {
                this.tableLetterBatch.InitVars();
            }
            this.tableLetterBatchCustomerOrderDetail = ((LetterBatchCustomerOrderDetailDataTable)(this.Tables["LetterBatchCustomerOrderDetail"]));
            if ((this.tableLetterBatchCustomerOrderDetail != null)) {
                this.tableLetterBatchCustomerOrderDetail.InitVars();
            }
            this.tableInactiveMagazineLetterBatch = ((InactiveMagazineLetterBatchDataTable)(this.Tables["InactiveMagazineLetterBatch"]));
            if ((this.tableInactiveMagazineLetterBatch != null)) {
                this.tableInactiveMagazineLetterBatch.InitVars();
            }
            this.relationLetterBatchLetterBatchCustomerOrderDetail = this.Relations["LetterBatchLetterBatchCustomerOrderDetail"];
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "LetterBatchDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LetterBatchDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableLetterBatch = this.CreateLetterBatchDataTable();
            this.Tables.Add(this.tableLetterBatch);
            this.tableLetterBatchCustomerOrderDetail = this.CreateLetterBatchCustomerOrderDetailDataTable();
            this.Tables.Add(this.tableLetterBatchCustomerOrderDetail);
            this.tableInactiveMagazineLetterBatch = this.CreateInactiveMagazineLetterBatchDataTable();
            this.Tables.Add(this.tableInactiveMagazineLetterBatch);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("LetterBatchLetterBatchCustomerOrderDetail", new DataColumn[] {
                        this.tableLetterBatch.IDColumn}, new DataColumn[] {
                        this.tableLetterBatchCustomerOrderDetail.LetterBatchIDColumn});
            this.tableLetterBatchCustomerOrderDetail.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationLetterBatchLetterBatchCustomerOrderDetail = new DataRelation("LetterBatchLetterBatchCustomerOrderDetail", new DataColumn[] {
                        this.tableLetterBatch.IDColumn}, new DataColumn[] {
                        this.tableLetterBatchCustomerOrderDetail.LetterBatchIDColumn}, false);
            this.Relations.Add(this.relationLetterBatchLetterBatchCustomerOrderDetail);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeLetterBatch
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeLetterBatch
        /// </summary>
        protected virtual bool ShouldSerializeLetterBatch() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeLetterBatchCustomerOrderDetail
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeLetterBatchCustomerOrderDetail
        /// </summary>
        protected virtual bool ShouldSerializeLetterBatchCustomerOrderDetail() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeInactiveMagazineLetterBatch
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeInactiveMagazineLetterBatch
        /// </summary>
        protected virtual bool ShouldSerializeInactiveMagazineLetterBatch() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterBatchDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterBatchDataTable
        /// </summary>
        protected virtual LetterBatchDataTable CreateLetterBatchDataTable() {
            return new LetterBatchDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterBatchDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterBatchDataTable
        /// </summary>
        protected virtual LetterBatchDataTable CreateLetterBatchDataTable(DataTable table) {
            return new LetterBatchDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterBatchCustomerOrderDetailDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterBatchCustomerOrderDetailDataTable
        /// </summary>
        protected virtual LetterBatchCustomerOrderDetailDataTable CreateLetterBatchCustomerOrderDetailDataTable() {
            return new LetterBatchCustomerOrderDetailDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterBatchCustomerOrderDetailDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateLetterBatchCustomerOrderDetailDataTable
        /// </summary>
        protected virtual LetterBatchCustomerOrderDetailDataTable CreateLetterBatchCustomerOrderDetailDataTable(DataTable table) {
            return new LetterBatchCustomerOrderDetailDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateInactiveMagazineLetterBatchDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateInactiveMagazineLetterBatchDataTable
        /// </summary>
        protected virtual InactiveMagazineLetterBatchDataTable CreateInactiveMagazineLetterBatchDataTable() {
            return new InactiveMagazineLetterBatchDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateInactiveMagazineLetterBatchDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateInactiveMagazineLetterBatchDataTable
        /// </summary>
        protected virtual InactiveMagazineLetterBatchDataTable CreateInactiveMagazineLetterBatchDataTable(DataTable table) {
            return new InactiveMagazineLetterBatchDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: LetterBatchRowChangeEventHandler
        /// </summary>
        public delegate void LetterBatchRowChangeEventHandler(object sender, LetterBatchRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: LetterBatchCustomerOrderDetailRowChangeEventHandler
        /// </summary>
        public delegate void LetterBatchCustomerOrderDetailRowChangeEventHandler(object sender, LetterBatchCustomerOrderDetailRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: InactiveMagazineLetterBatchRowChangeEventHandler
        /// </summary>
        public delegate void InactiveMagazineLetterBatchRowChangeEventHandler(object sender, InactiveMagazineLetterBatchRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: LetterBatchDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterBatchDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnID
            /// </summary>
            protected DataColumn columnID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLetterTemplateID
            /// </summary>
            protected DataColumn columnLetterTemplateID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLetterTemplateName
            /// </summary>
            protected DataColumn columnLetterTemplateName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLetterBatchType
            /// </summary>
            protected DataColumn columnLetterBatchType;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLetterBatchTypeDescription
            /// </summary>
            protected DataColumn columnLetterBatchTypeDescription;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateFrom
            /// </summary>
            protected DataColumn columnDateFrom;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateTo
            /// </summary>
            protected DataColumn columnDateTo;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnRunID
            /// </summary>
            protected DataColumn columnRunID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnIsPrinted
            /// </summary>
            protected DataColumn columnIsPrinted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDatePrinted
            /// </summary>
            protected DataColumn columnDatePrinted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnIsLocked
            /// </summary>
            protected DataColumn columnIsLocked;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnUserIDCreated
            /// </summary>
            protected DataColumn columnUserIDCreated;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnUserNameCreated
            /// </summary>
            protected DataColumn columnUserNameCreated;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateCreated
            /// </summary>
            protected DataColumn columnDateCreated;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDeletedTF
            /// </summary>
            protected DataColumn columnDeletedTF;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnReportName
            /// </summary>
            protected DataColumn columnReportName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnSubscriptionCount
            /// </summary>
            protected DataColumn columnSubscriptionCount;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterBatchDataTable() : 
                    base("LetterBatch") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterBatchDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IDColumn
            /// </summary>
            public virtual DataColumnExtended IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterTemplateIDColumn
            /// </summary>
            public virtual DataColumnExtended LetterTemplateIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnLetterTemplateID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterTemplateNameColumn
            /// </summary>
            public virtual DataColumnExtended LetterTemplateNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnLetterTemplateName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchTypeColumn
            /// </summary>
            public virtual DataColumnExtended LetterBatchTypeColumn {
                get {
                    return ((DataColumnExtended)(this.columnLetterBatchType));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchTypeDescriptionColumn
            /// </summary>
            public virtual DataColumnExtended LetterBatchTypeDescriptionColumn {
                get {
                    return ((DataColumnExtended)(this.columnLetterBatchTypeDescription));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateFromColumn
            /// </summary>
            public virtual DataColumnExtended DateFromColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateFrom));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateToColumn
            /// </summary>
            public virtual DataColumnExtended DateToColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateTo));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: RunIDColumn
            /// </summary>
            public virtual DataColumnExtended RunIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnRunID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsPrintedColumn
            /// </summary>
            public virtual DataColumnExtended IsPrintedColumn {
                get {
                    return ((DataColumnExtended)(this.columnIsPrinted));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DatePrintedColumn
            /// </summary>
            public virtual DataColumnExtended DatePrintedColumn {
                get {
                    return ((DataColumnExtended)(this.columnDatePrinted));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsLockedColumn
            /// </summary>
            public virtual DataColumnExtended IsLockedColumn {
                get {
                    return ((DataColumnExtended)(this.columnIsLocked));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: UserIDCreatedColumn
            /// </summary>
            public virtual DataColumnExtended UserIDCreatedColumn {
                get {
                    return ((DataColumnExtended)(this.columnUserIDCreated));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: UserNameCreatedColumn
            /// </summary>
            public virtual DataColumnExtended UserNameCreatedColumn {
                get {
                    return ((DataColumnExtended)(this.columnUserNameCreated));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateCreatedColumn
            /// </summary>
            public virtual DataColumnExtended DateCreatedColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateCreated));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DeletedTFColumn
            /// </summary>
            public virtual DataColumnExtended DeletedTFColumn {
                get {
                    return ((DataColumnExtended)(this.columnDeletedTF));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ReportNameColumn
            /// </summary>
            public virtual DataColumnExtended ReportNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnReportName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: SubscriptionCountColumn
            /// </summary>
            public virtual DataColumnExtended SubscriptionCountColumn {
                get {
                    return ((DataColumnExtended)(this.columnSubscriptionCount));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual LetterBatchRow this[int index] {
                get {
                    return ((LetterBatchRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterBatchRowChanged
            /// </summary>
            public event LetterBatchRowChangeEventHandler LetterBatchRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterBatchRowChanging
            /// </summary>
            public event LetterBatchRowChangeEventHandler LetterBatchRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterBatchRowDeleted
            /// </summary>
            public event LetterBatchRowChangeEventHandler LetterBatchRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterBatchRowDeleting
            /// </summary>
            public event LetterBatchRowChangeEventHandler LetterBatchRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterBatchRow
            /// </summary>
            public virtual void AddLetterBatchRow(LetterBatchRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterBatchRow
            /// </summary>
            public virtual LetterBatchRow AddLetterBatchRow(
                        int LetterTemplateID, 
                        string LetterTemplateName, 
                        int LetterBatchType, 
                        string LetterBatchTypeDescription, 
                        System.DateTime DateFrom, 
                        System.DateTime DateTo, 
                        int RunID, 
                        bool IsPrinted, 
                        System.DateTime DatePrinted, 
                        bool IsLocked, 
                        int UserIDCreated, 
                        string UserNameCreated, 
                        System.DateTime DateCreated, 
                        bool DeletedTF, 
                        string ReportName, 
                        int SubscriptionCount) {
                LetterBatchRow rowLetterBatchRow = ((LetterBatchRow)(this.NewRow()));
                rowLetterBatchRow.ItemArray = new object[] {
                        null,
                        LetterTemplateID,
                        LetterTemplateName,
                        LetterBatchType,
                        LetterBatchTypeDescription,
                        DateFrom,
                        DateTo,
                        RunID,
                        IsPrinted,
                        DatePrinted,
                        IsLocked,
                        UserIDCreated,
                        UserNameCreated,
                        DateCreated,
                        DeletedTF,
                        ReportName,
                        SubscriptionCount};
                this.Rows.Add(rowLetterBatchRow);
                return rowLetterBatchRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByID
            /// </summary>
            public virtual LetterBatchRow FindByID(int ID) {
                return ((LetterBatchRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                LetterBatchDataTable cln = ((LetterBatchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new LetterBatchDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnLetterTemplateID = this.Columns["LetterTemplateID"];
                this.columnLetterTemplateName = this.Columns["LetterTemplateName"];
                this.columnLetterBatchType = this.Columns["LetterBatchType"];
                this.columnLetterBatchTypeDescription = this.Columns["LetterBatchTypeDescription"];
                this.columnDateFrom = this.Columns["DateFrom"];
                this.columnDateTo = this.Columns["DateTo"];
                this.columnRunID = this.Columns["RunID"];
                this.columnIsPrinted = this.Columns["IsPrinted"];
                this.columnDatePrinted = this.Columns["DatePrinted"];
                this.columnIsLocked = this.Columns["IsLocked"];
                this.columnUserIDCreated = this.Columns["UserIDCreated"];
                this.columnUserNameCreated = this.Columns["UserNameCreated"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnDeletedTF = this.Columns["DeletedTF"];
                this.columnReportName = this.Columns["ReportName"];
                this.columnSubscriptionCount = this.Columns["SubscriptionCount"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnID = new DataColumnExtended("ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnLetterTemplateID = new DataColumnExtended("LetterTemplateID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLetterTemplateID);
                this.columnLetterTemplateName = new DataColumnExtended("LetterTemplateName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLetterTemplateName);
                this.columnLetterBatchType = new DataColumnExtended("LetterBatchType", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLetterBatchType);
                this.columnLetterBatchTypeDescription = new DataColumnExtended("LetterBatchTypeDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLetterBatchTypeDescription);
                this.columnDateFrom = new DataColumnExtended("DateFrom", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new DataColumnExtended("DateTo", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTo);
                this.columnRunID = new DataColumnExtended("RunID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRunID);
                this.columnIsPrinted = new DataColumnExtended("IsPrinted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsPrinted);
                this.columnDatePrinted = new DataColumnExtended("DatePrinted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDatePrinted);
                this.columnIsLocked = new DataColumnExtended("IsLocked", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsLocked);
                this.columnUserIDCreated = new DataColumnExtended("UserIDCreated", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserIDCreated);
                this.columnUserNameCreated = new DataColumnExtended("UserNameCreated", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserNameCreated);
                this.columnDateCreated = new DataColumnExtended("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnDeletedTF = new DataColumnExtended("DeletedTF", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedTF);
                this.columnReportName = new DataColumnExtended("ReportName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportName);
                this.columnSubscriptionCount = new DataColumnExtended("SubscriptionCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSubscriptionCount);
                this.Constraints.Add(new UniqueConstraint("LetterBatchDataSetKey1", new DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnLetterTemplateID.AllowDBNull = false;
                this.columnLetterTemplateName.AllowDBNull = false;
                this.columnLetterBatchType.AllowDBNull = false;
                this.columnLetterBatchTypeDescription.AllowDBNull = false;
                this.columnIsPrinted.AllowDBNull = false;
                this.columnIsLocked.AllowDBNull = false;
                this.columnUserIDCreated.AllowDBNull = false;
                this.columnUserNameCreated.AllowDBNull = false;
                this.columnDateCreated.AllowDBNull = false;
                this.columnDeletedTF.AllowDBNull = false;
                this.columnReportName.AllowDBNull = false;
                this.columnSubscriptionCount.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewLetterBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewLetterBatchRow
            /// </summary>
            public virtual LetterBatchRow NewLetterBatchRow() {
                return ((LetterBatchRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new LetterBatchRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(LetterBatchRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LetterBatchRowChanged != null)) {
                    this.LetterBatchRowChanged(this, new LetterBatchRowChangeEvent(((LetterBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LetterBatchRowChanging != null)) {
                    this.LetterBatchRowChanging(this, new LetterBatchRowChangeEvent(((LetterBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LetterBatchRowDeleted != null)) {
                    this.LetterBatchRowDeleted(this, new LetterBatchRowChangeEvent(((LetterBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LetterBatchRowDeleting != null)) {
                    this.LetterBatchRowDeleting(this, new LetterBatchRowChangeEvent(((LetterBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveLetterBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveLetterBatchRow
            /// </summary>
            public virtual void RemoveLetterBatchRow(LetterBatchRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterBatchRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableLetterBatch
            /// </summary>
            private LetterBatchDataTable tableLetterBatch;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal LetterBatchRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableLetterBatch = ((LetterBatchDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ID
            /// </summary>
            public virtual int ID {
                get {
                    return ((int)(this[this.tableLetterBatch.IDColumn]));
                }
                set {
                    this[this.tableLetterBatch.IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterTemplateID
            /// </summary>
            public virtual int LetterTemplateID {
                get {
                    return ((int)(this[this.tableLetterBatch.LetterTemplateIDColumn]));
                }
                set {
                    this[this.tableLetterBatch.LetterTemplateIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterTemplateName
            /// </summary>
            public virtual string LetterTemplateName {
                get {
                    return ((string)(this[this.tableLetterBatch.LetterTemplateNameColumn]));
                }
                set {
                    this[this.tableLetterBatch.LetterTemplateNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchType
            /// </summary>
            public virtual int LetterBatchType {
                get {
                    return ((int)(this[this.tableLetterBatch.LetterBatchTypeColumn]));
                }
                set {
                    this[this.tableLetterBatch.LetterBatchTypeColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchTypeDescription
            /// </summary>
            public virtual string LetterBatchTypeDescription {
                get {
                    return ((string)(this[this.tableLetterBatch.LetterBatchTypeDescriptionColumn]));
                }
                set {
                    this[this.tableLetterBatch.LetterBatchTypeDescriptionColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateFrom
            /// </summary>
            public virtual System.DateTime DateFrom {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableLetterBatch.DateFromColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterBatch.DateFromColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateTo
            /// </summary>
            public virtual System.DateTime DateTo {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableLetterBatch.DateToColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterBatch.DateToColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: RunID
            /// </summary>
            public virtual int RunID {
                get {
                    if (this.IsRunIDNull()) {
                        return -1;
                    }
                    else {
                        return ((int)(this[this.tableLetterBatch.RunIDColumn]));
                    }
                }
                set {
                    this[this.tableLetterBatch.RunIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsPrinted
            /// </summary>
            public virtual bool IsPrinted {
                get {
                    return ((bool)(this[this.tableLetterBatch.IsPrintedColumn]));
                }
                set {
                    this[this.tableLetterBatch.IsPrintedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DatePrinted
            /// </summary>
            public virtual System.DateTime DatePrinted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableLetterBatch.DatePrintedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterBatch.DatePrintedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IsLocked
            /// </summary>
            public virtual bool IsLocked {
                get {
                    return ((bool)(this[this.tableLetterBatch.IsLockedColumn]));
                }
                set {
                    this[this.tableLetterBatch.IsLockedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: UserIDCreated
            /// </summary>
            public virtual int UserIDCreated {
                get {
                    return ((int)(this[this.tableLetterBatch.UserIDCreatedColumn]));
                }
                set {
                    this[this.tableLetterBatch.UserIDCreatedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: UserNameCreated
            /// </summary>
            public virtual string UserNameCreated {
                get {
                    return ((string)(this[this.tableLetterBatch.UserNameCreatedColumn]));
                }
                set {
                    this[this.tableLetterBatch.UserNameCreatedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateCreated
            /// </summary>
            public virtual System.DateTime DateCreated {
                get {
                    return ((System.DateTime)(this[this.tableLetterBatch.DateCreatedColumn]));
                }
                set {
                    this[this.tableLetterBatch.DateCreatedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DeletedTF
            /// </summary>
            public virtual bool DeletedTF {
                get {
                    return ((bool)(this[this.tableLetterBatch.DeletedTFColumn]));
                }
                set {
                    this[this.tableLetterBatch.DeletedTFColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ReportName
            /// </summary>
            public virtual string ReportName {
                get {
                    return ((string)(this[this.tableLetterBatch.ReportNameColumn]));
                }
                set {
                    this[this.tableLetterBatch.ReportNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: SubscriptionCount
            /// </summary>
            public virtual int SubscriptionCount {
                get {
                    return ((int)(this[this.tableLetterBatch.SubscriptionCountColumn]));
                }
                set {
                    this[this.tableLetterBatch.SubscriptionCountColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDateFromNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDateFromNull
            /// </summary>
            public virtual bool IsDateFromNull() {
                return this.IsNull(this.tableLetterBatch.DateFromColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDateFromNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDateFromNull
            /// </summary>
            public virtual void SetDateFromNull() {
                this[this.tableLetterBatch.DateFromColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDateToNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDateToNull
            /// </summary>
            public virtual bool IsDateToNull() {
                return this.IsNull(this.tableLetterBatch.DateToColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDateToNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDateToNull
            /// </summary>
            public virtual void SetDateToNull() {
                this[this.tableLetterBatch.DateToColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsRunIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsRunIDNull
            /// </summary>
            public virtual bool IsRunIDNull() {
                return this.IsNull(this.tableLetterBatch.RunIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetRunIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetRunIDNull
            /// </summary>
            public virtual void SetRunIDNull() {
                this[this.tableLetterBatch.RunIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDatePrintedNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDatePrintedNull
            /// </summary>
            public virtual bool IsDatePrintedNull() {
                return this.IsNull(this.tableLetterBatch.DatePrintedColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDatePrintedNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDatePrintedNull
            /// </summary>
            public virtual void SetDatePrintedNull() {
                this[this.tableLetterBatch.DatePrintedColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetLetterBatchCustomerOrderDetailRows
            /// </summary>
            public virtual LetterBatchCustomerOrderDetailRow[] GetLetterBatchCustomerOrderDetailRows() {
                return ((LetterBatchCustomerOrderDetailRow[])(this.GetChildRows(this.Table.ChildRelations["LetterBatchLetterBatchCustomerOrderDetail"])));
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterBatchRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private LetterBatchRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterBatchRowChangeEvent(LetterBatchRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual LetterBatchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: LetterBatchCustomerOrderDetailDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterBatchCustomerOrderDetailDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLetterBatchID
            /// </summary>
            protected DataColumn columnLetterBatchID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCustomerOrderHeaderInstance
            /// </summary>
            protected DataColumn columnCustomerOrderHeaderInstance;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnTransID
            /// </summary>
            protected DataColumn columnTransID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterBatchCustomerOrderDetailDataTable() : 
                    base("LetterBatchCustomerOrderDetail") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterBatchCustomerOrderDetailDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchIDColumn
            /// </summary>
            public virtual DataColumnExtended LetterBatchIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnLetterBatchID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CustomerOrderHeaderInstanceColumn
            /// </summary>
            public virtual DataColumnExtended CustomerOrderHeaderInstanceColumn {
                get {
                    return ((DataColumnExtended)(this.columnCustomerOrderHeaderInstance));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: TransIDColumn
            /// </summary>
            public virtual DataColumnExtended TransIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnTransID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual LetterBatchCustomerOrderDetailRow this[int index] {
                get {
                    return ((LetterBatchCustomerOrderDetailRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterBatchCustomerOrderDetailRowChanged
            /// </summary>
            public event LetterBatchCustomerOrderDetailRowChangeEventHandler LetterBatchCustomerOrderDetailRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterBatchCustomerOrderDetailRowChanging
            /// </summary>
            public event LetterBatchCustomerOrderDetailRowChangeEventHandler LetterBatchCustomerOrderDetailRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterBatchCustomerOrderDetailRowDeleted
            /// </summary>
            public event LetterBatchCustomerOrderDetailRowChangeEventHandler LetterBatchCustomerOrderDetailRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: LetterBatchCustomerOrderDetailRowDeleting
            /// </summary>
            public event LetterBatchCustomerOrderDetailRowChangeEventHandler LetterBatchCustomerOrderDetailRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterBatchCustomerOrderDetailRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterBatchCustomerOrderDetailRow
            /// </summary>
            public virtual void AddLetterBatchCustomerOrderDetailRow(LetterBatchCustomerOrderDetailRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterBatchCustomerOrderDetailRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddLetterBatchCustomerOrderDetailRow
            /// </summary>
            public virtual LetterBatchCustomerOrderDetailRow AddLetterBatchCustomerOrderDetailRow(LetterBatchRow parentLetterBatchRowByLetterBatchLetterBatchCustomerOrderDetail, int CustomerOrderHeaderInstance, int TransID) {
                LetterBatchCustomerOrderDetailRow rowLetterBatchCustomerOrderDetailRow = ((LetterBatchCustomerOrderDetailRow)(this.NewRow()));
                rowLetterBatchCustomerOrderDetailRow.ItemArray = new object[] {
                        parentLetterBatchRowByLetterBatchLetterBatchCustomerOrderDetail[0],
                        CustomerOrderHeaderInstance,
                        TransID};
                this.Rows.Add(rowLetterBatchCustomerOrderDetailRow);
                return rowLetterBatchCustomerOrderDetailRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByLetterBatchID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByLetterBatchID
            /// </summary>
            public virtual LetterBatchCustomerOrderDetailRow FindByLetterBatchID(int LetterBatchID) {
                return ((LetterBatchCustomerOrderDetailRow)(this.Rows.Find(new object[] {
                            LetterBatchID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                LetterBatchCustomerOrderDetailDataTable cln = ((LetterBatchCustomerOrderDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new LetterBatchCustomerOrderDetailDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnLetterBatchID = this.Columns["LetterBatchID"];
                this.columnCustomerOrderHeaderInstance = this.Columns["CustomerOrderHeaderInstance"];
                this.columnTransID = this.Columns["TransID"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnLetterBatchID = new DataColumnExtended("LetterBatchID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLetterBatchID);
                this.columnCustomerOrderHeaderInstance = new DataColumnExtended("CustomerOrderHeaderInstance", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCustomerOrderHeaderInstance);
                this.columnTransID = new DataColumnExtended("TransID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTransID);
                this.Constraints.Add(new UniqueConstraint("LetterBatchDataSetKey2", new DataColumn[] {
                                this.columnLetterBatchID}, true));
                this.columnLetterBatchID.AllowDBNull = false;
                this.columnLetterBatchID.Unique = true;
                this.columnCustomerOrderHeaderInstance.AllowDBNull = false;
                this.columnTransID.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewLetterBatchCustomerOrderDetailRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewLetterBatchCustomerOrderDetailRow
            /// </summary>
            public virtual LetterBatchCustomerOrderDetailRow NewLetterBatchCustomerOrderDetailRow() {
                return ((LetterBatchCustomerOrderDetailRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new LetterBatchCustomerOrderDetailRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(LetterBatchCustomerOrderDetailRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LetterBatchCustomerOrderDetailRowChanged != null)) {
                    this.LetterBatchCustomerOrderDetailRowChanged(this, new LetterBatchCustomerOrderDetailRowChangeEvent(((LetterBatchCustomerOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LetterBatchCustomerOrderDetailRowChanging != null)) {
                    this.LetterBatchCustomerOrderDetailRowChanging(this, new LetterBatchCustomerOrderDetailRowChangeEvent(((LetterBatchCustomerOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LetterBatchCustomerOrderDetailRowDeleted != null)) {
                    this.LetterBatchCustomerOrderDetailRowDeleted(this, new LetterBatchCustomerOrderDetailRowChangeEvent(((LetterBatchCustomerOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LetterBatchCustomerOrderDetailRowDeleting != null)) {
                    this.LetterBatchCustomerOrderDetailRowDeleting(this, new LetterBatchCustomerOrderDetailRowChangeEvent(((LetterBatchCustomerOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveLetterBatchCustomerOrderDetailRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveLetterBatchCustomerOrderDetailRow
            /// </summary>
            public virtual void RemoveLetterBatchCustomerOrderDetailRow(LetterBatchCustomerOrderDetailRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterBatchCustomerOrderDetailRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableLetterBatchCustomerOrderDetail
            /// </summary>
            private LetterBatchCustomerOrderDetailDataTable tableLetterBatchCustomerOrderDetail;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal LetterBatchCustomerOrderDetailRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableLetterBatchCustomerOrderDetail = ((LetterBatchCustomerOrderDetailDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchID
            /// </summary>
            public virtual int LetterBatchID {
                get {
                    return ((int)(this[this.tableLetterBatchCustomerOrderDetail.LetterBatchIDColumn]));
                }
                set {
                    this[this.tableLetterBatchCustomerOrderDetail.LetterBatchIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CustomerOrderHeaderInstance
            /// </summary>
            public virtual int CustomerOrderHeaderInstance {
                get {
                    return ((int)(this[this.tableLetterBatchCustomerOrderDetail.CustomerOrderHeaderInstanceColumn]));
                }
                set {
                    this[this.tableLetterBatchCustomerOrderDetail.CustomerOrderHeaderInstanceColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: TransID
            /// </summary>
            public virtual int TransID {
                get {
                    return ((int)(this[this.tableLetterBatchCustomerOrderDetail.TransIDColumn]));
                }
                set {
                    this[this.tableLetterBatchCustomerOrderDetail.TransIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchRow
            /// </summary>
            public virtual LetterBatchRow LetterBatchRow {
                get {
                    return ((LetterBatchRow)(this.GetParentRow(this.Table.ParentRelations["LetterBatchLetterBatchCustomerOrderDetail"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LetterBatchLetterBatchCustomerOrderDetail"]);
                }
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class LetterBatchCustomerOrderDetailRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private LetterBatchCustomerOrderDetailRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public LetterBatchCustomerOrderDetailRowChangeEvent(LetterBatchCustomerOrderDetailRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual LetterBatchCustomerOrderDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: InactiveMagazineLetterBatchDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class InactiveMagazineLetterBatchDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLetterBatchID
            /// </summary>
            protected DataColumn columnLetterBatchID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnProductCode
            /// </summary>
            protected DataColumn columnProductCode;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnReason
            /// </summary>
            protected DataColumn columnReason;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public InactiveMagazineLetterBatchDataTable() : 
                    base("InactiveMagazineLetterBatch") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public InactiveMagazineLetterBatchDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchIDColumn
            /// </summary>
            public virtual DataColumnExtended LetterBatchIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnLetterBatchID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ProductCodeColumn
            /// </summary>
            public virtual DataColumnExtended ProductCodeColumn {
                get {
                    return ((DataColumnExtended)(this.columnProductCode));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ReasonColumn
            /// </summary>
            public virtual DataColumnExtended ReasonColumn {
                get {
                    return ((DataColumnExtended)(this.columnReason));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual InactiveMagazineLetterBatchRow this[int index] {
                get {
                    return ((InactiveMagazineLetterBatchRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: InactiveMagazineLetterBatchRowChanged
            /// </summary>
            public event InactiveMagazineLetterBatchRowChangeEventHandler InactiveMagazineLetterBatchRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: InactiveMagazineLetterBatchRowChanging
            /// </summary>
            public event InactiveMagazineLetterBatchRowChangeEventHandler InactiveMagazineLetterBatchRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: InactiveMagazineLetterBatchRowDeleted
            /// </summary>
            public event InactiveMagazineLetterBatchRowChangeEventHandler InactiveMagazineLetterBatchRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: InactiveMagazineLetterBatchRowDeleting
            /// </summary>
            public event InactiveMagazineLetterBatchRowChangeEventHandler InactiveMagazineLetterBatchRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddInactiveMagazineLetterBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddInactiveMagazineLetterBatchRow
            /// </summary>
            public virtual void AddInactiveMagazineLetterBatchRow(InactiveMagazineLetterBatchRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddInactiveMagazineLetterBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddInactiveMagazineLetterBatchRow
            /// </summary>
            public virtual InactiveMagazineLetterBatchRow AddInactiveMagazineLetterBatchRow(int LetterBatchID, string ProductCode, int Reason) {
                InactiveMagazineLetterBatchRow rowInactiveMagazineLetterBatchRow = ((InactiveMagazineLetterBatchRow)(this.NewRow()));
                rowInactiveMagazineLetterBatchRow.ItemArray = new object[] {
                        LetterBatchID,
                        ProductCode,
                        Reason};
                this.Rows.Add(rowInactiveMagazineLetterBatchRow);
                return rowInactiveMagazineLetterBatchRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByLetterBatchID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByLetterBatchID
            /// </summary>
            public virtual InactiveMagazineLetterBatchRow FindByLetterBatchID(int LetterBatchID) {
                return ((InactiveMagazineLetterBatchRow)(this.Rows.Find(new object[] {
                            LetterBatchID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                InactiveMagazineLetterBatchDataTable cln = ((InactiveMagazineLetterBatchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new InactiveMagazineLetterBatchDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnLetterBatchID = this.Columns["LetterBatchID"];
                this.columnProductCode = this.Columns["ProductCode"];
                this.columnReason = this.Columns["Reason"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnLetterBatchID = new DataColumnExtended("LetterBatchID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLetterBatchID);
                this.columnProductCode = new DataColumnExtended("ProductCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProductCode);
                this.columnReason = new DataColumnExtended("Reason", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReason);
                this.Constraints.Add(new UniqueConstraint("LetterBatchDataSetKey3", new DataColumn[] {
                                this.columnLetterBatchID}, true));
                this.columnLetterBatchID.AllowDBNull = false;
                this.columnLetterBatchID.Unique = true;
                this.columnProductCode.AllowDBNull = false;
                this.columnReason.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewInactiveMagazineLetterBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewInactiveMagazineLetterBatchRow
            /// </summary>
            public virtual InactiveMagazineLetterBatchRow NewInactiveMagazineLetterBatchRow() {
                return ((InactiveMagazineLetterBatchRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new InactiveMagazineLetterBatchRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(InactiveMagazineLetterBatchRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InactiveMagazineLetterBatchRowChanged != null)) {
                    this.InactiveMagazineLetterBatchRowChanged(this, new InactiveMagazineLetterBatchRowChangeEvent(((InactiveMagazineLetterBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InactiveMagazineLetterBatchRowChanging != null)) {
                    this.InactiveMagazineLetterBatchRowChanging(this, new InactiveMagazineLetterBatchRowChangeEvent(((InactiveMagazineLetterBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InactiveMagazineLetterBatchRowDeleted != null)) {
                    this.InactiveMagazineLetterBatchRowDeleted(this, new InactiveMagazineLetterBatchRowChangeEvent(((InactiveMagazineLetterBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InactiveMagazineLetterBatchRowDeleting != null)) {
                    this.InactiveMagazineLetterBatchRowDeleting(this, new InactiveMagazineLetterBatchRowChangeEvent(((InactiveMagazineLetterBatchRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveInactiveMagazineLetterBatchRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveInactiveMagazineLetterBatchRow
            /// </summary>
            public virtual void RemoveInactiveMagazineLetterBatchRow(InactiveMagazineLetterBatchRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class InactiveMagazineLetterBatchRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableInactiveMagazineLetterBatch
            /// </summary>
            private InactiveMagazineLetterBatchDataTable tableInactiveMagazineLetterBatch;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal InactiveMagazineLetterBatchRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableInactiveMagazineLetterBatch = ((InactiveMagazineLetterBatchDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LetterBatchID
            /// </summary>
            public virtual int LetterBatchID {
                get {
                    return ((int)(this[this.tableInactiveMagazineLetterBatch.LetterBatchIDColumn]));
                }
                set {
                    this[this.tableInactiveMagazineLetterBatch.LetterBatchIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ProductCode
            /// </summary>
            public virtual string ProductCode {
                get {
                    return ((string)(this[this.tableInactiveMagazineLetterBatch.ProductCodeColumn]));
                }
                set {
                    this[this.tableInactiveMagazineLetterBatch.ProductCodeColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Reason
            /// </summary>
            public virtual int Reason {
                get {
                    return ((int)(this[this.tableInactiveMagazineLetterBatch.ReasonColumn]));
                }
                set {
                    this[this.tableInactiveMagazineLetterBatch.ReasonColumn] = value;
                }
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class InactiveMagazineLetterBatchRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private InactiveMagazineLetterBatchRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public InactiveMagazineLetterBatchRowChangeEvent(InactiveMagazineLetterBatchRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual InactiveMagazineLetterBatchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
