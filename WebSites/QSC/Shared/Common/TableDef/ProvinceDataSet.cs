//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: ProvinceDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ProvinceDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableProvince
        /// </summary>
        protected ProvinceDataTable tableProvince;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public ProvinceDataSet() {
            this.tableProvince = this.CreateProvinceDataTable();
            this.Tables.Add(this.tableProvince);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected ProvinceDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Province"] != null)) {
                    this.Tables.Add(this.CreateProvinceDataTable(ds.Tables["Province"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: Province
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual ProvinceDataTable Province {
            get {
                return this.tableProvince;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            ProvinceDataSet cln = ((ProvinceDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Province"] != null)) {
                this.Tables.Add(this.CreateProvinceDataTable(ds.Tables["Province"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableProvince = ((ProvinceDataTable)(this.Tables["Province"]));
            if ((this.tableProvince != null)) {
                this.tableProvince.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "ProvinceDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProvinceDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableProvince = this.CreateProvinceDataTable();
            this.Tables.Add(this.tableProvince);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeProvince
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeProvince
        /// </summary>
        protected virtual bool ShouldSerializeProvince() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateProvinceDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateProvinceDataTable
        /// </summary>
        protected virtual ProvinceDataTable CreateProvinceDataTable() {
            return new ProvinceDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateProvinceDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateProvinceDataTable
        /// </summary>
        protected virtual ProvinceDataTable CreateProvinceDataTable(DataTable table) {
            return new ProvinceDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: ProvinceRowChangeEventHandler
        /// </summary>
        public delegate void ProvinceRowChangeEventHandler(object sender, ProvinceRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: ProvinceDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProvinceDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCOUNTRY_CODE
            /// </summary>
            protected DataColumn columnCOUNTRY_CODE;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnPROVINCE_CODE
            /// </summary>
            protected DataColumn columnPROVINCE_CODE;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnPROVINCE_NAME
            /// </summary>
            protected DataColumn columnPROVINCE_NAME;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLAPSE_DAYS_DELIVERY
            /// </summary>
            protected DataColumn columnLAPSE_DAYS_DELIVERY;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnTAX_BACKOUT_FUNCTION
            /// </summary>
            protected DataColumn columnTAX_BACKOUT_FUNCTION;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLAPSE_DAYS_FIELD_SUPPLY_PREP
            /// </summary>
            protected DataColumn columnLAPSE_DAYS_FIELD_SUPPLY_PREP;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ProvinceDataTable() : 
                    base("Province") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ProvinceDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: COUNTRY_CODEColumn
            /// </summary>
            public virtual DataColumnExtended COUNTRY_CODEColumn {
                get {
                    return ((DataColumnExtended)(this.columnCOUNTRY_CODE));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PROVINCE_CODEColumn
            /// </summary>
            public virtual DataColumnExtended PROVINCE_CODEColumn {
                get {
                    return ((DataColumnExtended)(this.columnPROVINCE_CODE));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PROVINCE_NAMEColumn
            /// </summary>
            public virtual DataColumnExtended PROVINCE_NAMEColumn {
                get {
                    return ((DataColumnExtended)(this.columnPROVINCE_NAME));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LAPSE_DAYS_DELIVERYColumn
            /// </summary>
            public virtual DataColumnExtended LAPSE_DAYS_DELIVERYColumn {
                get {
                    return ((DataColumnExtended)(this.columnLAPSE_DAYS_DELIVERY));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: TAX_BACKOUT_FUNCTIONColumn
            /// </summary>
            public virtual DataColumnExtended TAX_BACKOUT_FUNCTIONColumn {
                get {
                    return ((DataColumnExtended)(this.columnTAX_BACKOUT_FUNCTION));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LAPSE_DAYS_FIELD_SUPPLY_PREPColumn
            /// </summary>
            public virtual DataColumnExtended LAPSE_DAYS_FIELD_SUPPLY_PREPColumn {
                get {
                    return ((DataColumnExtended)(this.columnLAPSE_DAYS_FIELD_SUPPLY_PREP));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual ProvinceRow this[int index] {
                get {
                    return ((ProvinceRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ProvinceRowChanged
            /// </summary>
            public event ProvinceRowChangeEventHandler ProvinceRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ProvinceRowChanging
            /// </summary>
            public event ProvinceRowChangeEventHandler ProvinceRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ProvinceRowDeleted
            /// </summary>
            public event ProvinceRowChangeEventHandler ProvinceRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ProvinceRowDeleting
            /// </summary>
            public event ProvinceRowChangeEventHandler ProvinceRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddProvinceRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddProvinceRow
            /// </summary>
            public virtual void AddProvinceRow(ProvinceRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddProvinceRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddProvinceRow
            /// </summary>
            public virtual ProvinceRow AddProvinceRow(string COUNTRY_CODE, string PROVINCE_CODE, string PROVINCE_NAME, int LAPSE_DAYS_DELIVERY, string TAX_BACKOUT_FUNCTION, int LAPSE_DAYS_FIELD_SUPPLY_PREP) {
                ProvinceRow rowProvinceRow = ((ProvinceRow)(this.NewRow()));
                rowProvinceRow.ItemArray = new object[] {
                        COUNTRY_CODE,
                        PROVINCE_CODE,
                        PROVINCE_NAME,
                        LAPSE_DAYS_DELIVERY,
                        TAX_BACKOUT_FUNCTION,
                        LAPSE_DAYS_FIELD_SUPPLY_PREP};
                this.Rows.Add(rowProvinceRow);
                return rowProvinceRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByCOUNTRY_CODEPROVINCE_CODE
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByCOUNTRY_CODEPROVINCE_CODE
            /// </summary>
            public virtual ProvinceRow FindByCOUNTRY_CODEPROVINCE_CODE(string COUNTRY_CODE, string PROVINCE_CODE) {
                return ((ProvinceRow)(this.Rows.Find(new object[] {
                            COUNTRY_CODE,
                            PROVINCE_CODE})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                ProvinceDataTable cln = ((ProvinceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new ProvinceDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnCOUNTRY_CODE = this.Columns["COUNTRY_CODE"];
                this.columnPROVINCE_CODE = this.Columns["PROVINCE_CODE"];
                this.columnPROVINCE_NAME = this.Columns["PROVINCE_NAME"];
                this.columnLAPSE_DAYS_DELIVERY = this.Columns["LAPSE_DAYS_DELIVERY"];
                this.columnTAX_BACKOUT_FUNCTION = this.Columns["TAX_BACKOUT_FUNCTION"];
                this.columnLAPSE_DAYS_FIELD_SUPPLY_PREP = this.Columns["LAPSE_DAYS_FIELD_SUPPLY_PREP"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnCOUNTRY_CODE = new DataColumnExtended("COUNTRY_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOUNTRY_CODE);
                this.columnPROVINCE_CODE = new DataColumnExtended("PROVINCE_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROVINCE_CODE);
                this.columnPROVINCE_NAME = new DataColumnExtended("PROVINCE_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROVINCE_NAME);
                this.columnLAPSE_DAYS_DELIVERY = new DataColumnExtended("LAPSE_DAYS_DELIVERY", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLAPSE_DAYS_DELIVERY);
                this.columnTAX_BACKOUT_FUNCTION = new DataColumnExtended("TAX_BACKOUT_FUNCTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTAX_BACKOUT_FUNCTION);
                this.columnLAPSE_DAYS_FIELD_SUPPLY_PREP = new DataColumnExtended("LAPSE_DAYS_FIELD_SUPPLY_PREP", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLAPSE_DAYS_FIELD_SUPPLY_PREP);
                this.Constraints.Add(new UniqueConstraint("ProvinceDataSetKey1", new DataColumn[] {
                                this.columnCOUNTRY_CODE,
                                this.columnPROVINCE_CODE}, true));
                this.columnCOUNTRY_CODE.AllowDBNull = false;
                this.columnPROVINCE_CODE.AllowDBNull = false;
                this.columnLAPSE_DAYS_DELIVERY.AllowDBNull = false;
                this.columnLAPSE_DAYS_FIELD_SUPPLY_PREP.AllowDBNull = false;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewProvinceRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewProvinceRow
            /// </summary>
            public virtual ProvinceRow NewProvinceRow() {
                return ((ProvinceRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ProvinceRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(ProvinceRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProvinceRowChanged != null)) {
                    this.ProvinceRowChanged(this, new ProvinceRowChangeEvent(((ProvinceRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProvinceRowChanging != null)) {
                    this.ProvinceRowChanging(this, new ProvinceRowChangeEvent(((ProvinceRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProvinceRowDeleted != null)) {
                    this.ProvinceRowDeleted(this, new ProvinceRowChangeEvent(((ProvinceRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProvinceRowDeleting != null)) {
                    this.ProvinceRowDeleting(this, new ProvinceRowChangeEvent(((ProvinceRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveProvinceRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveProvinceRow
            /// </summary>
            public virtual void RemoveProvinceRow(ProvinceRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProvinceRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableProvince
            /// </summary>
            private ProvinceDataTable tableProvince;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal ProvinceRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableProvince = ((ProvinceDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: COUNTRY_CODE
            /// </summary>
            public virtual string COUNTRY_CODE {
                get {
                    return ((string)(this[this.tableProvince.COUNTRY_CODEColumn]));
                }
                set {
                    this[this.tableProvince.COUNTRY_CODEColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PROVINCE_CODE
            /// </summary>
            public virtual string PROVINCE_CODE {
                get {
                    return ((string)(this[this.tableProvince.PROVINCE_CODEColumn]));
                }
                set {
                    this[this.tableProvince.PROVINCE_CODEColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PROVINCE_NAME
            /// </summary>
            public virtual string PROVINCE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableProvince.PROVINCE_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProvince.PROVINCE_NAMEColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LAPSE_DAYS_DELIVERY
            /// </summary>
            public virtual int LAPSE_DAYS_DELIVERY {
                get {
                    return ((int)(this[this.tableProvince.LAPSE_DAYS_DELIVERYColumn]));
                }
                set {
                    this[this.tableProvince.LAPSE_DAYS_DELIVERYColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: TAX_BACKOUT_FUNCTION
            /// </summary>
            public virtual string TAX_BACKOUT_FUNCTION {
                get {
                    try {
                        return ((string)(this[this.tableProvince.TAX_BACKOUT_FUNCTIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProvince.TAX_BACKOUT_FUNCTIONColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LAPSE_DAYS_FIELD_SUPPLY_PREP
            /// </summary>
            public virtual int LAPSE_DAYS_FIELD_SUPPLY_PREP {
                get {
                    return ((int)(this[this.tableProvince.LAPSE_DAYS_FIELD_SUPPLY_PREPColumn]));
                }
                set {
                    this[this.tableProvince.LAPSE_DAYS_FIELD_SUPPLY_PREPColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPROVINCE_NAMENull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPROVINCE_NAMENull
            /// </summary>
            public virtual bool IsPROVINCE_NAMENull() {
                return this.IsNull(this.tableProvince.PROVINCE_NAMEColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPROVINCE_NAMENull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPROVINCE_NAMENull
            /// </summary>
            public virtual void SetPROVINCE_NAMENull() {
                this[this.tableProvince.PROVINCE_NAMEColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsTAX_BACKOUT_FUNCTIONNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsTAX_BACKOUT_FUNCTIONNull
            /// </summary>
            public virtual bool IsTAX_BACKOUT_FUNCTIONNull() {
                return this.IsNull(this.tableProvince.TAX_BACKOUT_FUNCTIONColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetTAX_BACKOUT_FUNCTIONNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetTAX_BACKOUT_FUNCTIONNull
            /// </summary>
            public virtual void SetTAX_BACKOUT_FUNCTIONNull() {
                this[this.tableProvince.TAX_BACKOUT_FUNCTIONColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProvinceRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private ProvinceRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ProvinceRowChangeEvent(ProvinceRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual ProvinceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
