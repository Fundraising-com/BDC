//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: AdjustmentTypeDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class AdjustmentTypeDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableADJUSTMENT_TYPE
        /// </summary>
        protected ADJUSTMENT_TYPEDataTable tableADJUSTMENT_TYPE;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public AdjustmentTypeDataSet() {
            this.tableADJUSTMENT_TYPE = this.CreateADJUSTMENT_TYPEDataTable();
            this.Tables.Add(this.tableADJUSTMENT_TYPE);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected AdjustmentTypeDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ADJUSTMENT_TYPE"] != null)) {
                    this.Tables.Add(this.CreateADJUSTMENT_TYPEDataTable(ds.Tables["ADJUSTMENT_TYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: ADJUSTMENT_TYPE
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual ADJUSTMENT_TYPEDataTable ADJUSTMENT_TYPE {
            get {
                return this.tableADJUSTMENT_TYPE;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            AdjustmentTypeDataSet cln = ((AdjustmentTypeDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["ADJUSTMENT_TYPE"] != null)) {
                this.Tables.Add(this.CreateADJUSTMENT_TYPEDataTable(ds.Tables["ADJUSTMENT_TYPE"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableADJUSTMENT_TYPE = ((ADJUSTMENT_TYPEDataTable)(this.Tables["ADJUSTMENT_TYPE"]));
            if ((this.tableADJUSTMENT_TYPE != null)) {
                this.tableADJUSTMENT_TYPE.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "AdjustmentTypeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AdjustmentTypeDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableADJUSTMENT_TYPE = this.CreateADJUSTMENT_TYPEDataTable();
            this.Tables.Add(this.tableADJUSTMENT_TYPE);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeADJUSTMENT_TYPE
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeADJUSTMENT_TYPE
        /// </summary>
        protected virtual bool ShouldSerializeADJUSTMENT_TYPE() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateADJUSTMENT_TYPEDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateADJUSTMENT_TYPEDataTable
        /// </summary>
        protected virtual ADJUSTMENT_TYPEDataTable CreateADJUSTMENT_TYPEDataTable() {
            return new ADJUSTMENT_TYPEDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateADJUSTMENT_TYPEDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateADJUSTMENT_TYPEDataTable
        /// </summary>
        protected virtual ADJUSTMENT_TYPEDataTable CreateADJUSTMENT_TYPEDataTable(DataTable table) {
            return new ADJUSTMENT_TYPEDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: ADJUSTMENT_TYPERowChangeEventHandler
        /// </summary>
        public delegate void ADJUSTMENT_TYPERowChangeEventHandler(object sender, ADJUSTMENT_TYPERowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: ADJUSTMENT_TYPEDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ADJUSTMENT_TYPEDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnADJUSTMENT_TYPE_ID
            /// </summary>
            protected DataColumn columnADJUSTMENT_TYPE_ID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnNAME
            /// </summary>
            protected DataColumn columnNAME;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnFRENCH_NAME
            /// </summary>
            protected DataColumn columnFRENCH_NAME;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDEBIT_CREDIT
            /// </summary>
            protected DataColumn columnDEBIT_CREDIT;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnIS_CHEQUE_REQUIRED
            /// </summary>
            protected DataColumn columnIS_CHEQUE_REQUIRED;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnNOT_PRINT_ON_STATEMENT
            /// </summary>
            protected DataColumn columnNOT_PRINT_ON_STATEMENT;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnIS_MAGNET_ADJUSTMENT
            /// </summary>
            protected DataColumn columnIS_MAGNET_ADJUSTMENT;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ADJUSTMENT_TYPEDataTable() : 
                    base("ADJUSTMENT_TYPE") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ADJUSTMENT_TYPEDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_TYPE_IDColumn
            /// </summary>
            public virtual DataColumnExtended ADJUSTMENT_TYPE_IDColumn {
                get {
                    return ((DataColumnExtended)(this.columnADJUSTMENT_TYPE_ID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NAMEColumn
            /// </summary>
            public virtual DataColumnExtended NAMEColumn {
                get {
                    return ((DataColumnExtended)(this.columnNAME));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FRENCH_NAMEColumn
            /// </summary>
            public virtual DataColumnExtended FRENCH_NAMEColumn {
                get {
                    return ((DataColumnExtended)(this.columnFRENCH_NAME));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DEBIT_CREDITColumn
            /// </summary>
            public virtual DataColumnExtended DEBIT_CREDITColumn {
                get {
                    return ((DataColumnExtended)(this.columnDEBIT_CREDIT));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IS_CHEQUE_REQUIREDColumn
            /// </summary>
            public virtual DataColumnExtended IS_CHEQUE_REQUIREDColumn {
                get {
                    return ((DataColumnExtended)(this.columnIS_CHEQUE_REQUIRED));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NOT_PRINT_ON_STATEMENTColumn
            /// </summary>
            public virtual DataColumnExtended NOT_PRINT_ON_STATEMENTColumn {
                get {
                    return ((DataColumnExtended)(this.columnNOT_PRINT_ON_STATEMENT));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IS_MAGNET_ADJUSTMENTColumn
            /// </summary>
            public virtual DataColumnExtended IS_MAGNET_ADJUSTMENTColumn {
                get {
                    return ((DataColumnExtended)(this.columnIS_MAGNET_ADJUSTMENT));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual ADJUSTMENT_TYPERow this[int index] {
                get {
                    return ((ADJUSTMENT_TYPERow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ADJUSTMENT_TYPERowChanged
            /// </summary>
            public event ADJUSTMENT_TYPERowChangeEventHandler ADJUSTMENT_TYPERowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ADJUSTMENT_TYPERowChanging
            /// </summary>
            public event ADJUSTMENT_TYPERowChangeEventHandler ADJUSTMENT_TYPERowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ADJUSTMENT_TYPERowDeleted
            /// </summary>
            public event ADJUSTMENT_TYPERowChangeEventHandler ADJUSTMENT_TYPERowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: ADJUSTMENT_TYPERowDeleting
            /// </summary>
            public event ADJUSTMENT_TYPERowChangeEventHandler ADJUSTMENT_TYPERowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddADJUSTMENT_TYPERow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddADJUSTMENT_TYPERow
            /// </summary>
            public virtual void AddADJUSTMENT_TYPERow(ADJUSTMENT_TYPERow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddADJUSTMENT_TYPERow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddADJUSTMENT_TYPERow
            /// </summary>
            public virtual ADJUSTMENT_TYPERow AddADJUSTMENT_TYPERow(int ADJUSTMENT_TYPE_ID, string NAME, string FRENCH_NAME, string DEBIT_CREDIT, string IS_CHEQUE_REQUIRED, string NOT_PRINT_ON_STATEMENT, string IS_MAGNET_ADJUSTMENT) {
                ADJUSTMENT_TYPERow rowADJUSTMENT_TYPERow = ((ADJUSTMENT_TYPERow)(this.NewRow()));
                rowADJUSTMENT_TYPERow.ItemArray = new object[] {
                        ADJUSTMENT_TYPE_ID,
                        NAME,
                        FRENCH_NAME,
                        DEBIT_CREDIT,
                        IS_CHEQUE_REQUIRED,
                        NOT_PRINT_ON_STATEMENT,
                        IS_MAGNET_ADJUSTMENT};
                this.Rows.Add(rowADJUSTMENT_TYPERow);
                return rowADJUSTMENT_TYPERow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByADJUSTMENT_TYPE_ID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByADJUSTMENT_TYPE_ID
            /// </summary>
            public virtual ADJUSTMENT_TYPERow FindByADJUSTMENT_TYPE_ID(int ADJUSTMENT_TYPE_ID) {
                return ((ADJUSTMENT_TYPERow)(this.Rows.Find(new object[] {
                            ADJUSTMENT_TYPE_ID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                ADJUSTMENT_TYPEDataTable cln = ((ADJUSTMENT_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new ADJUSTMENT_TYPEDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnADJUSTMENT_TYPE_ID = this.Columns["ADJUSTMENT_TYPE_ID"];
                this.columnNAME = this.Columns["NAME"];
                this.columnFRENCH_NAME = this.Columns["FRENCH_NAME"];
                this.columnDEBIT_CREDIT = this.Columns["DEBIT_CREDIT"];
                this.columnIS_CHEQUE_REQUIRED = this.Columns["IS_CHEQUE_REQUIRED"];
                this.columnNOT_PRINT_ON_STATEMENT = this.Columns["NOT_PRINT_ON_STATEMENT"];
                this.columnIS_MAGNET_ADJUSTMENT = this.Columns["IS_MAGNET_ADJUSTMENT"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnADJUSTMENT_TYPE_ID = new DataColumnExtended("ADJUSTMENT_TYPE_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADJUSTMENT_TYPE_ID);
                this.columnNAME = new DataColumnExtended("NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME);
                this.columnFRENCH_NAME = new DataColumnExtended("FRENCH_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFRENCH_NAME);
                this.columnDEBIT_CREDIT = new DataColumnExtended("DEBIT_CREDIT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDEBIT_CREDIT);
                this.columnIS_CHEQUE_REQUIRED = new DataColumnExtended("IS_CHEQUE_REQUIRED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIS_CHEQUE_REQUIRED);
                this.columnNOT_PRINT_ON_STATEMENT = new DataColumnExtended("NOT_PRINT_ON_STATEMENT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOT_PRINT_ON_STATEMENT);
                this.columnIS_MAGNET_ADJUSTMENT = new DataColumnExtended("IS_MAGNET_ADJUSTMENT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIS_MAGNET_ADJUSTMENT);
                this.Constraints.Add(new UniqueConstraint("AdjustmentTypeDataSetKey1", new DataColumn[] {
                                this.columnADJUSTMENT_TYPE_ID}, true));
                this.columnADJUSTMENT_TYPE_ID.AllowDBNull = false;
                this.columnADJUSTMENT_TYPE_ID.Unique = true;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewADJUSTMENT_TYPERow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewADJUSTMENT_TYPERow
            /// </summary>
            public virtual ADJUSTMENT_TYPERow NewADJUSTMENT_TYPERow() {
                return ((ADJUSTMENT_TYPERow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ADJUSTMENT_TYPERow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(ADJUSTMENT_TYPERow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ADJUSTMENT_TYPERowChanged != null)) {
                    this.ADJUSTMENT_TYPERowChanged(this, new ADJUSTMENT_TYPERowChangeEvent(((ADJUSTMENT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ADJUSTMENT_TYPERowChanging != null)) {
                    this.ADJUSTMENT_TYPERowChanging(this, new ADJUSTMENT_TYPERowChangeEvent(((ADJUSTMENT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ADJUSTMENT_TYPERowDeleted != null)) {
                    this.ADJUSTMENT_TYPERowDeleted(this, new ADJUSTMENT_TYPERowChangeEvent(((ADJUSTMENT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ADJUSTMENT_TYPERowDeleting != null)) {
                    this.ADJUSTMENT_TYPERowDeleting(this, new ADJUSTMENT_TYPERowChangeEvent(((ADJUSTMENT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveADJUSTMENT_TYPERow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveADJUSTMENT_TYPERow
            /// </summary>
            public virtual void RemoveADJUSTMENT_TYPERow(ADJUSTMENT_TYPERow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ADJUSTMENT_TYPERow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableADJUSTMENT_TYPE
            /// </summary>
            private ADJUSTMENT_TYPEDataTable tableADJUSTMENT_TYPE;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal ADJUSTMENT_TYPERow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableADJUSTMENT_TYPE = ((ADJUSTMENT_TYPEDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ADJUSTMENT_TYPE_ID
            /// </summary>
            public virtual int ADJUSTMENT_TYPE_ID {
                get {
                    return ((int)(this[this.tableADJUSTMENT_TYPE.ADJUSTMENT_TYPE_IDColumn]));
                }
                set {
                    this[this.tableADJUSTMENT_TYPE.ADJUSTMENT_TYPE_IDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NAME
            /// </summary>
            public virtual string NAME {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT_TYPE.NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT_TYPE.NAMEColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FRENCH_NAME
            /// </summary>
            public virtual string FRENCH_NAME {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT_TYPE.FRENCH_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT_TYPE.FRENCH_NAMEColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DEBIT_CREDIT
            /// </summary>
            public virtual string DEBIT_CREDIT {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT_TYPE.DEBIT_CREDITColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT_TYPE.DEBIT_CREDITColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IS_CHEQUE_REQUIRED
            /// </summary>
            public virtual string IS_CHEQUE_REQUIRED {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT_TYPE.IS_CHEQUE_REQUIREDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT_TYPE.IS_CHEQUE_REQUIREDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: NOT_PRINT_ON_STATEMENT
            /// </summary>
            public virtual string NOT_PRINT_ON_STATEMENT {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT_TYPE.NOT_PRINT_ON_STATEMENTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT_TYPE.NOT_PRINT_ON_STATEMENTColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: IS_MAGNET_ADJUSTMENT
            /// </summary>
            public virtual string IS_MAGNET_ADJUSTMENT {
                get {
                    try {
                        return ((string)(this[this.tableADJUSTMENT_TYPE.IS_MAGNET_ADJUSTMENTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADJUSTMENT_TYPE.IS_MAGNET_ADJUSTMENTColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNAMENull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNAMENull
            /// </summary>
            public virtual bool IsNAMENull() {
                return this.IsNull(this.tableADJUSTMENT_TYPE.NAMEColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNAMENull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNAMENull
            /// </summary>
            public virtual void SetNAMENull() {
                this[this.tableADJUSTMENT_TYPE.NAMEColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsFRENCH_NAMENull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsFRENCH_NAMENull
            /// </summary>
            public virtual bool IsFRENCH_NAMENull() {
                return this.IsNull(this.tableADJUSTMENT_TYPE.FRENCH_NAMEColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetFRENCH_NAMENull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetFRENCH_NAMENull
            /// </summary>
            public virtual void SetFRENCH_NAMENull() {
                this[this.tableADJUSTMENT_TYPE.FRENCH_NAMEColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDEBIT_CREDITNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDEBIT_CREDITNull
            /// </summary>
            public virtual bool IsDEBIT_CREDITNull() {
                return this.IsNull(this.tableADJUSTMENT_TYPE.DEBIT_CREDITColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDEBIT_CREDITNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDEBIT_CREDITNull
            /// </summary>
            public virtual void SetDEBIT_CREDITNull() {
                this[this.tableADJUSTMENT_TYPE.DEBIT_CREDITColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsIS_CHEQUE_REQUIREDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsIS_CHEQUE_REQUIREDNull
            /// </summary>
            public virtual bool IsIS_CHEQUE_REQUIREDNull() {
                return this.IsNull(this.tableADJUSTMENT_TYPE.IS_CHEQUE_REQUIREDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetIS_CHEQUE_REQUIREDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetIS_CHEQUE_REQUIREDNull
            /// </summary>
            public virtual void SetIS_CHEQUE_REQUIREDNull() {
                this[this.tableADJUSTMENT_TYPE.IS_CHEQUE_REQUIREDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNOT_PRINT_ON_STATEMENTNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsNOT_PRINT_ON_STATEMENTNull
            /// </summary>
            public virtual bool IsNOT_PRINT_ON_STATEMENTNull() {
                return this.IsNull(this.tableADJUSTMENT_TYPE.NOT_PRINT_ON_STATEMENTColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNOT_PRINT_ON_STATEMENTNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetNOT_PRINT_ON_STATEMENTNull
            /// </summary>
            public virtual void SetNOT_PRINT_ON_STATEMENTNull() {
                this[this.tableADJUSTMENT_TYPE.NOT_PRINT_ON_STATEMENTColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsIS_MAGNET_ADJUSTMENTNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsIS_MAGNET_ADJUSTMENTNull
            /// </summary>
            public virtual bool IsIS_MAGNET_ADJUSTMENTNull() {
                return this.IsNull(this.tableADJUSTMENT_TYPE.IS_MAGNET_ADJUSTMENTColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetIS_MAGNET_ADJUSTMENTNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetIS_MAGNET_ADJUSTMENTNull
            /// </summary>
            public virtual void SetIS_MAGNET_ADJUSTMENTNull() {
                this[this.tableADJUSTMENT_TYPE.IS_MAGNET_ADJUSTMENTColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class ADJUSTMENT_TYPERowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private ADJUSTMENT_TYPERow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public ADJUSTMENT_TYPERowChangeEvent(ADJUSTMENT_TYPERow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual ADJUSTMENT_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
