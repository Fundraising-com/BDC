//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Common.TableDef {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <summary>
    /// Autogenerated by the QSPDataSetGenerator.
    /// Class: FieldManagerDataSet
    /// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class FieldManagerDataSet : DataSet {
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Field: tableFieldManager
        /// </summary>
        protected FieldManagerDataTable tableFieldManager;
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        public FieldManagerDataSet() {
            this.tableFieldManager = this.CreateFieldManagerDataTable();
            this.Tables.Add(this.tableFieldManager);
            DataSetHelper.CreateDataSetExtendedProperties(this);
            this.InitExpressions();
            this.InitVars();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// </summary>
        protected FieldManagerDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["FieldManager"] != null)) {
                    this.Tables.Add(this.CreateFieldManagerDataTable(ds.Tables["FieldManager"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Property: FieldManager
        /// </summary>
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public virtual FieldManagerDataTable FieldManager {
            get {
                return this.tableFieldManager;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: Clone
        /// </summary>
        public override DataSet Clone() {
            FieldManagerDataSet cln = ((FieldManagerDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeTables
        /// </summary>
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeRelations
        /// </summary>
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ReadXmlSerializable
        /// </summary>
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["FieldManager"] != null)) {
                this.Tables.Add(this.CreateFieldManagerDataTable(ds.Tables["FieldManager"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: GetSchemaSerializable
        /// </summary>
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitVars
        /// </summary>
        /*FamANDAssem*/ internal void InitVars() {
            this.tableFieldManager = ((FieldManagerDataTable)(this.Tables["FieldManager"]));
            if ((this.tableFieldManager != null)) {
                this.tableFieldManager.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitClass
        /// </summary>
        protected virtual void InitClass() {
            this.DataSetName = "FieldManagerDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FieldManagerDataSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableFieldManager = this.CreateFieldManagerDataTable();
            this.Tables.Add(this.tableFieldManager);
            this.InitExpressions();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeFieldManager
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: ShouldSerializeFieldManager
        /// </summary>
        protected virtual bool ShouldSerializeFieldManager() {
            return false;
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: SchemaChanged
        /// </summary>
        protected virtual void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitExpressions
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: InitExpressions
        /// </summary>
        protected virtual void InitExpressions() {
            this.tableFieldManager.ListNameColumn.Expression = "LastName + \', \' + FirstName + \' (\' + FMID + \')\'";
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateFieldManagerDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateFieldManagerDataTable
        /// </summary>
        protected virtual FieldManagerDataTable CreateFieldManagerDataTable() {
            return new FieldManagerDataTable();
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateFieldManagerDataTable
        /// </summary>
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Method: CreateFieldManagerDataTable
        /// </summary>
        protected virtual FieldManagerDataTable CreateFieldManagerDataTable(DataTable table) {
            return new FieldManagerDataTable(table);
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Delegate: FieldManagerRowChangeEventHandler
        /// </summary>
        public delegate void FieldManagerRowChangeEventHandler(object sender, FieldManagerRowChangeEvent e);
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: FieldManagerDataTable
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class FieldManagerDataTable : DataTable, System.Collections.IEnumerable {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnFMID
            /// </summary>
            protected DataColumn columnFMID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnStatus
            /// </summary>
            protected DataColumn columnStatus;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnCountry
            /// </summary>
            protected DataColumn columnCountry;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnPhoneListID
            /// </summary>
            protected DataColumn columnPhoneListID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnAddressListID
            /// </summary>
            protected DataColumn columnAddressListID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnFirstName
            /// </summary>
            protected DataColumn columnFirstName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLastName
            /// </summary>
            protected DataColumn columnLastName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnMiddleInitial
            /// </summary>
            protected DataColumn columnMiddleInitial;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnEmail
            /// </summary>
            protected DataColumn columnEmail;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDMID
            /// </summary>
            protected DataColumn columnDMID;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnUserIDModified
            /// </summary>
            protected DataColumn columnUserIDModified;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDateModified
            /// </summary>
            protected DataColumn columnDateModified;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnComment
            /// </summary>
            protected DataColumn columnComment;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDMIndicator
            /// </summary>
            protected DataColumn columnDMIndicator;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnLang
            /// </summary>
            protected DataColumn columnLang;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnDeletedTF
            /// </summary>
            protected DataColumn columnDeletedTF;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: columnListName
            /// </summary>
            protected DataColumn columnListName;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public FieldManagerDataTable() : 
                    base("FieldManager") {
                this.InitClass();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public FieldManagerDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Count
            /// </summary>
            [System.ComponentModel.Browsable(false)]
            public virtual int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FMIDColumn
            /// </summary>
            public virtual DataColumnExtended FMIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnFMID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: StatusColumn
            /// </summary>
            public virtual DataColumnExtended StatusColumn {
                get {
                    return ((DataColumnExtended)(this.columnStatus));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CountryColumn
            /// </summary>
            public virtual DataColumnExtended CountryColumn {
                get {
                    return ((DataColumnExtended)(this.columnCountry));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PhoneListIDColumn
            /// </summary>
            public virtual DataColumnExtended PhoneListIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnPhoneListID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AddressListIDColumn
            /// </summary>
            public virtual DataColumnExtended AddressListIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnAddressListID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FirstNameColumn
            /// </summary>
            public virtual DataColumnExtended FirstNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnFirstName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LastNameColumn
            /// </summary>
            public virtual DataColumnExtended LastNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnLastName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MiddleInitialColumn
            /// </summary>
            public virtual DataColumnExtended MiddleInitialColumn {
                get {
                    return ((DataColumnExtended)(this.columnMiddleInitial));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: EmailColumn
            /// </summary>
            public virtual DataColumnExtended EmailColumn {
                get {
                    return ((DataColumnExtended)(this.columnEmail));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DMIDColumn
            /// </summary>
            public virtual DataColumnExtended DMIDColumn {
                get {
                    return ((DataColumnExtended)(this.columnDMID));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: UserIDModifiedColumn
            /// </summary>
            public virtual DataColumnExtended UserIDModifiedColumn {
                get {
                    return ((DataColumnExtended)(this.columnUserIDModified));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateModifiedColumn
            /// </summary>
            public virtual DataColumnExtended DateModifiedColumn {
                get {
                    return ((DataColumnExtended)(this.columnDateModified));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: CommentColumn
            /// </summary>
            public virtual DataColumnExtended CommentColumn {
                get {
                    return ((DataColumnExtended)(this.columnComment));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DMIndicatorColumn
            /// </summary>
            public virtual DataColumnExtended DMIndicatorColumn {
                get {
                    return ((DataColumnExtended)(this.columnDMIndicator));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LangColumn
            /// </summary>
            public virtual DataColumnExtended LangColumn {
                get {
                    return ((DataColumnExtended)(this.columnLang));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DeletedTFColumn
            /// </summary>
            public virtual DataColumnExtended DeletedTFColumn {
                get {
                    return ((DataColumnExtended)(this.columnDeletedTF));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ListNameColumn
            /// </summary>
            public virtual DataColumnExtended ListNameColumn {
                get {
                    return ((DataColumnExtended)(this.columnListName));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Item
            /// </summary>
            public virtual FieldManagerRow this[int index] {
                get {
                    return ((FieldManagerRow)(this.Rows[index]));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: FieldManagerRowChanged
            /// </summary>
            public event FieldManagerRowChangeEventHandler FieldManagerRowChanged;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: FieldManagerRowChanging
            /// </summary>
            public event FieldManagerRowChangeEventHandler FieldManagerRowChanging;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: FieldManagerRowDeleted
            /// </summary>
            public event FieldManagerRowChangeEventHandler FieldManagerRowDeleted;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Event: FieldManagerRowDeleting
            /// </summary>
            public event FieldManagerRowChangeEventHandler FieldManagerRowDeleting;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddFieldManagerRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddFieldManagerRow
            /// </summary>
            public virtual void AddFieldManagerRow(FieldManagerRow row) {
                this.Rows.Add(row);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddFieldManagerRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: AddFieldManagerRow
            /// </summary>
            public virtual FieldManagerRow AddFieldManagerRow(
                        string FMID, 
                        int Status, 
                        string Country, 
                        int PhoneListID, 
                        int AddressListID, 
                        string FirstName, 
                        string LastName, 
                        string MiddleInitial, 
                        string Email, 
                        string DMID, 
                        int UserIDModified, 
                        System.DateTime DateModified, 
                        string Comment, 
                        string DMIndicator, 
                        string Lang, 
                        bool DeletedTF) {
                FieldManagerRow rowFieldManagerRow = ((FieldManagerRow)(this.NewRow()));
                rowFieldManagerRow.ItemArray = new object[] {
                        FMID,
                        Status,
                        Country,
                        PhoneListID,
                        AddressListID,
                        FirstName,
                        LastName,
                        MiddleInitial,
                        Email,
                        DMID,
                        UserIDModified,
                        DateModified,
                        Comment,
                        DMIndicator,
                        Lang,
                        DeletedTF};
                this.Rows.Add(rowFieldManagerRow);
                return rowFieldManagerRow;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByFMID
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: FindByFMID
            /// </summary>
            public virtual FieldManagerRow FindByFMID(string FMID) {
                return ((FieldManagerRow)(this.Rows.Find(new object[] {
                            FMID})));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetEnumerator
            /// </summary>
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: Clone
            /// </summary>
            public override DataTable Clone() {
                FieldManagerDataTable cln = ((FieldManagerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: CreateInstance
            /// </summary>
            protected override DataTable CreateInstance() {
                return new FieldManagerDataTable();
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitVars
            /// </summary>
            /*FamANDAssem*/ internal void InitVars() {
                this.columnFMID = this.Columns["FMID"];
                this.columnStatus = this.Columns["Status"];
                this.columnCountry = this.Columns["Country"];
                this.columnPhoneListID = this.Columns["PhoneListID"];
                this.columnAddressListID = this.Columns["AddressListID"];
                this.columnFirstName = this.Columns["FirstName"];
                this.columnLastName = this.Columns["LastName"];
                this.columnMiddleInitial = this.Columns["MiddleInitial"];
                this.columnEmail = this.Columns["Email"];
                this.columnDMID = this.Columns["DMID"];
                this.columnUserIDModified = this.Columns["UserIDModified"];
                this.columnDateModified = this.Columns["DateModified"];
                this.columnComment = this.Columns["Comment"];
                this.columnDMIndicator = this.Columns["DMIndicator"];
                this.columnLang = this.Columns["Lang"];
                this.columnDeletedTF = this.Columns["DeletedTF"];
                this.columnListName = this.Columns["ListName"];
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: InitClass
            /// </summary>
            protected virtual void InitClass() {
                this.columnFMID = new DataColumnExtended("FMID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFMID);
                this.columnStatus = new DataColumnExtended("Status", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnCountry = new DataColumnExtended("Country", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountry);
                this.columnPhoneListID = new DataColumnExtended("PhoneListID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhoneListID);
                this.columnAddressListID = new DataColumnExtended("AddressListID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAddressListID);
                this.columnFirstName = new DataColumnExtended("FirstName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFirstName);
                this.columnLastName = new DataColumnExtended("LastName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastName);
                this.columnMiddleInitial = new DataColumnExtended("MiddleInitial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMiddleInitial);
                this.columnEmail = new DataColumnExtended("Email", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmail);
                this.columnDMID = new DataColumnExtended("DMID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDMID);
                this.columnUserIDModified = new DataColumnExtended("UserIDModified", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserIDModified);
                this.columnDateModified = new DataColumnExtended("DateModified", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateModified);
                this.columnComment = new DataColumnExtended("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnDMIndicator = new DataColumnExtended("DMIndicator", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDMIndicator);
                this.columnLang = new DataColumnExtended("Lang", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLang);
                this.columnDeletedTF = new DataColumnExtended("DeletedTF", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedTF);
                this.columnListName = new DataColumnExtended("ListName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnListName);
                this.Constraints.Add(new UniqueConstraint("FieldManagerDataSetKey1", new DataColumn[] {
                                this.columnFMID}, true));
                this.columnFMID.AllowDBNull = false;
                this.columnFMID.Unique = true;
                this.columnDeletedTF.AllowDBNull = false;
                this.columnListName.ReadOnly = true;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewFieldManagerRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewFieldManagerRow
            /// </summary>
            public virtual FieldManagerRow NewFieldManagerRow() {
                return ((FieldManagerRow)(this.NewRow()));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: NewRowFromBuilder
            /// </summary>
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new FieldManagerRow(builder);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: GetRowType
            /// </summary>
            protected override System.Type GetRowType() {
                return typeof(FieldManagerRow);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanged
            /// </summary>
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FieldManagerRowChanged != null)) {
                    this.FieldManagerRowChanged(this, new FieldManagerRowChangeEvent(((FieldManagerRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowChanging
            /// </summary>
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FieldManagerRowChanging != null)) {
                    this.FieldManagerRowChanging(this, new FieldManagerRowChangeEvent(((FieldManagerRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleted
            /// </summary>
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FieldManagerRowDeleted != null)) {
                    this.FieldManagerRowDeleted(this, new FieldManagerRowChangeEvent(((FieldManagerRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: OnRowDeleting
            /// </summary>
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FieldManagerRowDeleting != null)) {
                    this.FieldManagerRowDeleting(this, new FieldManagerRowChangeEvent(((FieldManagerRow)(e.Row)), e.Action));
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveFieldManagerRow
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: RemoveFieldManagerRow
            /// </summary>
            public virtual void RemoveFieldManagerRow(FieldManagerRow row) {
                this.Rows.Remove(row);
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class FieldManagerRow : DataRow {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: tableFieldManager
            /// </summary>
            private FieldManagerDataTable tableFieldManager;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            /*FamANDAssem*/ internal FieldManagerRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableFieldManager = ((FieldManagerDataTable)(this.Table));
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FMID
            /// </summary>
            public virtual string FMID {
                get {
                    return ((string)(this[this.tableFieldManager.FMIDColumn]));
                }
                set {
                    this[this.tableFieldManager.FMIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Status
            /// </summary>
            public virtual int Status {
                get {
                    try {
                        return ((int)(this[this.tableFieldManager.StatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.StatusColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Country
            /// </summary>
            public virtual string Country {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.CountryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.CountryColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: PhoneListID
            /// </summary>
            public virtual int PhoneListID {
                get {
                    try {
                        return ((int)(this[this.tableFieldManager.PhoneListIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.PhoneListIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: AddressListID
            /// </summary>
            public virtual int AddressListID {
                get {
                    try {
                        return ((int)(this[this.tableFieldManager.AddressListIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.AddressListIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: FirstName
            /// </summary>
            public virtual string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.FirstNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.FirstNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: LastName
            /// </summary>
            public virtual string LastName {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.LastNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.LastNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: MiddleInitial
            /// </summary>
            public virtual string MiddleInitial {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.MiddleInitialColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.MiddleInitialColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Email
            /// </summary>
            public virtual string Email {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.EmailColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.EmailColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DMID
            /// </summary>
            public virtual string DMID {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.DMIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.DMIDColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: UserIDModified
            /// </summary>
            public virtual int UserIDModified {
                get {
                    try {
                        return ((int)(this[this.tableFieldManager.UserIDModifiedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.UserIDModifiedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DateModified
            /// </summary>
            public virtual System.DateTime DateModified {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableFieldManager.DateModifiedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.DateModifiedColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Comment
            /// </summary>
            public virtual string Comment {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.CommentColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DMIndicator
            /// </summary>
            public virtual string DMIndicator {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.DMIndicatorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.DMIndicatorColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Lang
            /// </summary>
            public virtual string Lang {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.LangColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.LangColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: DeletedTF
            /// </summary>
            public virtual bool DeletedTF {
                get {
                    return ((bool)(this[this.tableFieldManager.DeletedTFColumn]));
                }
                set {
                    this[this.tableFieldManager.DeletedTFColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: ListName
            /// </summary>
            public virtual string ListName {
                get {
                    try {
                        return ((string)(this[this.tableFieldManager.ListNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFieldManager.ListNameColumn] = value;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsStatusNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsStatusNull
            /// </summary>
            public virtual bool IsStatusNull() {
                return this.IsNull(this.tableFieldManager.StatusColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetStatusNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetStatusNull
            /// </summary>
            public virtual void SetStatusNull() {
                this[this.tableFieldManager.StatusColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCountryNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCountryNull
            /// </summary>
            public virtual bool IsCountryNull() {
                return this.IsNull(this.tableFieldManager.CountryColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCountryNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCountryNull
            /// </summary>
            public virtual void SetCountryNull() {
                this[this.tableFieldManager.CountryColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPhoneListIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsPhoneListIDNull
            /// </summary>
            public virtual bool IsPhoneListIDNull() {
                return this.IsNull(this.tableFieldManager.PhoneListIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPhoneListIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetPhoneListIDNull
            /// </summary>
            public virtual void SetPhoneListIDNull() {
                this[this.tableFieldManager.PhoneListIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsAddressListIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsAddressListIDNull
            /// </summary>
            public virtual bool IsAddressListIDNull() {
                return this.IsNull(this.tableFieldManager.AddressListIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetAddressListIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetAddressListIDNull
            /// </summary>
            public virtual void SetAddressListIDNull() {
                this[this.tableFieldManager.AddressListIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsFirstNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsFirstNameNull
            /// </summary>
            public virtual bool IsFirstNameNull() {
                return this.IsNull(this.tableFieldManager.FirstNameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetFirstNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetFirstNameNull
            /// </summary>
            public virtual void SetFirstNameNull() {
                this[this.tableFieldManager.FirstNameColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsLastNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsLastNameNull
            /// </summary>
            public virtual bool IsLastNameNull() {
                return this.IsNull(this.tableFieldManager.LastNameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetLastNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetLastNameNull
            /// </summary>
            public virtual void SetLastNameNull() {
                this[this.tableFieldManager.LastNameColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMiddleInitialNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsMiddleInitialNull
            /// </summary>
            public virtual bool IsMiddleInitialNull() {
                return this.IsNull(this.tableFieldManager.MiddleInitialColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMiddleInitialNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetMiddleInitialNull
            /// </summary>
            public virtual void SetMiddleInitialNull() {
                this[this.tableFieldManager.MiddleInitialColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsEmailNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsEmailNull
            /// </summary>
            public virtual bool IsEmailNull() {
                return this.IsNull(this.tableFieldManager.EmailColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetEmailNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetEmailNull
            /// </summary>
            public virtual void SetEmailNull() {
                this[this.tableFieldManager.EmailColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDMIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDMIDNull
            /// </summary>
            public virtual bool IsDMIDNull() {
                return this.IsNull(this.tableFieldManager.DMIDColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDMIDNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDMIDNull
            /// </summary>
            public virtual void SetDMIDNull() {
                this[this.tableFieldManager.DMIDColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsUserIDModifiedNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsUserIDModifiedNull
            /// </summary>
            public virtual bool IsUserIDModifiedNull() {
                return this.IsNull(this.tableFieldManager.UserIDModifiedColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetUserIDModifiedNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetUserIDModifiedNull
            /// </summary>
            public virtual void SetUserIDModifiedNull() {
                this[this.tableFieldManager.UserIDModifiedColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDateModifiedNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDateModifiedNull
            /// </summary>
            public virtual bool IsDateModifiedNull() {
                return this.IsNull(this.tableFieldManager.DateModifiedColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDateModifiedNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDateModifiedNull
            /// </summary>
            public virtual void SetDateModifiedNull() {
                this[this.tableFieldManager.DateModifiedColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCommentNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsCommentNull
            /// </summary>
            public virtual bool IsCommentNull() {
                return this.IsNull(this.tableFieldManager.CommentColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCommentNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetCommentNull
            /// </summary>
            public virtual void SetCommentNull() {
                this[this.tableFieldManager.CommentColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDMIndicatorNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsDMIndicatorNull
            /// </summary>
            public virtual bool IsDMIndicatorNull() {
                return this.IsNull(this.tableFieldManager.DMIndicatorColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDMIndicatorNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetDMIndicatorNull
            /// </summary>
            public virtual void SetDMIndicatorNull() {
                this[this.tableFieldManager.DMIndicatorColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsLangNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsLangNull
            /// </summary>
            public virtual bool IsLangNull() {
                return this.IsNull(this.tableFieldManager.LangColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetLangNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetLangNull
            /// </summary>
            public virtual void SetLangNull() {
                this[this.tableFieldManager.LangColumn] = System.Convert.DBNull;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsListNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: IsListNameNull
            /// </summary>
            public virtual bool IsListNameNull() {
                return this.IsNull(this.tableFieldManager.ListNameColumn);
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetListNameNull
            /// </summary>
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Method: SetListNameNull
            /// </summary>
            public virtual void SetListNameNull() {
                this[this.tableFieldManager.ListNameColumn] = System.Convert.DBNull;
            }
        }
        
        /// <summary>
        /// Autogenerated by the QSPDataSetGenerator.
        /// Class: 
        /// </summary>
        [System.Diagnostics.DebuggerStepThrough()]
        public class FieldManagerRowChangeEvent : EventArgs {
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventRow
            /// </summary>
            private FieldManagerRow eventRow;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Field: eventAction
            /// </summary>
            private DataRowAction eventAction;
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// </summary>
            public FieldManagerRowChangeEvent(FieldManagerRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Row
            /// </summary>
            public virtual FieldManagerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            /// <summary>
            /// Autogenerated by the QSPDataSetGenerator.
            /// Property: Action
            /// </summary>
            public virtual DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
