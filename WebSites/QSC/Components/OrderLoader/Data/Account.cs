//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Data
{
    [DataContract(IsReference = true)]
    public partial class Account: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public string Country
        {
            get { return _country; }
            set
            {
                if (_country != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Country' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _country = value;
                    OnPropertyChanged("Country");
                }
            }
        }
        private string _country;
    
        [DataMember]
        public string Lang
        {
            get { return _lang; }
            set
            {
                if (_lang != value)
                {
                    _lang = value;
                    OnPropertyChanged("Lang");
                }
            }
        }
        private string _lang;
    
        [DataMember]
        public string CAccountCodeClass
        {
            get { return _cAccountCodeClass; }
            set
            {
                if (_cAccountCodeClass != value)
                {
                    _cAccountCodeClass = value;
                    OnPropertyChanged("CAccountCodeClass");
                }
            }
        }
        private string _cAccountCodeClass;
    
        [DataMember]
        public string CAccountCodeGroup
        {
            get { return _cAccountCodeGroup; }
            set
            {
                if (_cAccountCodeGroup != value)
                {
                    _cAccountCodeGroup = value;
                    OnPropertyChanged("CAccountCodeGroup");
                }
            }
        }
        private string _cAccountCodeGroup;
    
        [DataMember]
        public Nullable<int> PhoneListID
        {
            get { return _phoneListID; }
            set
            {
                if (_phoneListID != value)
                {
                    _phoneListID = value;
                    OnPropertyChanged("PhoneListID");
                }
            }
        }
        private Nullable<int> _phoneListID;
    
        [DataMember]
        public Nullable<int> AddressListID
        {
            get { return _addressListID; }
            set
            {
                if (_addressListID != value)
                {
                    _addressListID = value;
                    OnPropertyChanged("AddressListID");
                }
            }
        }
        private Nullable<int> _addressListID;
    
        [DataMember]
        public string Address1
        {
            get { return _address1; }
            set
            {
                if (_address1 != value)
                {
                    _address1 = value;
                    OnPropertyChanged("Address1");
                }
            }
        }
        private string _address1;
    
        [DataMember]
        public string Address2
        {
            get { return _address2; }
            set
            {
                if (_address2 != value)
                {
                    _address2 = value;
                    OnPropertyChanged("Address2");
                }
            }
        }
        private string _address2;
    
        [DataMember]
        public string City
        {
            get { return _city; }
            set
            {
                if (_city != value)
                {
                    _city = value;
                    OnPropertyChanged("City");
                }
            }
        }
        private string _city;
    
        [DataMember]
        public string State
        {
            get { return _state; }
            set
            {
                if (_state != value)
                {
                    _state = value;
                    OnPropertyChanged("State");
                }
            }
        }
        private string _state;
    
        [DataMember]
        public string Zip
        {
            get { return _zip; }
            set
            {
                if (_zip != value)
                {
                    _zip = value;
                    OnPropertyChanged("Zip");
                }
            }
        }
        private string _zip;
    
        [DataMember]
        public string Zip4
        {
            get { return _zip4; }
            set
            {
                if (_zip4 != value)
                {
                    _zip4 = value;
                    OnPropertyChanged("Zip4");
                }
            }
        }
        private string _zip4;
    
        [DataMember]
        public string County
        {
            get { return _county; }
            set
            {
                if (_county != value)
                {
                    _county = value;
                    OnPropertyChanged("County");
                }
            }
        }
        private string _county;
    
        [DataMember]
        public Nullable<int> StatusID
        {
            get { return _statusID; }
            set
            {
                if (_statusID != value)
                {
                    _statusID = value;
                    OnPropertyChanged("StatusID");
                }
            }
        }
        private Nullable<int> _statusID;
    
        [DataMember]
        public Nullable<int> Enrollment
        {
            get { return _enrollment; }
            set
            {
                if (_enrollment != value)
                {
                    _enrollment = value;
                    OnPropertyChanged("Enrollment");
                }
            }
        }
        private Nullable<int> _enrollment;
    
        [DataMember]
        public string Comment
        {
            get { return _comment; }
            set
            {
                if (_comment != value)
                {
                    _comment = value;
                    OnPropertyChanged("Comment");
                }
            }
        }
        private string _comment;
    
        [DataMember]
        public string EMail
        {
            get { return _eMail; }
            set
            {
                if (_eMail != value)
                {
                    _eMail = value;
                    OnPropertyChanged("EMail");
                }
            }
        }
        private string _eMail;
    
        [DataMember]
        public Nullable<bool> IsPrivateOrg
        {
            get { return _isPrivateOrg; }
            set
            {
                if (_isPrivateOrg != value)
                {
                    _isPrivateOrg = value;
                    OnPropertyChanged("IsPrivateOrg");
                }
            }
        }
        private Nullable<bool> _isPrivateOrg;
    
        [DataMember]
        public Nullable<bool> IsAdultGroup
        {
            get { return _isAdultGroup; }
            set
            {
                if (_isAdultGroup != value)
                {
                    _isAdultGroup = value;
                    OnPropertyChanged("IsAdultGroup");
                }
            }
        }
        private Nullable<bool> _isAdultGroup;
    
        [DataMember]
        public Nullable<int> ParentID
        {
            get { return _parentID; }
            set
            {
                if (_parentID != value)
                {
                    _parentID = value;
                    OnPropertyChanged("ParentID");
                }
            }
        }
        private Nullable<int> _parentID;
    
        [DataMember]
        public Nullable<int> SalesRegionID
        {
            get { return _salesRegionID; }
            set
            {
                if (_salesRegionID != value)
                {
                    _salesRegionID = value;
                    OnPropertyChanged("SalesRegionID");
                }
            }
        }
        private Nullable<int> _salesRegionID;
    
        [DataMember]
        public Nullable<int> StatementPrintCycleID
        {
            get { return _statementPrintCycleID; }
            set
            {
                if (_statementPrintCycleID != value)
                {
                    _statementPrintCycleID = value;
                    OnPropertyChanged("StatementPrintCycleID");
                }
            }
        }
        private Nullable<int> _statementPrintCycleID;
    
        [DataMember]
        public Nullable<int> StatementPrintSlot
        {
            get { return _statementPrintSlot; }
            set
            {
                if (_statementPrintSlot != value)
                {
                    _statementPrintSlot = value;
                    OnPropertyChanged("StatementPrintSlot");
                }
            }
        }
        private Nullable<int> _statementPrintSlot;
    
        [DataMember]
        public Nullable<System.DateTime> DateCreatedTOSSthis
        {
            get { return _dateCreatedTOSSthis; }
            set
            {
                if (_dateCreatedTOSSthis != value)
                {
                    _dateCreatedTOSSthis = value;
                    OnPropertyChanged("DateCreatedTOSSthis");
                }
            }
        }
        private Nullable<System.DateTime> _dateCreatedTOSSthis;
    
        [DataMember]
        public Nullable<System.DateTime> DateUpdated
        {
            get { return _dateUpdated; }
            set
            {
                if (_dateUpdated != value)
                {
                    _dateUpdated = value;
                    OnPropertyChanged("DateUpdated");
                }
            }
        }
        private Nullable<System.DateTime> _dateUpdated;
    
        [DataMember]
        public int UserIDModified
        {
            get { return _userIDModified; }
            set
            {
                if (_userIDModified != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'UserIDModified' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _userIDModified = value;
                    OnPropertyChanged("UserIDModified");
                }
            }
        }
        private int _userIDModified;
    
        [DataMember]
        public string VendorNumber
        {
            get { return _vendorNumber; }
            set
            {
                if (_vendorNumber != value)
                {
                    _vendorNumber = value;
                    OnPropertyChanged("VendorNumber");
                }
            }
        }
        private string _vendorNumber;
    
        [DataMember]
        public string VendorSiteName
        {
            get { return _vendorSiteName; }
            set
            {
                if (_vendorSiteName != value)
                {
                    _vendorSiteName = value;
                    OnPropertyChanged("VendorSiteName");
                }
            }
        }
        private string _vendorSiteName;
    
        [DataMember]
        public string VendorPayGroup
        {
            get { return _vendorPayGroup; }
            set
            {
                if (_vendorPayGroup != value)
                {
                    _vendorPayGroup = value;
                    OnPropertyChanged("VendorPayGroup");
                }
            }
        }
        private string _vendorPayGroup;
    
        [DataMember]
        public string OriginalAddress1
        {
            get { return _originalAddress1; }
            set
            {
                if (_originalAddress1 != value)
                {
                    _originalAddress1 = value;
                    OnPropertyChanged("OriginalAddress1");
                }
            }
        }
        private string _originalAddress1;
    
        [DataMember]
        public string OriginalAddress2
        {
            get { return _originalAddress2; }
            set
            {
                if (_originalAddress2 != value)
                {
                    _originalAddress2 = value;
                    OnPropertyChanged("OriginalAddress2");
                }
            }
        }
        private string _originalAddress2;
    
        [DataMember]
        public string OriginalCity
        {
            get { return _originalCity; }
            set
            {
                if (_originalCity != value)
                {
                    _originalCity = value;
                    OnPropertyChanged("OriginalCity");
                }
            }
        }
        private string _originalCity;
    
        [DataMember]
        public string OriginalState
        {
            get { return _originalState; }
            set
            {
                if (_originalState != value)
                {
                    _originalState = value;
                    OnPropertyChanged("OriginalState");
                }
            }
        }
        private string _originalState;
    
        [DataMember]
        public string OriginalZip
        {
            get { return _originalZip; }
            set
            {
                if (_originalZip != value)
                {
                    _originalZip = value;
                    OnPropertyChanged("OriginalZip");
                }
            }
        }
        private string _originalZip;
    
        [DataMember]
        public string OriginalZip4
        {
            get { return _originalZip4; }
            set
            {
                if (_originalZip4 != value)
                {
                    _originalZip4 = value;
                    OnPropertyChanged("OriginalZip4");
                }
            }
        }
        private string _originalZip4;
    
        [DataMember]
        public string ShipToAddress1
        {
            get { return _shipToAddress1; }
            set
            {
                if (_shipToAddress1 != value)
                {
                    _shipToAddress1 = value;
                    OnPropertyChanged("ShipToAddress1");
                }
            }
        }
        private string _shipToAddress1;
    
        [DataMember]
        public string ShipToAddress2
        {
            get { return _shipToAddress2; }
            set
            {
                if (_shipToAddress2 != value)
                {
                    _shipToAddress2 = value;
                    OnPropertyChanged("ShipToAddress2");
                }
            }
        }
        private string _shipToAddress2;
    
        [DataMember]
        public string ShipToCity
        {
            get { return _shipToCity; }
            set
            {
                if (_shipToCity != value)
                {
                    _shipToCity = value;
                    OnPropertyChanged("ShipToCity");
                }
            }
        }
        private string _shipToCity;
    
        [DataMember]
        public string ShipToState
        {
            get { return _shipToState; }
            set
            {
                if (_shipToState != value)
                {
                    _shipToState = value;
                    OnPropertyChanged("ShipToState");
                }
            }
        }
        private string _shipToState;
    
        [DataMember]
        public string ShipToZip
        {
            get { return _shipToZip; }
            set
            {
                if (_shipToZip != value)
                {
                    _shipToZip = value;
                    OnPropertyChanged("ShipToZip");
                }
            }
        }
        private string _shipToZip;
    
        [DataMember]
        public string ShipToZip4
        {
            get { return _shipToZip4; }
            set
            {
                if (_shipToZip4 != value)
                {
                    _shipToZip4 = value;
                    OnPropertyChanged("ShipToZip4");
                }
            }
        }
        private string _shipToZip4;
    
        [DataMember]
        public string Sponsor
        {
            get { return _sponsor; }
            set
            {
                if (_sponsor != value)
                {
                    _sponsor = value;
                    OnPropertyChanged("Sponsor");
                }
            }
        }
        private string _sponsor;
    
        [DataMember]
        public Nullable<int> BusinessUnitID
        {
            get { return _businessUnitID; }
            set
            {
                if (_businessUnitID != value)
                {
                    _businessUnitID = value;
                    OnPropertyChanged("BusinessUnitID");
                }
            }
        }
        private Nullable<int> _businessUnitID;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
