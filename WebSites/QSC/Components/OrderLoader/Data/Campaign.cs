//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Data
{
    [DataContract(IsReference = true)]
    public partial class Campaign: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public int Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Status' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private int _status;
    
        [DataMember]
        public Nullable<bool> Renewal
        {
            get { return _renewal; }
            set
            {
                if (_renewal != value)
                {
                    _renewal = value;
                    OnPropertyChanged("Renewal");
                }
            }
        }
        private Nullable<bool> _renewal;
    
        [DataMember]
        public string Country
        {
            get { return _country; }
            set
            {
                if (_country != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Country' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _country = value;
                    OnPropertyChanged("Country");
                }
            }
        }
        private string _country;
    
        [DataMember]
        public string FMID
        {
            get { return _fMID; }
            set
            {
                if (_fMID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'FMID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _fMID = value;
                    OnPropertyChanged("FMID");
                }
            }
        }
        private string _fMID;
    
        [DataMember]
        public string DateChanged
        {
            get { return _dateChanged; }
            set
            {
                if (_dateChanged != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'DateChanged' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _dateChanged = value;
                    OnPropertyChanged("DateChanged");
                }
            }
        }
        private string _dateChanged;
    
        [DataMember]
        public string Lang
        {
            get { return _lang; }
            set
            {
                if (_lang != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Lang' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _lang = value;
                    OnPropertyChanged("Lang");
                }
            }
        }
        private string _lang;
    
        [DataMember]
        public Nullable<System.DateTime> EndDate
        {
            get { return _endDate; }
            set
            {
                if (_endDate != value)
                {
                    _endDate = value;
                    OnPropertyChanged("EndDate");
                }
            }
        }
        private Nullable<System.DateTime> _endDate;
    
        [DataMember]
        public Nullable<System.DateTime> StartDate
        {
            get { return _startDate; }
            set
            {
                if (_startDate != value)
                {
                    _startDate = value;
                    OnPropertyChanged("StartDate");
                }
            }
        }
        private Nullable<System.DateTime> _startDate;
    
        [DataMember]
        public Nullable<int> IncentivesBillToID
        {
            get { return _incentivesBillToID; }
            set
            {
                if (_incentivesBillToID != value)
                {
                    _incentivesBillToID = value;
                    OnPropertyChanged("IncentivesBillToID");
                }
            }
        }
        private Nullable<int> _incentivesBillToID;
    
        [DataMember]
        public int BillToAccountID
        {
            get { return _billToAccountID; }
            set
            {
                if (_billToAccountID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'BillToAccountID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _billToAccountID = value;
                    OnPropertyChanged("BillToAccountID");
                }
            }
        }
        private int _billToAccountID;
    
        [DataMember]
        public Nullable<int> ShipToCampaignContactID
        {
            get { return _shipToCampaignContactID; }
            set
            {
                if (_shipToCampaignContactID != value)
                {
                    _shipToCampaignContactID = value;
                    OnPropertyChanged("ShipToCampaignContactID");
                }
            }
        }
        private Nullable<int> _shipToCampaignContactID;
    
        [DataMember]
        public Nullable<int> ShipToAccountID
        {
            get { return _shipToAccountID; }
            set
            {
                if (_shipToAccountID != value)
                {
                    _shipToAccountID = value;
                    OnPropertyChanged("ShipToAccountID");
                }
            }
        }
        private Nullable<int> _shipToAccountID;
    
        [DataMember]
        public Nullable<decimal> EstimatedGross
        {
            get { return _estimatedGross; }
            set
            {
                if (_estimatedGross != value)
                {
                    _estimatedGross = value;
                    OnPropertyChanged("EstimatedGross");
                }
            }
        }
        private Nullable<decimal> _estimatedGross;
    
        [DataMember]
        public Nullable<int> NumberOfParticipants
        {
            get { return _numberOfParticipants; }
            set
            {
                if (_numberOfParticipants != value)
                {
                    _numberOfParticipants = value;
                    OnPropertyChanged("NumberOfParticipants");
                }
            }
        }
        private Nullable<int> _numberOfParticipants;
    
        [DataMember]
        public Nullable<int> NumberOfClassroooms
        {
            get { return _numberOfClassroooms; }
            set
            {
                if (_numberOfClassroooms != value)
                {
                    _numberOfClassroooms = value;
                    OnPropertyChanged("NumberOfClassroooms");
                }
            }
        }
        private Nullable<int> _numberOfClassroooms;
    
        [DataMember]
        public Nullable<int> NumberOfStaff
        {
            get { return _numberOfStaff; }
            set
            {
                if (_numberOfStaff != value)
                {
                    _numberOfStaff = value;
                    OnPropertyChanged("NumberOfStaff");
                }
            }
        }
        private Nullable<int> _numberOfStaff;
    
        [DataMember]
        public Nullable<int> BillToCampaignContactID
        {
            get { return _billToCampaignContactID; }
            set
            {
                if (_billToCampaignContactID != value)
                {
                    _billToCampaignContactID = value;
                    OnPropertyChanged("BillToCampaignContactID");
                }
            }
        }
        private Nullable<int> _billToCampaignContactID;
    
        [DataMember]
        public Nullable<int> SuppliesCampaignContactID
        {
            get { return _suppliesCampaignContactID; }
            set
            {
                if (_suppliesCampaignContactID != value)
                {
                    _suppliesCampaignContactID = value;
                    OnPropertyChanged("SuppliesCampaignContactID");
                }
            }
        }
        private Nullable<int> _suppliesCampaignContactID;
    
        [DataMember]
        public Nullable<int> SuppliesShipToCampaignContactID
        {
            get { return _suppliesShipToCampaignContactID; }
            set
            {
                if (_suppliesShipToCampaignContactID != value)
                {
                    _suppliesShipToCampaignContactID = value;
                    OnPropertyChanged("SuppliesShipToCampaignContactID");
                }
            }
        }
        private Nullable<int> _suppliesShipToCampaignContactID;
    
        [DataMember]
        public Nullable<System.DateTime> SuppliesDeliveryDate
        {
            get { return _suppliesDeliveryDate; }
            set
            {
                if (_suppliesDeliveryDate != value)
                {
                    _suppliesDeliveryDate = value;
                    OnPropertyChanged("SuppliesDeliveryDate");
                }
            }
        }
        private Nullable<System.DateTime> _suppliesDeliveryDate;
    
        [DataMember]
        public string SpecialInstructions
        {
            get { return _specialInstructions; }
            set
            {
                if (_specialInstructions != value)
                {
                    _specialInstructions = value;
                    OnPropertyChanged("SpecialInstructions");
                }
            }
        }
        private string _specialInstructions;
    
        [DataMember]
        public Nullable<bool> IsStaffOrder
        {
            get { return _isStaffOrder; }
            set
            {
                if (_isStaffOrder != value)
                {
                    _isStaffOrder = value;
                    OnPropertyChanged("IsStaffOrder");
                }
            }
        }
        private Nullable<bool> _isStaffOrder;
    
        [DataMember]
        public Nullable<decimal> StaffOrderDiscount
        {
            get { return _staffOrderDiscount; }
            set
            {
                if (_staffOrderDiscount != value)
                {
                    _staffOrderDiscount = value;
                    OnPropertyChanged("StaffOrderDiscount");
                }
            }
        }
        private Nullable<decimal> _staffOrderDiscount;
    
        [DataMember]
        public Nullable<bool> IsTestCampaign
        {
            get { return _isTestCampaign; }
            set
            {
                if (_isTestCampaign != value)
                {
                    _isTestCampaign = value;
                    OnPropertyChanged("IsTestCampaign");
                }
            }
        }
        private Nullable<bool> _isTestCampaign;
    
        [DataMember]
        public Nullable<System.DateTime> DateModified
        {
            get { return _dateModified; }
            set
            {
                if (_dateModified != value)
                {
                    _dateModified = value;
                    OnPropertyChanged("DateModified");
                }
            }
        }
        private Nullable<System.DateTime> _dateModified;
    
        [DataMember]
        public Nullable<int> UserIDModified
        {
            get { return _userIDModified; }
            set
            {
                if (_userIDModified != value)
                {
                    _userIDModified = value;
                    OnPropertyChanged("UserIDModified");
                }
            }
        }
        private Nullable<int> _userIDModified;
    
        [DataMember]
        public Nullable<bool> IsPayLater
        {
            get { return _isPayLater; }
            set
            {
                if (_isPayLater != value)
                {
                    _isPayLater = value;
                    OnPropertyChanged("IsPayLater");
                }
            }
        }
        private Nullable<bool> _isPayLater;
    
        [DataMember]
        public Nullable<int> IncentivesDistributionID
        {
            get { return _incentivesDistributionID; }
            set
            {
                if (_incentivesDistributionID != value)
                {
                    _incentivesDistributionID = value;
                    OnPropertyChanged("IncentivesDistributionID");
                }
            }
        }
        private Nullable<int> _incentivesDistributionID;
    
        [DataMember]
        public Nullable<bool> FSRequired
        {
            get { return _fSRequired; }
            set
            {
                if (_fSRequired != value)
                {
                    _fSRequired = value;
                    OnPropertyChanged("FSRequired");
                }
            }
        }
        private Nullable<bool> _fSRequired;
    
        [DataMember]
        public Nullable<bool> FSExtraRequired
        {
            get { return _fSExtraRequired; }
            set
            {
                if (_fSExtraRequired != value)
                {
                    _fSExtraRequired = value;
                    OnPropertyChanged("FSExtraRequired");
                }
            }
        }
        private Nullable<bool> _fSExtraRequired;
    
        [DataMember]
        public Nullable<bool> FSOrderRecCreated
        {
            get { return _fSOrderRecCreated; }
            set
            {
                if (_fSOrderRecCreated != value)
                {
                    _fSOrderRecCreated = value;
                    OnPropertyChanged("FSOrderRecCreated");
                }
            }
        }
        private Nullable<bool> _fSOrderRecCreated;
    
        [DataMember]
        public Nullable<System.DateTime> ApprovedStatusDate
        {
            get { return _approvedStatusDate; }
            set
            {
                if (_approvedStatusDate != value)
                {
                    _approvedStatusDate = value;
                    OnPropertyChanged("ApprovedStatusDate");
                }
            }
        }
        private Nullable<System.DateTime> _approvedStatusDate;
    
        [DataMember]
        public Nullable<System.DateTime> MagnetStatementDate
        {
            get { return _magnetStatementDate; }
            set
            {
                if (_magnetStatementDate != value)
                {
                    _magnetStatementDate = value;
                    OnPropertyChanged("MagnetStatementDate");
                }
            }
        }
        private Nullable<System.DateTime> _magnetStatementDate;
    
        [DataMember]
        public Nullable<bool> RewardsProgramCumulative
        {
            get { return _rewardsProgramCumulative; }
            set
            {
                if (_rewardsProgramCumulative != value)
                {
                    _rewardsProgramCumulative = value;
                    OnPropertyChanged("RewardsProgramCumulative");
                }
            }
        }
        private Nullable<bool> _rewardsProgramCumulative;
    
        [DataMember]
        public Nullable<bool> RewardsProgramChart
        {
            get { return _rewardsProgramChart; }
            set
            {
                if (_rewardsProgramChart != value)
                {
                    _rewardsProgramChart = value;
                    OnPropertyChanged("RewardsProgramChart");
                }
            }
        }
        private Nullable<bool> _rewardsProgramChart;
    
        [DataMember]
        public Nullable<bool> RewardsProgramDraw
        {
            get { return _rewardsProgramDraw; }
            set
            {
                if (_rewardsProgramDraw != value)
                {
                    _rewardsProgramDraw = value;
                    OnPropertyChanged("RewardsProgramDraw");
                }
            }
        }
        private Nullable<bool> _rewardsProgramDraw;
    
        [DataMember]
        public string ContactName
        {
            get { return _contactName; }
            set
            {
                if (_contactName != value)
                {
                    _contactName = value;
                    OnPropertyChanged("ContactName");
                }
            }
        }
        private string _contactName;
    
        [DataMember]
        public Nullable<int> PhoneListID
        {
            get { return _phoneListID; }
            set
            {
                if (_phoneListID != value)
                {
                    _phoneListID = value;
                    OnPropertyChanged("PhoneListID");
                }
            }
        }
        private Nullable<int> _phoneListID;
    
        [DataMember]
        public int SuppliesAddressID
        {
            get { return _suppliesAddressID; }
            set
            {
                if (_suppliesAddressID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'SuppliesAddressID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _suppliesAddressID = value;
                    OnPropertyChanged("SuppliesAddressID");
                }
            }
        }
        private int _suppliesAddressID;
    
        [DataMember]
        public Nullable<System.DateTime> DateSubmitted
        {
            get { return _dateSubmitted; }
            set
            {
                if (_dateSubmitted != value)
                {
                    _dateSubmitted = value;
                    OnPropertyChanged("DateSubmitted");
                }
            }
        }
        private Nullable<System.DateTime> _dateSubmitted;
    
        [DataMember]
        public Nullable<int> Extra_1Ups
        {
            get { return _extra_1Ups; }
            set
            {
                if (_extra_1Ups != value)
                {
                    _extra_1Ups = value;
                    OnPropertyChanged("Extra_1Ups");
                }
            }
        }
        private Nullable<int> _extra_1Ups;
    
        [DataMember]
        public Nullable<int> Extra_GiftForm
        {
            get { return _extra_GiftForm; }
            set
            {
                if (_extra_GiftForm != value)
                {
                    _extra_GiftForm = value;
                    OnPropertyChanged("Extra_GiftForm");
                }
            }
        }
        private Nullable<int> _extra_GiftForm;
    
        [DataMember]
        public bool OnlineOnlyPrograms
        {
            get { return _onlineOnlyPrograms; }
            set
            {
                if (_onlineOnlyPrograms != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'OnlineOnlyPrograms' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _onlineOnlyPrograms = value;
                    OnPropertyChanged("OnlineOnlyPrograms");
                }
            }
        }
        private bool _onlineOnlyPrograms;
    
        [DataMember]
        public Nullable<bool> ForceStatementPrint
        {
            get { return _forceStatementPrint; }
            set
            {
                if (_forceStatementPrint != value)
                {
                    _forceStatementPrint = value;
                    OnPropertyChanged("ForceStatementPrint");
                }
            }
        }
        private Nullable<bool> _forceStatementPrint;
    
        [DataMember]
        public Nullable<bool> DisableStatementPrint
        {
            get { return _disableStatementPrint; }
            set
            {
                if (_disableStatementPrint != value)
                {
                    _disableStatementPrint = value;
                    OnPropertyChanged("DisableStatementPrint");
                }
            }
        }
        private Nullable<bool> _disableStatementPrint;
    
        [DataMember]
        public Nullable<int> Extra_MagBrochure
        {
            get { return _extra_MagBrochure; }
            set
            {
                if (_extra_MagBrochure != value)
                {
                    _extra_MagBrochure = value;
                    OnPropertyChanged("Extra_MagBrochure");
                }
            }
        }
        private Nullable<int> _extra_MagBrochure;
    
        [DataMember]
        public Nullable<System.DateTime> CookieDoughDeliveryDate
        {
            get { return _cookieDoughDeliveryDate; }
            set
            {
                if (_cookieDoughDeliveryDate != value)
                {
                    _cookieDoughDeliveryDate = value;
                    OnPropertyChanged("CookieDoughDeliveryDate");
                }
            }
        }
        private Nullable<System.DateTime> _cookieDoughDeliveryDate;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
