//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Data
{
    [DataContract(IsReference = true)]
    public partial class ProductPricings: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int MagPrice_Instance
        {
            get { return _magPrice_Instance; }
            set
            {
                if (_magPrice_Instance != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'MagPrice_Instance' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _magPrice_Instance = value;
                    OnPropertyChanged("MagPrice_Instance");
                }
            }
        }
        private int _magPrice_Instance;
    
        [DataMember]
        public int Product_Instance
        {
            get { return _product_Instance; }
            set
            {
                if (_product_Instance != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Product_Instance' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _product_Instance = value;
                    OnPropertyChanged("Product_Instance");
                }
            }
        }
        private int _product_Instance;
    
        [DataMember]
        public int Pricing_Year
        {
            get { return _pricing_Year; }
            set
            {
                if (_pricing_Year != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Pricing_Year' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _pricing_Year = value;
                    OnPropertyChanged("Pricing_Year");
                }
            }
        }
        private int _pricing_Year;
    
        [DataMember]
        public string Pricing_Season
        {
            get { return _pricing_Season; }
            set
            {
                if (_pricing_Season != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Pricing_Season' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _pricing_Season = value;
                    OnPropertyChanged("Pricing_Season");
                }
            }
        }
        private string _pricing_Season;
    
        [DataMember]
        public string Product_Code
        {
            get { return _product_Code; }
            set
            {
                if (_product_Code != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Product_Code' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _product_Code = value;
                    OnPropertyChanged("Product_Code");
                }
            }
        }
        private string _product_Code;
    
        [DataMember]
        public Nullable<int> Program_ID
        {
            get { return _program_ID; }
            set
            {
                if (_program_ID != value)
                {
                    _program_ID = value;
                    OnPropertyChanged("Program_ID");
                }
            }
        }
        private Nullable<int> _program_ID;
    
        [DataMember]
        public string Program_Type
        {
            get { return _program_Type; }
            set
            {
                if (_program_Type != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Program_Type' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _program_Type = value;
                    OnPropertyChanged("Program_Type");
                }
            }
        }
        private string _program_Type;
    
        [DataMember]
        public int ProgramSectionID
        {
            get { return _programSectionID; }
            set
            {
                if (_programSectionID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ProgramSectionID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _programSectionID = value;
                    OnPropertyChanged("ProgramSectionID");
                }
            }
        }
        private int _programSectionID;
    
        [DataMember]
        public int Offer_Code
        {
            get { return _offer_Code; }
            set
            {
                if (_offer_Code != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Offer_Code' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _offer_Code = value;
                    OnPropertyChanged("Offer_Code");
                }
            }
        }
        private int _offer_Code;
    
        [DataMember]
        public Nullable<int> Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private Nullable<int> _status;
    
        [DataMember]
        public Nullable<decimal> Remit_Rate
        {
            get { return _remit_Rate; }
            set
            {
                if (_remit_Rate != value)
                {
                    _remit_Rate = value;
                    OnPropertyChanged("Remit_Rate");
                }
            }
        }
        private Nullable<decimal> _remit_Rate;
    
        [DataMember]
        public int Nbr_of_Issues
        {
            get { return _nbr_of_Issues; }
            set
            {
                if (_nbr_of_Issues != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Nbr_of_Issues' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _nbr_of_Issues = value;
                    OnPropertyChanged("Nbr_of_Issues");
                }
            }
        }
        private int _nbr_of_Issues;
    
        [DataMember]
        public Nullable<int> Duration
        {
            get { return _duration; }
            set
            {
                if (_duration != value)
                {
                    _duration = value;
                    OnPropertyChanged("Duration");
                }
            }
        }
        private Nullable<int> _duration;
    
        [DataMember]
        public string Duration_Measure
        {
            get { return _duration_Measure; }
            set
            {
                if (_duration_Measure != value)
                {
                    _duration_Measure = value;
                    OnPropertyChanged("Duration_Measure");
                }
            }
        }
        private string _duration_Measure;
    
        [DataMember]
        public Nullable<decimal> NewsStand_Price_Yr
        {
            get { return _newsStand_Price_Yr; }
            set
            {
                if (_newsStand_Price_Yr != value)
                {
                    _newsStand_Price_Yr = value;
                    OnPropertyChanged("NewsStand_Price_Yr");
                }
            }
        }
        private Nullable<decimal> _newsStand_Price_Yr;
    
        [DataMember]
        public Nullable<decimal> Basic_Price_Yr
        {
            get { return _basic_Price_Yr; }
            set
            {
                if (_basic_Price_Yr != value)
                {
                    _basic_Price_Yr = value;
                    OnPropertyChanged("Basic_Price_Yr");
                }
            }
        }
        private Nullable<decimal> _basic_Price_Yr;
    
        [DataMember]
        public decimal QSP_Price
        {
            get { return _qSP_Price; }
            set
            {
                if (_qSP_Price != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'QSP_Price' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _qSP_Price = value;
                    OnPropertyChanged("QSP_Price");
                }
            }
        }
        private decimal _qSP_Price;
    
        [DataMember]
        public Nullable<bool> EffortKeyRequired
        {
            get { return _effortKeyRequired; }
            set
            {
                if (_effortKeyRequired != value)
                {
                    _effortKeyRequired = value;
                    OnPropertyChanged("EffortKeyRequired");
                }
            }
        }
        private Nullable<bool> _effortKeyRequired;
    
        [DataMember]
        public string Effort_Key
        {
            get { return _effort_Key; }
            set
            {
                if (_effort_Key != value)
                {
                    _effort_Key = value;
                    OnPropertyChanged("Effort_Key");
                }
            }
        }
        private string _effort_Key;
    
        [DataMember]
        public string Logged_By
        {
            get { return _logged_By; }
            set
            {
                if (_logged_By != value)
                {
                    _logged_By = value;
                    OnPropertyChanged("Logged_By");
                }
            }
        }
        private string _logged_By;
    
        [DataMember]
        public Nullable<System.DateTime> Log_Dt
        {
            get { return _log_Dt; }
            set
            {
                if (_log_Dt != value)
                {
                    _log_Dt = value;
                    OnPropertyChanged("Log_Dt");
                }
            }
        }
        private Nullable<System.DateTime> _log_Dt;
    
        [DataMember]
        public Nullable<System.DateTime> EffectiveDate
        {
            get { return _effectiveDate; }
            set
            {
                if (_effectiveDate != value)
                {
                    _effectiveDate = value;
                    OnPropertyChanged("EffectiveDate");
                }
            }
        }
        private Nullable<System.DateTime> _effectiveDate;
    
        [DataMember]
        public Nullable<System.DateTime> EndDate
        {
            get { return _endDate; }
            set
            {
                if (_endDate != value)
                {
                    _endDate = value;
                    OnPropertyChanged("EndDate");
                }
            }
        }
        private Nullable<System.DateTime> _endDate;
    
        [DataMember]
        public Nullable<decimal> NewsStandPriceOriginalCurrency
        {
            get { return _newsStandPriceOriginalCurrency; }
            set
            {
                if (_newsStandPriceOriginalCurrency != value)
                {
                    _newsStandPriceOriginalCurrency = value;
                    OnPropertyChanged("NewsStandPriceOriginalCurrency");
                }
            }
        }
        private Nullable<decimal> _newsStandPriceOriginalCurrency;
    
        [DataMember]
        public Nullable<decimal> ConversionRate
        {
            get { return _conversionRate; }
            set
            {
                if (_conversionRate != value)
                {
                    _conversionRate = value;
                    OnPropertyChanged("ConversionRate");
                }
            }
        }
        private Nullable<decimal> _conversionRate;
    
        [DataMember]
        public string Comment
        {
            get { return _comment; }
            set
            {
                if (_comment != value)
                {
                    _comment = value;
                    OnPropertyChanged("Comment");
                }
            }
        }
        private string _comment;
    
        [DataMember]
        public Nullable<System.DateTime> DateSubmitted
        {
            get { return _dateSubmitted; }
            set
            {
                if (_dateSubmitted != value)
                {
                    _dateSubmitted = value;
                    OnPropertyChanged("DateSubmitted");
                }
            }
        }
        private Nullable<System.DateTime> _dateSubmitted;
    
        [DataMember]
        public Nullable<decimal> BasePriceOriginalCurrency
        {
            get { return _basePriceOriginalCurrency; }
            set
            {
                if (_basePriceOriginalCurrency != value)
                {
                    _basePriceOriginalCurrency = value;
                    OnPropertyChanged("BasePriceOriginalCurrency");
                }
            }
        }
        private Nullable<decimal> _basePriceOriginalCurrency;
    
        [DataMember]
        public int TaxRegionID
        {
            get { return _taxRegionID; }
            set
            {
                if (_taxRegionID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'TaxRegionID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _taxRegionID = value;
                    OnPropertyChanged("TaxRegionID");
                }
            }
        }
        private int _taxRegionID;
    
        [DataMember]
        public Nullable<decimal> DefaultGrossValue
        {
            get { return _defaultGrossValue; }
            set
            {
                if (_defaultGrossValue != value)
                {
                    _defaultGrossValue = value;
                    OnPropertyChanged("DefaultGrossValue");
                }
            }
        }
        private Nullable<decimal> _defaultGrossValue;
    
        [DataMember]
        public Nullable<decimal> FSExtra_Limit_Rate
        {
            get { return _fSExtra_Limit_Rate; }
            set
            {
                if (_fSExtra_Limit_Rate != value)
                {
                    _fSExtra_Limit_Rate = value;
                    OnPropertyChanged("FSExtra_Limit_Rate");
                }
            }
        }
        private Nullable<decimal> _fSExtra_Limit_Rate;
    
        [DataMember]
        public Nullable<bool> FSIsBrochure
        {
            get { return _fSIsBrochure; }
            set
            {
                if (_fSIsBrochure != value)
                {
                    _fSIsBrochure = value;
                    OnPropertyChanged("FSIsBrochure");
                }
            }
        }
        private Nullable<bool> _fSIsBrochure;
    
        [DataMember]
        public Nullable<decimal> FSApplicabilityId
        {
            get { return _fSApplicabilityId; }
            set
            {
                if (_fSApplicabilityId != value)
                {
                    _fSApplicabilityId = value;
                    OnPropertyChanged("FSApplicabilityId");
                }
            }
        }
        private Nullable<decimal> _fSApplicabilityId;
    
        [DataMember]
        public Nullable<decimal> FSDistributionLevelId
        {
            get { return _fSDistributionLevelId; }
            set
            {
                if (_fSDistributionLevelId != value)
                {
                    _fSDistributionLevelId = value;
                    OnPropertyChanged("FSDistributionLevelId");
                }
            }
        }
        private Nullable<decimal> _fSDistributionLevelId;
    
        [DataMember]
        public string Language_Code
        {
            get { return _language_Code; }
            set
            {
                if (_language_Code != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Language_Code' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _language_Code = value;
                    OnPropertyChanged("Language_Code");
                }
            }
        }
        private string _language_Code;
    
        [DataMember]
        public string FSCatalog_Product_Code
        {
            get { return _fSCatalog_Product_Code; }
            set
            {
                if (_fSCatalog_Product_Code != value)
                {
                    _fSCatalog_Product_Code = value;
                    OnPropertyChanged("FSCatalog_Product_Code");
                }
            }
        }
        private string _fSCatalog_Product_Code;
    
        [DataMember]
        public string FSContent_Catalog_Code
        {
            get { return _fSContent_Catalog_Code; }
            set
            {
                if (_fSContent_Catalog_Code != value)
                {
                    _fSContent_Catalog_Code = value;
                    OnPropertyChanged("FSContent_Catalog_Code");
                }
            }
        }
        private string _fSContent_Catalog_Code;
    
        [DataMember]
        public Nullable<int> FSProgram_Id
        {
            get { return _fSProgram_Id; }
            set
            {
                if (_fSProgram_Id != value)
                {
                    _fSProgram_Id = value;
                    OnPropertyChanged("FSProgram_Id");
                }
            }
        }
        private Nullable<int> _fSProgram_Id;
    
        [DataMember]
        public string OracleCode
        {
            get { return _oracleCode; }
            set
            {
                if (_oracleCode != value)
                {
                    _oracleCode = value;
                    OnPropertyChanged("OracleCode");
                }
            }
        }
        private string _oracleCode;
    
        [DataMember]
        public Nullable<bool> InternetApproval
        {
            get { return _internetApproval; }
            set
            {
                if (_internetApproval != value)
                {
                    _internetApproval = value;
                    OnPropertyChanged("InternetApproval");
                }
            }
        }
        private Nullable<bool> _internetApproval;
    
        [DataMember]
        public string ABCCode
        {
            get { return _aBCCode; }
            set
            {
                if (_aBCCode != value)
                {
                    _aBCCode = value;
                    OnPropertyChanged("ABCCode");
                }
            }
        }
        private string _aBCCode;
    
        [DataMember]
        public Nullable<int> MagProgram_Instance
        {
            get { return _magProgram_Instance; }
            set
            {
                if (_magProgram_Instance != value)
                {
                    _magProgram_Instance = value;
                    OnPropertyChanged("MagProgram_Instance");
                }
            }
        }
        private Nullable<int> _magProgram_Instance;
    
        [DataMember]
        public Nullable<bool> AdInCatalog
        {
            get { return _adInCatalog; }
            set
            {
                if (_adInCatalog != value)
                {
                    _adInCatalog = value;
                    OnPropertyChanged("AdInCatalog");
                }
            }
        }
        private Nullable<bool> _adInCatalog;
    
        [DataMember]
        public Nullable<int> AdPageSizeID
        {
            get { return _adPageSizeID; }
            set
            {
                if (_adPageSizeID != value)
                {
                    _adPageSizeID = value;
                    OnPropertyChanged("AdPageSizeID");
                }
            }
        }
        private Nullable<int> _adPageSizeID;
    
        [DataMember]
        public Nullable<decimal> AdCost
        {
            get { return _adCost; }
            set
            {
                if (_adCost != value)
                {
                    _adCost = value;
                    OnPropertyChanged("AdCost");
                }
            }
        }
        private Nullable<decimal> _adCost;
    
        [DataMember]
        public Nullable<int> AdCostCurrency
        {
            get { return _adCostCurrency; }
            set
            {
                if (_adCostCurrency != value)
                {
                    _adCostCurrency = value;
                    OnPropertyChanged("AdCostCurrency");
                }
            }
        }
        private Nullable<int> _adCostCurrency;
    
        [DataMember]
        public Nullable<int> ListingLevelID
        {
            get { return _listingLevelID; }
            set
            {
                if (_listingLevelID != value)
                {
                    _listingLevelID = value;
                    OnPropertyChanged("ListingLevelID");
                }
            }
        }
        private Nullable<int> _listingLevelID;
    
        [DataMember]
        public string ListingCopyText
        {
            get { return _listingCopyText; }
            set
            {
                if (_listingCopyText != value)
                {
                    _listingCopyText = value;
                    OnPropertyChanged("ListingCopyText");
                }
            }
        }
        private string _listingCopyText;
    
        [DataMember]
        public Nullable<int> QSPPremiumID
        {
            get { return _qSPPremiumID; }
            set
            {
                if (_qSPPremiumID != value)
                {
                    _qSPPremiumID = value;
                    OnPropertyChanged("QSPPremiumID");
                }
            }
        }
        private Nullable<int> _qSPPremiumID;
    
        [DataMember]
        public string prdPremiumInd
        {
            get { return _prdPremiumInd; }
            set
            {
                if (_prdPremiumInd != value)
                {
                    _prdPremiumInd = value;
                    OnPropertyChanged("prdPremiumInd");
                }
            }
        }
        private string _prdPremiumInd;
    
        [DataMember]
        public string prdPremiumCode
        {
            get { return _prdPremiumCode; }
            set
            {
                if (_prdPremiumCode != value)
                {
                    _prdPremiumCode = value;
                    OnPropertyChanged("prdPremiumCode");
                }
            }
        }
        private string _prdPremiumCode;
    
        [DataMember]
        public string prdPremiumCopy
        {
            get { return _prdPremiumCopy; }
            set
            {
                if (_prdPremiumCopy != value)
                {
                    _prdPremiumCopy = value;
                    OnPropertyChanged("prdPremiumCopy");
                }
            }
        }
        private string _prdPremiumCopy;
    
        [DataMember]
        public string FSProvinceCode
        {
            get { return _fSProvinceCode; }
            set
            {
                if (_fSProvinceCode != value)
                {
                    _fSProvinceCode = value;
                    OnPropertyChanged("FSProvinceCode");
                }
            }
        }
        private string _fSProvinceCode;
    
        [DataMember]
        public Nullable<int> ContractFormReceived
        {
            get { return _contractFormReceived; }
            set
            {
                if (_contractFormReceived != value)
                {
                    _contractFormReceived = value;
                    OnPropertyChanged("ContractFormReceived");
                }
            }
        }
        private Nullable<int> _contractFormReceived;
    
        [DataMember]
        public string MagazineCoverFilename
        {
            get { return _magazineCoverFilename; }
            set
            {
                if (_magazineCoverFilename != value)
                {
                    _magazineCoverFilename = value;
                    OnPropertyChanged("MagazineCoverFilename");
                }
            }
        }
        private string _magazineCoverFilename;
    
        [DataMember]
        public string CatalogAdFilename
        {
            get { return _catalogAdFilename; }
            set
            {
                if (_catalogAdFilename != value)
                {
                    _catalogAdFilename = value;
                    OnPropertyChanged("CatalogAdFilename");
                }
            }
        }
        private string _catalogAdFilename;
    
        [DataMember]
        public Nullable<int> CatalogPageNumber
        {
            get { return _catalogPageNumber; }
            set
            {
                if (_catalogPageNumber != value)
                {
                    _catalogPageNumber = value;
                    OnPropertyChanged("CatalogPageNumber");
                }
            }
        }
        private Nullable<int> _catalogPageNumber;
    
        [DataMember]
        public Nullable<int> PlacementLevel
        {
            get { return _placementLevel; }
            set
            {
                if (_placementLevel != value)
                {
                    _placementLevel = value;
                    OnPropertyChanged("PlacementLevel");
                }
            }
        }
        private Nullable<int> _placementLevel;
    
        [DataMember]
        public string ContractComment
        {
            get { return _contractComment; }
            set
            {
                if (_contractComment != value)
                {
                    _contractComment = value;
                    OnPropertyChanged("ContractComment");
                }
            }
        }
        private string _contractComment;
    
        [DataMember]
        public string PrinterComment
        {
            get { return _printerComment; }
            set
            {
                if (_printerComment != value)
                {
                    _printerComment = value;
                    OnPropertyChanged("PrinterComment");
                }
            }
        }
        private string _printerComment;
    
        [DataMember]
        public string QSPCAListingCopyText
        {
            get { return _qSPCAListingCopyText; }
            set
            {
                if (_qSPCAListingCopyText != value)
                {
                    _qSPCAListingCopyText = value;
                    OnPropertyChanged("QSPCAListingCopyText");
                }
            }
        }
        private string _qSPCAListingCopyText;
    
        [DataMember]
        public Nullable<decimal> BasePriceSansPostage
        {
            get { return _basePriceSansPostage; }
            set
            {
                if (_basePriceSansPostage != value)
                {
                    _basePriceSansPostage = value;
                    OnPropertyChanged("BasePriceSansPostage");
                }
            }
        }
        private Nullable<decimal> _basePriceSansPostage;
    
        [DataMember]
        public Nullable<decimal> PostageRemitRate
        {
            get { return _postageRemitRate; }
            set
            {
                if (_postageRemitRate != value)
                {
                    _postageRemitRate = value;
                    OnPropertyChanged("PostageRemitRate");
                }
            }
        }
        private Nullable<decimal> _postageRemitRate;
    
        [DataMember]
        public Nullable<decimal> PostageAmount
        {
            get { return _postageAmount; }
            set
            {
                if (_postageAmount != value)
                {
                    _postageAmount = value;
                    OnPropertyChanged("PostageAmount");
                }
            }
        }
        private Nullable<decimal> _postageAmount;
    
        [DataMember]
        public Nullable<decimal> BaseRemitRate
        {
            get { return _baseRemitRate; }
            set
            {
                if (_baseRemitRate != value)
                {
                    _baseRemitRate = value;
                    OnPropertyChanged("BaseRemitRate");
                }
            }
        }
        private Nullable<decimal> _baseRemitRate;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
