//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Data
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CustomerOrderHeader))]
    public partial class Batch: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public System.DateTime Date
        {
            get { return _date; }
            set
            {
                if (_date != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Date' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _date = value;
                    OnPropertyChanged("Date");
                }
            }
        }
        private System.DateTime _date;
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public Nullable<int> AccountID
        {
            get { return _accountID; }
            set
            {
                if (_accountID != value)
                {
                    _accountID = value;
                    OnPropertyChanged("AccountID");
                }
            }
        }
        private Nullable<int> _accountID;
    
        [DataMember]
        public Nullable<int> EnterredCount
        {
            get { return _enterredCount; }
            set
            {
                if (_enterredCount != value)
                {
                    _enterredCount = value;
                    OnPropertyChanged("EnterredCount");
                }
            }
        }
        private Nullable<int> _enterredCount = 0;
    
        [DataMember]
        public Nullable<decimal> EnterredAmount
        {
            get { return _enterredAmount; }
            set
            {
                if (_enterredAmount != value)
                {
                    _enterredAmount = value;
                    OnPropertyChanged("EnterredAmount");
                }
            }
        }
        private Nullable<decimal> _enterredAmount;
    
        [DataMember]
        public Nullable<decimal> CalculatedAmount
        {
            get { return _calculatedAmount; }
            set
            {
                if (_calculatedAmount != value)
                {
                    _calculatedAmount = value;
                    OnPropertyChanged("CalculatedAmount");
                }
            }
        }
        private Nullable<decimal> _calculatedAmount;
    
        [DataMember]
        public Nullable<int> StatusInstance
        {
            get { return _statusInstance; }
            set
            {
                if (_statusInstance != value)
                {
                    _statusInstance = value;
                    OnPropertyChanged("StatusInstance");
                }
            }
        }
        private Nullable<int> _statusInstance;
    
        [DataMember]
        public string KE3FileName
        {
            get { return _kE3FileName; }
            set
            {
                if (_kE3FileName != value)
                {
                    _kE3FileName = value;
                    OnPropertyChanged("KE3FileName");
                }
            }
        }
        private string _kE3FileName;
    
        [DataMember]
        public string ChangeUserID
        {
            get { return _changeUserID; }
            set
            {
                if (_changeUserID != value)
                {
                    _changeUserID = value;
                    OnPropertyChanged("ChangeUserID");
                }
            }
        }
        private string _changeUserID;
    
        [DataMember]
        public Nullable<System.DateTime> ChangeDate
        {
            get { return _changeDate; }
            set
            {
                if (_changeDate != value)
                {
                    _changeDate = value;
                    OnPropertyChanged("ChangeDate");
                }
            }
        }
        private Nullable<System.DateTime> _changeDate;
    
        [DataMember]
        public Nullable<int> TeacherCount
        {
            get { return _teacherCount; }
            set
            {
                if (_teacherCount != value)
                {
                    _teacherCount = value;
                    OnPropertyChanged("TeacherCount");
                }
            }
        }
        private Nullable<int> _teacherCount;
    
        [DataMember]
        public Nullable<int> StudentCount
        {
            get { return _studentCount; }
            set
            {
                if (_studentCount != value)
                {
                    _studentCount = value;
                    OnPropertyChanged("StudentCount");
                }
            }
        }
        private Nullable<int> _studentCount;
    
        [DataMember]
        public Nullable<int> CustomerCount
        {
            get { return _customerCount; }
            set
            {
                if (_customerCount != value)
                {
                    _customerCount = value;
                    OnPropertyChanged("CustomerCount");
                }
            }
        }
        private Nullable<int> _customerCount;
    
        [DataMember]
        public Nullable<int> OrderCount
        {
            get { return _orderCount; }
            set
            {
                if (_orderCount != value)
                {
                    _orderCount = value;
                    OnPropertyChanged("OrderCount");
                }
            }
        }
        private Nullable<int> _orderCount;
    
        [DataMember]
        public Nullable<int> OrderCountAccept
        {
            get { return _orderCountAccept; }
            set
            {
                if (_orderCountAccept != value)
                {
                    _orderCountAccept = value;
                    OnPropertyChanged("OrderCountAccept");
                }
            }
        }
        private Nullable<int> _orderCountAccept;
    
        [DataMember]
        public Nullable<int> OrderDetailCount
        {
            get { return _orderDetailCount; }
            set
            {
                if (_orderDetailCount != value)
                {
                    _orderDetailCount = value;
                    OnPropertyChanged("OrderDetailCount");
                }
            }
        }
        private Nullable<int> _orderDetailCount;
    
        [DataMember]
        public Nullable<int> OrderDetailCountError
        {
            get { return _orderDetailCountError; }
            set
            {
                if (_orderDetailCountError != value)
                {
                    _orderDetailCountError = value;
                    OnPropertyChanged("OrderDetailCountError");
                }
            }
        }
        private Nullable<int> _orderDetailCountError;
    
        [DataMember]
        public Nullable<System.DateTime> StartImportTime
        {
            get { return _startImportTime; }
            set
            {
                if (_startImportTime != value)
                {
                    _startImportTime = value;
                    OnPropertyChanged("StartImportTime");
                }
            }
        }
        private Nullable<System.DateTime> _startImportTime;
    
        [DataMember]
        public Nullable<System.DateTime> EndImportTime
        {
            get { return _endImportTime; }
            set
            {
                if (_endImportTime != value)
                {
                    _endImportTime = value;
                    OnPropertyChanged("EndImportTime");
                }
            }
        }
        private Nullable<System.DateTime> _endImportTime;
    
        [DataMember]
        public Nullable<int> ImportTimeSeconds
        {
            get { return _importTimeSeconds; }
            set
            {
                if (_importTimeSeconds != value)
                {
                    _importTimeSeconds = value;
                    OnPropertyChanged("ImportTimeSeconds");
                }
            }
        }
        private Nullable<int> _importTimeSeconds;
    
        [DataMember]
        public string Clerk
        {
            get { return _clerk; }
            set
            {
                if (_clerk != value)
                {
                    _clerk = value;
                    OnPropertyChanged("Clerk");
                }
            }
        }
        private string _clerk;
    
        [DataMember]
        public Nullable<System.DateTime> DateCreated
        {
            get { return _dateCreated; }
            set
            {
                if (_dateCreated != value)
                {
                    _dateCreated = value;
                    OnPropertyChanged("DateCreated");
                }
            }
        }
        private Nullable<System.DateTime> _dateCreated;
    
        [DataMember]
        public string UserIDCreated
        {
            get { return _userIDCreated; }
            set
            {
                if (_userIDCreated != value)
                {
                    _userIDCreated = value;
                    OnPropertyChanged("UserIDCreated");
                }
            }
        }
        private string _userIDCreated;
    
        [DataMember]
        public Nullable<System.DateTime> DateKeyed
        {
            get { return _dateKeyed; }
            set
            {
                if (_dateKeyed != value)
                {
                    _dateKeyed = value;
                    OnPropertyChanged("DateKeyed");
                }
            }
        }
        private Nullable<System.DateTime> _dateKeyed;
    
        [DataMember]
        public Nullable<System.DateTime> DateBatchCompleted
        {
            get { return _dateBatchCompleted; }
            set
            {
                if (_dateBatchCompleted != value)
                {
                    _dateBatchCompleted = value;
                    OnPropertyChanged("DateBatchCompleted");
                }
            }
        }
        private Nullable<System.DateTime> _dateBatchCompleted;
    
        [DataMember]
        public Nullable<bool> OverridePctState
        {
            get { return _overridePctState; }
            set
            {
                if (_overridePctState != value)
                {
                    _overridePctState = value;
                    OnPropertyChanged("OverridePctState");
                }
            }
        }
        private Nullable<bool> _overridePctState;
    
        [DataMember]
        public Nullable<decimal> PctState
        {
            get { return _pctState; }
            set
            {
                if (_pctState != value)
                {
                    _pctState = value;
                    OnPropertyChanged("PctState");
                }
            }
        }
        private Nullable<decimal> _pctState;
    
        [DataMember]
        public Nullable<int> OriginalStatusInstance
        {
            get { return _originalStatusInstance; }
            set
            {
                if (_originalStatusInstance != value)
                {
                    _originalStatusInstance = value;
                    OnPropertyChanged("OriginalStatusInstance");
                }
            }
        }
        private Nullable<int> _originalStatusInstance;
    
        [DataMember]
        public Nullable<int> OrderTypeCode
        {
            get { return _orderTypeCode; }
            set
            {
                if (_orderTypeCode != value)
                {
                    _orderTypeCode = value;
                    OnPropertyChanged("OrderTypeCode");
                }
            }
        }
        private Nullable<int> _orderTypeCode;
    
        [DataMember]
        public Nullable<int> CampaignID
        {
            get { return _campaignID; }
            set
            {
                if (_campaignID != value)
                {
                    _campaignID = value;
                    OnPropertyChanged("CampaignID");
                }
            }
        }
        private Nullable<int> _campaignID;
    
        [DataMember]
        public Nullable<int> BillToAddressID
        {
            get { return _billToAddressID; }
            set
            {
                if (_billToAddressID != value)
                {
                    _billToAddressID = value;
                    OnPropertyChanged("BillToAddressID");
                }
            }
        }
        private Nullable<int> _billToAddressID;
    
        [DataMember]
        public Nullable<int> ShipToAddressID
        {
            get { return _shipToAddressID; }
            set
            {
                if (_shipToAddressID != value)
                {
                    _shipToAddressID = value;
                    OnPropertyChanged("ShipToAddressID");
                }
            }
        }
        private Nullable<int> _shipToAddressID;
    
        [DataMember]
        public Nullable<int> ShipToAccountID
        {
            get { return _shipToAccountID; }
            set
            {
                if (_shipToAccountID != value)
                {
                    _shipToAccountID = value;
                    OnPropertyChanged("ShipToAccountID");
                }
            }
        }
        private Nullable<int> _shipToAccountID;
    
        [DataMember]
        public string BillToFMID
        {
            get { return _billToFMID; }
            set
            {
                if (_billToFMID != value)
                {
                    _billToFMID = value;
                    OnPropertyChanged("BillToFMID");
                }
            }
        }
        private string _billToFMID;
    
        [DataMember]
        public string ShipToFMID
        {
            get { return _shipToFMID; }
            set
            {
                if (_shipToFMID != value)
                {
                    _shipToFMID = value;
                    OnPropertyChanged("ShipToFMID");
                }
            }
        }
        private string _shipToFMID;
    
        [DataMember]
        public Nullable<int> ReportedEnvelopes
        {
            get { return _reportedEnvelopes; }
            set
            {
                if (_reportedEnvelopes != value)
                {
                    _reportedEnvelopes = value;
                    OnPropertyChanged("ReportedEnvelopes");
                }
            }
        }
        private Nullable<int> _reportedEnvelopes;
    
        [DataMember]
        public Nullable<decimal> PaymentSend
        {
            get { return _paymentSend; }
            set
            {
                if (_paymentSend != value)
                {
                    _paymentSend = value;
                    OnPropertyChanged("PaymentSend");
                }
            }
        }
        private Nullable<decimal> _paymentSend;
    
        [DataMember]
        public Nullable<decimal> SalesBeforeTax
        {
            get { return _salesBeforeTax; }
            set
            {
                if (_salesBeforeTax != value)
                {
                    _salesBeforeTax = value;
                    OnPropertyChanged("SalesBeforeTax");
                }
            }
        }
        private Nullable<decimal> _salesBeforeTax;
    
        [DataMember]
        public Nullable<System.DateTime> DateSent
        {
            get { return _dateSent; }
            set
            {
                if (_dateSent != value)
                {
                    _dateSent = value;
                    OnPropertyChanged("DateSent");
                }
            }
        }
        private Nullable<System.DateTime> _dateSent;
    
        [DataMember]
        public Nullable<System.DateTime> DateReceived
        {
            get { return _dateReceived; }
            set
            {
                if (_dateReceived != value)
                {
                    _dateReceived = value;
                    OnPropertyChanged("DateReceived");
                }
            }
        }
        private Nullable<System.DateTime> _dateReceived;
    
        [DataMember]
        public string ContactFirstName
        {
            get { return _contactFirstName; }
            set
            {
                if (_contactFirstName != value)
                {
                    _contactFirstName = value;
                    OnPropertyChanged("ContactFirstName");
                }
            }
        }
        private string _contactFirstName;
    
        [DataMember]
        public string ContactLastName
        {
            get { return _contactLastName; }
            set
            {
                if (_contactLastName != value)
                {
                    _contactLastName = value;
                    OnPropertyChanged("ContactLastName");
                }
            }
        }
        private string _contactLastName;
    
        [DataMember]
        public string ContactEmail
        {
            get { return _contactEmail; }
            set
            {
                if (_contactEmail != value)
                {
                    _contactEmail = value;
                    OnPropertyChanged("ContactEmail");
                }
            }
        }
        private string _contactEmail;
    
        [DataMember]
        public string ContactPhone
        {
            get { return _contactPhone; }
            set
            {
                if (_contactPhone != value)
                {
                    _contactPhone = value;
                    OnPropertyChanged("ContactPhone");
                }
            }
        }
        private string _contactPhone;
    
        [DataMember]
        public string Comment
        {
            get { return _comment; }
            set
            {
                if (_comment != value)
                {
                    _comment = value;
                    OnPropertyChanged("Comment");
                }
            }
        }
        private string _comment;
    
        [DataMember]
        public Nullable<int> IncentiveCalculationStatus
        {
            get { return _incentiveCalculationStatus; }
            set
            {
                if (_incentiveCalculationStatus != value)
                {
                    _incentiveCalculationStatus = value;
                    OnPropertyChanged("IncentiveCalculationStatus");
                }
            }
        }
        private Nullable<int> _incentiveCalculationStatus;
    
        [DataMember]
        public Nullable<int> MagnetBookletCount
        {
            get { return _magnetBookletCount; }
            set
            {
                if (_magnetBookletCount != value)
                {
                    _magnetBookletCount = value;
                    OnPropertyChanged("MagnetBookletCount");
                }
            }
        }
        private Nullable<int> _magnetBookletCount;
    
        [DataMember]
        public Nullable<int> MagnetCardCount
        {
            get { return _magnetCardCount; }
            set
            {
                if (_magnetCardCount != value)
                {
                    _magnetCardCount = value;
                    OnPropertyChanged("MagnetCardCount");
                }
            }
        }
        private Nullable<int> _magnetCardCount;
    
        [DataMember]
        public Nullable<int> MagnetGoodCardCount
        {
            get { return _magnetGoodCardCount; }
            set
            {
                if (_magnetGoodCardCount != value)
                {
                    _magnetGoodCardCount = value;
                    OnPropertyChanged("MagnetGoodCardCount");
                }
            }
        }
        private Nullable<int> _magnetGoodCardCount;
    
        [DataMember]
        public Nullable<int> MagnetCardsMailed
        {
            get { return _magnetCardsMailed; }
            set
            {
                if (_magnetCardsMailed != value)
                {
                    _magnetCardsMailed = value;
                    OnPropertyChanged("MagnetCardsMailed");
                }
            }
        }
        private Nullable<int> _magnetCardsMailed;
    
        [DataMember]
        public Nullable<System.DateTime> MagnetMailDate
        {
            get { return _magnetMailDate; }
            set
            {
                if (_magnetMailDate != value)
                {
                    _magnetMailDate = value;
                    OnPropertyChanged("MagnetMailDate");
                }
            }
        }
        private Nullable<System.DateTime> _magnetMailDate;
    
        [DataMember]
        public Nullable<System.DateTime> PickDate
        {
            get { return _pickDate; }
            set
            {
                if (_pickDate != value)
                {
                    _pickDate = value;
                    OnPropertyChanged("PickDate");
                }
            }
        }
        private Nullable<System.DateTime> _pickDate;
    
        [DataMember]
        public Nullable<bool> IsDMApproved
        {
            get { return _isDMApproved; }
            set
            {
                if (_isDMApproved != value)
                {
                    _isDMApproved = value;
                    OnPropertyChanged("IsDMApproved");
                }
            }
        }
        private Nullable<bool> _isDMApproved;
    
        [DataMember]
        public string CountryCode
        {
            get { return _countryCode; }
            set
            {
                if (_countryCode != value)
                {
                    _countryCode = value;
                    OnPropertyChanged("CountryCode");
                }
            }
        }
        private string _countryCode;
    
        [DataMember]
        public Nullable<int> PickLine
        {
            get { return _pickLine; }
            set
            {
                if (_pickLine != value)
                {
                    _pickLine = value;
                    OnPropertyChanged("PickLine");
                }
            }
        }
        private Nullable<int> _pickLine;
    
        [DataMember]
        public Nullable<int> OrderQualifierID
        {
            get { return _orderQualifierID; }
            set
            {
                if (_orderQualifierID != value)
                {
                    _orderQualifierID = value;
                    OnPropertyChanged("OrderQualifierID");
                }
            }
        }
        private Nullable<int> _orderQualifierID;
    
        [DataMember]
        public Nullable<decimal> CheckPayableToQSPAmount
        {
            get { return _checkPayableToQSPAmount; }
            set
            {
                if (_checkPayableToQSPAmount != value)
                {
                    _checkPayableToQSPAmount = value;
                    OnPropertyChanged("CheckPayableToQSPAmount");
                }
            }
        }
        private Nullable<decimal> _checkPayableToQSPAmount;
    
        [DataMember]
        public Nullable<bool> IsIncentive
        {
            get { return _isIncentive; }
            set
            {
                if (_isIncentive != value)
                {
                    _isIncentive = value;
                    OnPropertyChanged("IsIncentive");
                }
            }
        }
        private Nullable<bool> _isIncentive;
    
        [DataMember]
        public Nullable<System.DateTime> OrderDeliveryDate
        {
            get { return _orderDeliveryDate; }
            set
            {
                if (_orderDeliveryDate != value)
                {
                    _orderDeliveryDate = value;
                    OnPropertyChanged("OrderDeliveryDate");
                }
            }
        }
        private Nullable<System.DateTime> _orderDeliveryDate;
    
        [DataMember]
        public Nullable<int> RefNumber
        {
            get { return _refNumber; }
            set
            {
                if (_refNumber != value)
                {
                    _refNumber = value;
                    OnPropertyChanged("RefNumber");
                }
            }
        }
        private Nullable<int> _refNumber;
    
        [DataMember]
        public Nullable<System.DateTime> PaymentBatchDate
        {
            get { return _paymentBatchDate; }
            set
            {
                if (_paymentBatchDate != value)
                {
                    _paymentBatchDate = value;
                    OnPropertyChanged("PaymentBatchDate");
                }
            }
        }
        private Nullable<System.DateTime> _paymentBatchDate;
    
        [DataMember]
        public Nullable<int> PaymentBatchID
        {
            get { return _paymentBatchID; }
            set
            {
                if (_paymentBatchID != value)
                {
                    _paymentBatchID = value;
                    OnPropertyChanged("PaymentBatchID");
                }
            }
        }
        private Nullable<int> _paymentBatchID;
    
        [DataMember]
        public Nullable<bool> IsStaffOrder
        {
            get { return _isStaffOrder; }
            set
            {
                if (_isStaffOrder != value)
                {
                    _isStaffOrder = value;
                    OnPropertyChanged("IsStaffOrder");
                }
            }
        }
        private Nullable<bool> _isStaffOrder;
    
        [DataMember]
        public Nullable<bool> InquireUponComplete
        {
            get { return _inquireUponComplete; }
            set
            {
                if (_inquireUponComplete != value)
                {
                    _inquireUponComplete = value;
                    OnPropertyChanged("InquireUponComplete");
                }
            }
        }
        private Nullable<bool> _inquireUponComplete;
    
        [DataMember]
        public Nullable<decimal> GroupProfit
        {
            get { return _groupProfit; }
            set
            {
                if (_groupProfit != value)
                {
                    _groupProfit = value;
                    OnPropertyChanged("GroupProfit");
                }
            }
        }
        private Nullable<decimal> _groupProfit;
    
        [DataMember]
        public int OrderID
        {
            get { return _orderID; }
            set
            {
                if (_orderID != value)
                {
                    _orderID = value;
                    OnPropertyChanged("OrderID");
                }
            }
        }
        private int _orderID;
    
        [DataMember]
        public Nullable<decimal> OrderAmntDue
        {
            get { return _orderAmntDue; }
            set
            {
                if (_orderAmntDue != value)
                {
                    _orderAmntDue = value;
                    OnPropertyChanged("OrderAmntDue");
                }
            }
        }
        private Nullable<decimal> _orderAmntDue;
    
        [DataMember]
        public Nullable<decimal> MagnetPostage
        {
            get { return _magnetPostage; }
            set
            {
                if (_magnetPostage != value)
                {
                    _magnetPostage = value;
                    OnPropertyChanged("MagnetPostage");
                }
            }
        }
        private Nullable<decimal> _magnetPostage;
    
        [DataMember]
        public Nullable<int> OrderIDIncentive
        {
            get { return _orderIDIncentive; }
            set
            {
                if (_orderIDIncentive != value)
                {
                    _orderIDIncentive = value;
                    OnPropertyChanged("OrderIDIncentive");
                }
            }
        }
        private Nullable<int> _orderIDIncentive;
    
        [DataMember]
        public Nullable<bool> IsInvoiced
        {
            get { return _isInvoiced; }
            set
            {
                if (_isInvoiced != value)
                {
                    _isInvoiced = value;
                    OnPropertyChanged("IsInvoiced");
                }
            }
        }
        private Nullable<bool> _isInvoiced;
    
        [DataMember]
        public Nullable<decimal> CampaignNetTotal
        {
            get { return _campaignNetTotal; }
            set
            {
                if (_campaignNetTotal != value)
                {
                    _campaignNetTotal = value;
                    OnPropertyChanged("CampaignNetTotal");
                }
            }
        }
        private Nullable<decimal> _campaignNetTotal;
    
        [DataMember]
        public Nullable<int> DistributionCenterID
        {
            get { return _distributionCenterID; }
            set
            {
                if (_distributionCenterID != value)
                {
                    _distributionCenterID = value;
                    OnPropertyChanged("DistributionCenterID");
                }
            }
        }
        private Nullable<int> _distributionCenterID;
    
        [DataMember]
        public Nullable<int> IsMagQueueDone
        {
            get { return _isMagQueueDone; }
            set
            {
                if (_isMagQueueDone != value)
                {
                    _isMagQueueDone = value;
                    OnPropertyChanged("IsMagQueueDone");
                }
            }
        }
        private Nullable<int> _isMagQueueDone;
    
        [DataMember]
        public Nullable<int> ProblemID
        {
            get { return _problemID; }
            set
            {
                if (_problemID != value)
                {
                    _problemID = value;
                    OnPropertyChanged("ProblemID");
                }
            }
        }
        private Nullable<int> _problemID;
    
        [DataMember]
        public Nullable<System.DateTime> CheckDate
        {
            get { return _checkDate; }
            set
            {
                if (_checkDate != value)
                {
                    _checkDate = value;
                    OnPropertyChanged("CheckDate");
                }
            }
        }
        private Nullable<System.DateTime> _checkDate;
    
        [DataMember]
        public Nullable<int> CheckNumber
        {
            get { return _checkNumber; }
            set
            {
                if (_checkNumber != value)
                {
                    _checkNumber = value;
                    OnPropertyChanged("CheckNumber");
                }
            }
        }
        private Nullable<int> _checkNumber;
    
        [DataMember]
        public Nullable<decimal> MagnetUnitPostage
        {
            get { return _magnetUnitPostage; }
            set
            {
                if (_magnetUnitPostage != value)
                {
                    _magnetUnitPostage = value;
                    OnPropertyChanged("MagnetUnitPostage");
                }
            }
        }
        private Nullable<decimal> _magnetUnitPostage;
    
        [DataMember]
        public Nullable<int> PostageAdjustmentID
        {
            get { return _postageAdjustmentID; }
            set
            {
                if (_postageAdjustmentID != value)
                {
                    _postageAdjustmentID = value;
                    OnPropertyChanged("PostageAdjustmentID");
                }
            }
        }
        private Nullable<int> _postageAdjustmentID;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CustomerOrderHeader> CustomerOrderHeaders
        {
            get
            {
                if (_customerOrderHeaders == null)
                {
                    _customerOrderHeaders = new TrackableCollection<CustomerOrderHeader>();
                    _customerOrderHeaders.CollectionChanged += FixupCustomerOrderHeaders;
                }
                return _customerOrderHeaders;
            }
            set
            {
                if (!ReferenceEquals(_customerOrderHeaders, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_customerOrderHeaders != null)
                    {
                        _customerOrderHeaders.CollectionChanged -= FixupCustomerOrderHeaders;
                    }
                    _customerOrderHeaders = value;
                    if (_customerOrderHeaders != null)
                    {
                        _customerOrderHeaders.CollectionChanged += FixupCustomerOrderHeaders;
                    }
                    OnNavigationPropertyChanged("CustomerOrderHeaders");
                }
            }
        }
        private TrackableCollection<CustomerOrderHeader> _customerOrderHeaders;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CustomerOrderHeaders.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupCustomerOrderHeaders(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CustomerOrderHeader item in e.NewItems)
                {
                    item.Batch = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CustomerOrderHeaders", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CustomerOrderHeader item in e.OldItems)
                {
                    if (ReferenceEquals(item.Batch, this))
                    {
                        item.Batch = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CustomerOrderHeaders", item);
                    }
                }
            }
        }

        #endregion
    }
}
