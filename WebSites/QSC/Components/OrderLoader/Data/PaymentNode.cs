//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Data
{
    
    public partial class PaymentNode : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int Type
        {
            get { return _type; }
            set
            {
                if (_type != value)
                {
                    OnComplexPropertyChanging();
                    _type = value;
                    OnPropertyChanged("Type");
                }
            }
        }
        private int _type;
    
        [DataMember]
        public string PayorName
        {
            get { return _payorName; }
            set
            {
                if (_payorName != value)
                {
                    OnComplexPropertyChanging();
                    _payorName = value;
                    OnPropertyChanged("PayorName");
                }
            }
        }
        private string _payorName;
    
        [DataMember]
        public int CardType
        {
            get { return _cardType; }
            set
            {
                if (_cardType != value)
                {
                    OnComplexPropertyChanging();
                    _cardType = value;
                    OnPropertyChanged("CardType");
                }
            }
        }
        private int _cardType;
    
        [DataMember]
        public string CreditCardNumber
        {
            get { return _creditCardNumber; }
            set
            {
                if (_creditCardNumber != value)
                {
                    OnComplexPropertyChanging();
                    _creditCardNumber = value;
                    OnPropertyChanged("CreditCardNumber");
                }
            }
        }
        private string _creditCardNumber;
    
        [DataMember]
        public string VERISIGNID
        {
            get { return _vERISIGNID; }
            set
            {
                if (_vERISIGNID != value)
                {
                    OnComplexPropertyChanging();
                    _vERISIGNID = value;
                    OnPropertyChanged("VERISIGNID");
                }
            }
        }
        private string _vERISIGNID;
    
        [DataMember]
        public string EXP
        {
            get { return _eXP; }
            set
            {
                if (_eXP != value)
                {
                    OnComplexPropertyChanging();
                    _eXP = value;
                    OnPropertyChanged("EXP");
                }
            }
        }
        private string _eXP;
    
        [DataMember]
        public string PHONE
        {
            get { return _pHONE; }
            set
            {
                if (_pHONE != value)
                {
                    OnComplexPropertyChanging();
                    _pHONE = value;
                    OnPropertyChanged("PHONE");
                }
            }
        }
        private string _pHONE;
    
        [DataMember]
        public int STATUSINSTANCE
        {
            get { return _sTATUSINSTANCE; }
            set
            {
                if (_sTATUSINSTANCE != value)
                {
                    OnComplexPropertyChanging();
                    _sTATUSINSTANCE = value;
                    OnPropertyChanged("STATUSINSTANCE");
                }
            }
        }
        private int _sTATUSINSTANCE;

        #endregion
        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, PaymentNode complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Type", parentPropertyName), complexObject == null ? null : (object)complexObject.Type);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.PayorName", parentPropertyName), complexObject == null ? null : (object)complexObject.PayorName);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CardType", parentPropertyName), complexObject == null ? null : (object)complexObject.CardType);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CreditCardNumber", parentPropertyName), complexObject == null ? null : (object)complexObject.CreditCardNumber);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.VERISIGNID", parentPropertyName), complexObject == null ? null : (object)complexObject.VERISIGNID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EXP", parentPropertyName), complexObject == null ? null : (object)complexObject.EXP);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.PHONE", parentPropertyName), complexObject == null ? null : (object)complexObject.PHONE);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.STATUSINSTANCE", parentPropertyName), complexObject == null ? null : (object)complexObject.STATUSINSTANCE);
        }

        #endregion
    }
}
