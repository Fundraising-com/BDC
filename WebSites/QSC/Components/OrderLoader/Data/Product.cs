//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Data
{
    [DataContract(IsReference = true)]
    public partial class Product: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int Product_Instance
        {
            get { return _product_Instance; }
            set
            {
                if (_product_Instance != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Product_Instance' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _product_Instance = value;
                    OnPropertyChanged("Product_Instance");
                }
            }
        }
        private int _product_Instance;
    
        [DataMember]
        public string Product_Code
        {
            get { return _product_Code; }
            set
            {
                if (_product_Code != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Product_Code' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _product_Code = value;
                    OnPropertyChanged("Product_Code");
                }
            }
        }
        private string _product_Code;
    
        [DataMember]
        public Nullable<int> Product_Year
        {
            get { return _product_Year; }
            set
            {
                if (_product_Year != value)
                {
                    _product_Year = value;
                    OnPropertyChanged("Product_Year");
                }
            }
        }
        private Nullable<int> _product_Year;
    
        [DataMember]
        public string Product_Season
        {
            get { return _product_Season; }
            set
            {
                if (_product_Season != value)
                {
                    _product_Season = value;
                    OnPropertyChanged("Product_Season");
                }
            }
        }
        private string _product_Season;
    
        [DataMember]
        public string Alpha_Code
        {
            get { return _alpha_Code; }
            set
            {
                if (_alpha_Code != value)
                {
                    _alpha_Code = value;
                    OnPropertyChanged("Alpha_Code");
                }
            }
        }
        private string _alpha_Code;
    
        [DataMember]
        public string Product_Name
        {
            get { return _product_Name; }
            set
            {
                if (_product_Name != value)
                {
                    _product_Name = value;
                    OnPropertyChanged("Product_Name");
                }
            }
        }
        private string _product_Name;
    
        [DataMember]
        public string Product_Sort_Name
        {
            get { return _product_Sort_Name; }
            set
            {
                if (_product_Sort_Name != value)
                {
                    _product_Sort_Name = value;
                    OnPropertyChanged("Product_Sort_Name");
                }
            }
        }
        private string _product_Sort_Name;
    
        [DataMember]
        public Nullable<int> Pub_Nbr
        {
            get { return _pub_Nbr; }
            set
            {
                if (_pub_Nbr != value)
                {
                    _pub_Nbr = value;
                    OnPropertyChanged("Pub_Nbr");
                }
            }
        }
        private Nullable<int> _pub_Nbr;
    
        [DataMember]
        public string Ages
        {
            get { return _ages; }
            set
            {
                if (_ages != value)
                {
                    _ages = value;
                    OnPropertyChanged("Ages");
                }
            }
        }
        private string _ages;
    
        [DataMember]
        public string Internet
        {
            get { return _internet; }
            set
            {
                if (_internet != value)
                {
                    _internet = value;
                    OnPropertyChanged("Internet");
                }
            }
        }
        private string _internet;
    
        [DataMember]
        public Nullable<System.DateTime> Issue_Rcvd_Dt
        {
            get { return _issue_Rcvd_Dt; }
            set
            {
                if (_issue_Rcvd_Dt != value)
                {
                    _issue_Rcvd_Dt = value;
                    OnPropertyChanged("Issue_Rcvd_Dt");
                }
            }
        }
        private Nullable<System.DateTime> _issue_Rcvd_Dt;
    
        [DataMember]
        public string CoverReceived
        {
            get { return _coverReceived; }
            set
            {
                if (_coverReceived != value)
                {
                    _coverReceived = value;
                    OnPropertyChanged("CoverReceived");
                }
            }
        }
        private string _coverReceived;
    
        [DataMember]
        public Nullable<int> HighlightCover
        {
            get { return _highlightCover; }
            set
            {
                if (_highlightCover != value)
                {
                    _highlightCover = value;
                    OnPropertyChanged("HighlightCover");
                }
            }
        }
        private Nullable<int> _highlightCover;
    
        [DataMember]
        public Nullable<int> Featuring
        {
            get { return _featuring; }
            set
            {
                if (_featuring != value)
                {
                    _featuring = value;
                    OnPropertyChanged("Featuring");
                }
            }
        }
        private Nullable<int> _featuring;
    
        [DataMember]
        public string Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private string _status;
    
        [DataMember]
        public string Comment
        {
            get { return _comment; }
            set
            {
                if (_comment != value)
                {
                    _comment = value;
                    OnPropertyChanged("Comment");
                }
            }
        }
        private string _comment;
    
        [DataMember]
        public Nullable<System.DateTime> CommentDate
        {
            get { return _commentDate; }
            set
            {
                if (_commentDate != value)
                {
                    _commentDate = value;
                    OnPropertyChanged("CommentDate");
                }
            }
        }
        private Nullable<System.DateTime> _commentDate;
    
        [DataMember]
        public Nullable<int> Category_Code
        {
            get { return _category_Code; }
            set
            {
                if (_category_Code != value)
                {
                    _category_Code = value;
                    OnPropertyChanged("Category_Code");
                }
            }
        }
        private Nullable<int> _category_Code;
    
        [DataMember]
        public string Fulfill_House_Nbr
        {
            get { return _fulfill_House_Nbr; }
            set
            {
                if (_fulfill_House_Nbr != value)
                {
                    _fulfill_House_Nbr = value;
                    OnPropertyChanged("Fulfill_House_Nbr");
                }
            }
        }
        private string _fulfill_House_Nbr;
    
        [DataMember]
        public string Mail_Dt
        {
            get { return _mail_Dt; }
            set
            {
                if (_mail_Dt != value)
                {
                    _mail_Dt = value;
                    OnPropertyChanged("Mail_Dt");
                }
            }
        }
        private string _mail_Dt;
    
        [DataMember]
        public Nullable<System.DateTime> Auth_Form_Rtrn_Dt
        {
            get { return _auth_Form_Rtrn_Dt; }
            set
            {
                if (_auth_Form_Rtrn_Dt != value)
                {
                    _auth_Form_Rtrn_Dt = value;
                    OnPropertyChanged("Auth_Form_Rtrn_Dt");
                }
            }
        }
        private Nullable<System.DateTime> _auth_Form_Rtrn_Dt;
    
        [DataMember]
        public string IssueDateUsed
        {
            get { return _issueDateUsed; }
            set
            {
                if (_issueDateUsed != value)
                {
                    _issueDateUsed = value;
                    OnPropertyChanged("IssueDateUsed");
                }
            }
        }
        private string _issueDateUsed;
    
        [DataMember]
        public string Logged_By
        {
            get { return _logged_By; }
            set
            {
                if (_logged_By != value)
                {
                    _logged_By = value;
                    OnPropertyChanged("Logged_By");
                }
            }
        }
        private string _logged_By;
    
        [DataMember]
        public Nullable<System.DateTime> Log_Dt
        {
            get { return _log_Dt; }
            set
            {
                if (_log_Dt != value)
                {
                    _log_Dt = value;
                    OnPropertyChanged("Log_Dt");
                }
            }
        }
        private Nullable<System.DateTime> _log_Dt;
    
        [DataMember]
        public string Lang
        {
            get { return _lang; }
            set
            {
                if (_lang != value)
                {
                    _lang = value;
                    OnPropertyChanged("Lang");
                }
            }
        }
        private string _lang;
    
        [DataMember]
        public Nullable<int> ProductLine
        {
            get { return _productLine; }
            set
            {
                if (_productLine != value)
                {
                    _productLine = value;
                    OnPropertyChanged("ProductLine");
                }
            }
        }
        private Nullable<int> _productLine;
    
        [DataMember]
        public Nullable<int> DaysLeadTime
        {
            get { return _daysLeadTime; }
            set
            {
                if (_daysLeadTime != value)
                {
                    _daysLeadTime = value;
                    OnPropertyChanged("DaysLeadTime");
                }
            }
        }
        private Nullable<int> _daysLeadTime;
    
        [DataMember]
        public string VendorNumber
        {
            get { return _vendorNumber; }
            set
            {
                if (_vendorNumber != value)
                {
                    _vendorNumber = value;
                    OnPropertyChanged("VendorNumber");
                }
            }
        }
        private string _vendorNumber;
    
        [DataMember]
        public string VendorSiteName
        {
            get { return _vendorSiteName; }
            set
            {
                if (_vendorSiteName != value)
                {
                    _vendorSiteName = value;
                    OnPropertyChanged("VendorSiteName");
                }
            }
        }
        private string _vendorSiteName;
    
        [DataMember]
        public string PayGroupLookUpCode
        {
            get { return _payGroupLookUpCode; }
            set
            {
                if (_payGroupLookUpCode != value)
                {
                    _payGroupLookUpCode = value;
                    OnPropertyChanged("PayGroupLookUpCode");
                }
            }
        }
        private string _payGroupLookUpCode;
    
        [DataMember]
        public string TermsName
        {
            get { return _termsName; }
            set
            {
                if (_termsName != value)
                {
                    _termsName = value;
                    OnPropertyChanged("TermsName");
                }
            }
        }
        private string _termsName;
    
        [DataMember]
        public Nullable<int> Currency
        {
            get { return _currency; }
            set
            {
                if (_currency != value)
                {
                    _currency = value;
                    OnPropertyChanged("Currency");
                }
            }
        }
        private Nullable<int> _currency;
    
        [DataMember]
        public string CountryCode
        {
            get { return _countryCode; }
            set
            {
                if (_countryCode != value)
                {
                    _countryCode = value;
                    OnPropertyChanged("CountryCode");
                }
            }
        }
        private string _countryCode;
    
        [DataMember]
        public Nullable<int> Type
        {
            get { return _type; }
            set
            {
                if (_type != value)
                {
                    _type = value;
                    OnPropertyChanged("Type");
                }
            }
        }
        private Nullable<int> _type;
    
        [DataMember]
        public string UnitOfMeasure
        {
            get { return _unitOfMeasure; }
            set
            {
                if (_unitOfMeasure != value)
                {
                    _unitOfMeasure = value;
                    OnPropertyChanged("UnitOfMeasure");
                }
            }
        }
        private string _unitOfMeasure;
    
        [DataMember]
        public Nullable<int> UOMConvFactor
        {
            get { return _uOMConvFactor; }
            set
            {
                if (_uOMConvFactor != value)
                {
                    _uOMConvFactor = value;
                    OnPropertyChanged("UOMConvFactor");
                }
            }
        }
        private Nullable<int> _uOMConvFactor;
    
        [DataMember]
        public Nullable<decimal> UnitWeight
        {
            get { return _unitWeight; }
            set
            {
                if (_unitWeight != value)
                {
                    _unitWeight = value;
                    OnPropertyChanged("UnitWeight");
                }
            }
        }
        private Nullable<decimal> _unitWeight;
    
        [DataMember]
        public Nullable<decimal> UnitCost
        {
            get { return _unitCost; }
            set
            {
                if (_unitCost != value)
                {
                    _unitCost = value;
                    OnPropertyChanged("UnitCost");
                }
            }
        }
        private Nullable<decimal> _unitCost;
    
        [DataMember]
        public string OracleCode
        {
            get { return _oracleCode; }
            set
            {
                if (_oracleCode != value)
                {
                    _oracleCode = value;
                    OnPropertyChanged("OracleCode");
                }
            }
        }
        private string _oracleCode;
    
        [DataMember]
        public string Prize_Level
        {
            get { return _prize_Level; }
            set
            {
                if (_prize_Level != value)
                {
                    _prize_Level = value;
                    OnPropertyChanged("Prize_Level");
                }
            }
        }
        private string _prize_Level;
    
        [DataMember]
        public Nullable<int> Prize_Level_Qty_Required
        {
            get { return _prize_Level_Qty_Required; }
            set
            {
                if (_prize_Level_Qty_Required != value)
                {
                    _prize_Level_Qty_Required = value;
                    OnPropertyChanged("Prize_Level_Qty_Required");
                }
            }
        }
        private Nullable<int> _prize_Level_Qty_Required;
    
        [DataMember]
        public Nullable<int> Nbr_Of_Issues_Per_Year
        {
            get { return _nbr_Of_Issues_Per_Year; }
            set
            {
                if (_nbr_Of_Issues_Per_Year != value)
                {
                    _nbr_Of_Issues_Per_Year = value;
                    OnPropertyChanged("Nbr_Of_Issues_Per_Year");
                }
            }
        }
        private Nullable<int> _nbr_Of_Issues_Per_Year;
    
        [DataMember]
        public string RemitCode
        {
            get { return _remitCode; }
            set
            {
                if (_remitCode != value)
                {
                    _remitCode = value;
                    OnPropertyChanged("RemitCode");
                }
            }
        }
        private string _remitCode;
    
        [DataMember]
        public Nullable<bool> IsQSPExclusive
        {
            get { return _isQSPExclusive; }
            set
            {
                if (_isQSPExclusive != value)
                {
                    _isQSPExclusive = value;
                    OnPropertyChanged("IsQSPExclusive");
                }
            }
        }
        private Nullable<bool> _isQSPExclusive;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
